(function(angular){angular.module('s3',['s3.core','s3.widgets','s3.translate','s3.data','ch.filters','angular-toArrayFilter','ui.slider','localytics.directives','ngclipboard']).run(run);run.$inject=['chosen','$filter'];function run(chosen,$filter){chosen.no_results_text=$filter('translate')('general.chosen.noResultsText');chosen.placeholder_text_multiple=$filter('translate')('general.chosen.placeholderTextMultiple');chosen.placeholder_text=$filter('translate')('general.chosen.placeholderText')}})(angular);(function(angular){angular.module('s3.core',['ngSanitize','ui.router','ckeditor','s3.core.request'])})(angular);(function(angular){'use strict';angular.module('s3.core.request',[])})(angular);(function(angular){'use strict';angular.module('s3.translate',['pascalprecht.translate'])})(angular);(function(angular){angular.module('s3.data.dynamic',['nemLogging','ui-leaflet','ui.sortable','angularSpectrumColorpicker'])})(angular);(function(angular){angular.module('s3.data.layout',['ui.calendar','thousand.delimiter'])})(angular);(function(angular){angular.module('s3.data.folder',['ui.bootstrap.contextMenu'])})(angular);(function(angular){angular.module('s3.data.template.group',[])})(angular);(function(angular){angular.module('s3.data.template',['ui.ace','s3.data.template.group'])})(angular);(function(angular){angular.module('s3.data.user',[])})(angular);(function(angular){angular.module('s3.data.image',['ui.sortable'])})(angular);(function(angular){angular.module('s3.data.layoutMenu',[])})(angular);(function(angular){angular.module('s3.data',['s3.data.dynamic','s3.data.user','s3.data.image','s3.data.template','s3.data.layout','s3.data.layoutMenu'])})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup',['angularModalService'])})(angular);(function(angular){angular.module('s3.widgets.mindmap',[])})(angular);(function(angular){angular.module('s3.widgets',['treeControl','ngCookies','ui.tree','s3.widgets.popup','s3.widgets.mindmap','ngDraggable'])})(angular);(function(angular){angular.module('s3.translate').config(TranslateConfig);TranslateConfig.$inject=['$translateProvider'];function TranslateConfig($translateProvider){$translateProvider.preferredLanguage('ru')}})(angular);(function(angular){'use strict';angular.module('s3').config(s3Config);s3Config.$inject=['$locationProvider','$translateProvider','$compileProvider','$qProvider'];function s3Config($locationProvider,$translateProvider,$compileProvider,$qProvider){$locationProvider.hashPrefix('!');$translateProvider.useSanitizeValueStrategy('escape');$compileProvider.preAssignBindingsEnabled(true);$compileProvider.debugInfoEnabled(false);$qProvider.errorOnUnhandledRejections(false)}})(angular);(function(){'use strict';angular.module('s3.data.dynamic').config(DynamicRoutes);DynamicRoutes.$inject=['$stateProvider','$urlRouterProvider'];function DynamicRoutes($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){window.location="/-/cms/v1/default/?"+window.ACCESS+"#"+$location.hash()});$stateProvider.state('debug',{url:'/debug',templateUrl:'/my/s3/js/angular/s3/data/dynamic/debug/view/s3.dynamic.debug.view.html',controller:'DynamicDebugController',controllerAs:'Debug'}).state('dynamic',{url:'/dynamic',templateUrl:'/my/s3/js/angular/s3/data/dynamic/main/dynamic.main.html',controller:'DynamicMainController',controllerAs:'DynamicMain',resolve:{dynamicMainRouteService:dynamicMainRouteService}}).state('dynamicActionTreeMain',{url:'/dynamic/action-tree',templateUrl:'/my/s3/js/angular/s3/data/dynamic/action.tree/tree/main/dynamic.action.tree.main.html',controller:'DynamicActionTreeMainController',controllerAs:'Ctrl'}).state('dynamicActionTreeView',{url:'/dynamic/action-tree/:dt_action_tree_id',templateUrl:'/my/s3/js/angular/s3/data/dynamic/action.tree/tree/view/dynamic.action.tree.view.html',controller:'DynamicActionTreeViewController',controllerAs:'Ctrl'}).state('dynamicQueryMain',{url:'/dynamic/query/',templateUrl:'/my/s3/js/angular/s3/data/dynamic/query/main/dynamic.query.main.html',controller:'DynamicQueryMainController',controllerAs:'Ctrl'}).state('dynamicParamList',{url:'/dynamic/param',templateUrl:'/my/s3/js/angular/s3/data/dynamic/param/list/dynamic.param.list.html',controller:'DynamicParamListController',controllerAs:'ParamList',resolve:{dynamicParamListRouteService:dynamicParamListRouteService}}).state('dynamicTypeView',{url:'/dynamic/type/:dt_type_id',templateUrl:'/my/s3/js/angular/s3/data/dynamic/type/view/dynamic.type.view.html',controller:'DynamicTypeViewController',controllerAs:'Type'}).state('dynamicTypeParamList',{url:'/dynamic/type/:dt_type_id/param',templateUrl:'/my/s3/js/angular/s3/data/dynamic/type.param/list/dynamic.type.param.list.html',controller:'DynamicTypeParamListController',controllerAs:'TypeParamList',resolve:{dynamicTypeParamListRouteService:dynamicTypeParamListRouteService}}).state('dynamicQueueTasks',{url:'/dynamic/queue/',templateUrl:'/my/s3/js/angular/s3/data/dynamic/queue/main/dynamic.queue.main.html',controller:'DynamicQueueTasksController',controllerAs:'Ctrl'}).state('template',{url:'/template',templateUrl:'/my/s3/js/angular/s3/data/template/s3.data.template.html',controller:'DynamicTemplateController',controllerAs:'Template'}).state('layout',{url:'/layout/:alias',templateUrl:'/my/s3/js/angular/s3/data/layout/s3.data.layout.html',controller:'DynamicLayoutController',controllerAs:'Layout'}).state('editMenu',{url:'/editMenu',templateUrl:'/my/s3/js/angular/s3/data/layout.menu/s3.data.layout.menu.html',controller:'DynamicLayoutMenuController',controllerAs:'LayoutMenu'}).state('dynamicEvent',{url:'/dynamic/event/',templateUrl:'/my/s3/js/angular/s3/data/dynamic/event/main/dynamic.event.main.html',controller:'DynamicEventController',controllerAs:'Ctrl'}).state('dynamicSitemapSettings',{url:'/dynamic/sitemap_settings/',templateUrl:'/my/s3/js/angular/s3/data/dynamic/sitemap.settings/main/dynamic.sitemap.settings.main.html',controller:'DynamicSitemapSettingsController',controllerAs:'Ctrl'})}dynamicMainRouteService.$inject=['dynamicTypeDataService'];function dynamicMainRouteService(dynamicTypeDataService){return dynamicTypeDataService.getMainData()}dynamicParamListRouteService.$inject=['dynamicParamDataService'];function dynamicParamListRouteService(dynamicParamDataService){return dynamicParamDataService.getMainData()}dynamicTypeParamListRouteService.$inject=['$stateParams','dynamicTypeParamDataService'];function dynamicTypeParamListRouteService($stateParams,dynamicTypeParamDataService){var dt_type_id=$stateParams.dt_type_id;return dynamicTypeParamDataService.getMainData(dt_type_id)}})();(function(angular){'use strict';angular.module('s3.widgets').filter('propsFilter',function(){return function(items,props){var out=[];if(angular.isArray(items)){items.forEach(function(item){var itemMatches=false;var keys=Object.keys(props);for(var i=0;i<keys.length;i++){var prop=keys[i];var text=props[prop].toLowerCase();if(item[prop].toString().toLowerCase().indexOf(text)!==-1){itemMatches=true;break}}if(itemMatches){out.push(item)}})}else{out=items}return out}})})(angular);(function(window,angular){'use strict';angular.module('s3').constant('CMS_ADVANCED',window.CMS_ADVANCED).constant('HAS_FORUM',window.HAS_FORUM).constant('DEV_MODE',window.DEV_MODE).constant('IS_PARTNER',window.IS_PARTNER).constant('IS_STAFF',window.IS_STAFF).constant('S3_VERSION',window.DEV_MODE).constant('ACCESS',window.ACCESS).constant('VER_ID',window.VER_ID).constant('DOMAIN_MASK',window.DOMAIN_MASK).constant('PROTOCOL',window.PROTOCOL).run(['$rootScope','s3DataService','dynamicActionTreeService','s3PopupService',function($rootScope,s3DataService,dynamicActionTreeService,s3PopupService){var button={Data:{},data:{},actionData:{}};$rootScope.CMS_ADVANCED=window.CMS_ADVANCED;$rootScope.HAS_FORUM=window.HAS_FORUM;$rootScope.DEV_MODE=window.DEV_MODE;$rootScope.IS_PARTNER=window.IS_PARTNER;$rootScope.IS_STAFF=window.IS_STAFF;$rootScope.S3_VERSION=window.S3_VERSION;$rootScope.ACCESS=window.ACCESS;$rootScope.VER_ID=window.VER_ID;$rootScope.DOMAIN_MASK=window.DOMAIN_MASK;$rootScope.PROTOCOL=window.PROTOCOL;$rootScope.YMAPS={'map':'21.10.07-0-b210928130500','sat':'3.893.0','skl':'21.10.07-0-b210928130500'};$rootScope.storage={};$rootScope.objectStorage={};$rootScope.fn={buttonClick:buttonClick};$rootScope.isStaff=function(){return window.IS_STAFF};s3DataService.getCmsInfo().then(function(result){$rootScope.OLD_ACCESS_POINT=result.uri;$rootScope.site=result.site;$rootScope.can_edit_global=result.can_edit_global});function clearButtonData(){button={Data:{},data:{},actionData:{}}}function buttonClick(params){if(params){prepareData(params);if(params.popup==true&&params.popupTemplate){if(typeof button.data['object_id']=='undefined'){if(typeof button.data['hide']=='undefined'){button.data['hide']={}}button.data['hide']['save']=true}s3PopupService.modal(params.popupTemplate,button.data)}else{}}}function prepareData(params){clearButtonData();if(typeof params.action!='undefined'){button.actionData['alias']=params.action;if(_.size(params.actionParams)){button.actionData['params']=params.actionParams}button.data['action']=button.actionData}if(params.popup==true&&typeof params.popupData!='undefined'){_.each(params.popupData,function(item,key){if(key=='scheme'){button.data['schemeUpdate']=function(newScheme){$rootScope.storage[item.keyStorage].result.scheme=newScheme}}else{button.data[key]=item}});if(params.popupName){button.data['title']=params.popupName}if(params.popupClass){button.data['class']=params.popupClass}if(params.popupWidth){button.data['width']=params.popupWidth}if(params.popupMaxWidth){button.data['maxWidth']=params.popupMaxWidth}if(params.popupHide){button.data['hide']=params.popupHide}}if(typeof params.action!='undefined'&&params.actionRunClick==true){button.data['preLoad']=true;button.Data={actionData:button.actionData};if(params.actionCallback){button.Data['callback']=params.actionCallback}if(params.actionStorageKey){button.Data['keyStorage']=params.actionStorageKey}if(params.confirm&&params.confirmText){s3PopupService.confirm(params.confirmText,true).then(function(modal){modal.close.then(function(response){if(response){dynamicActionTreeService.runAction(button.Data,$rootScope.storage)}})})}else{dynamicActionTreeService.runAction(button.Data,$rootScope.storage)}}}}])})(window,angular);(function(window,angular){'use strict';angular.module('s3').constant('_',window._).run(['$rootScope',function($rootScope){$rootScope._=_;_.mixin({'clearObject':clearObject,'extendObject':extendObject,'replaceObject':replaceObject});function clearObject(object){_.forEach(_.keys(object),function(key){delete object[key]})}function extendObject(src_object,ext_object){_.forEach(ext_object,function(value,key){if(_.isObject(src_object[key])&&!_.isArray(src_object[key])&&_.isObject(value)){replaceObject(src_object[key],value)}else{src_object[key]=value}})}function replaceObject(src_object,ext_object){clearObject(src_object);extendObject(src_object,ext_object)}}])})(window,angular);(function(window,angular){'use strict';angular.module('s3').constant('jsPlumb',window.jsPlumb)})(window,angular);(function(angular){'use strict';angular.module('s3.core.request').service('s3RequestService',s3RequestService);s3RequestService.$inject=['$http','$window','s3PopupService'];function s3RequestService($http,$window,s3PopupService){var __uri;this.get=getHandler;this.post=postHandler;this.put=putHandler;this.delete=deleteHandler;return this;function _setUri(dataType){__uri='/-/cms/v2/dynamic/';if(dataType){__uri+=dataType+'/'}}function getHandler(dataType,cmd,data){if(!cmd){throw new Error('cmd needed for api get request')}if(typeof data!='object'){data={}}_setUri(dataType);return _request('GET',cmd,data)}function postHandler(dataType,cmd,data){if(!cmd){throw new Error('cmd needed for api post request')}if(typeof data!='object'){data={}}_setUri(dataType);return _request('POST',cmd,data)}function putHandler(dataType,cmd,data){if(!cmd){throw new Error('cmd needed for api put request')}if(typeof data!='object'){data={}}_setUri(dataType);return _request('PUT',cmd,data)}function deleteHandler(dataType,cmd,data){if(!cmd){throw new Error('cmd needed for api delete request')}if(typeof data!='object'){data={}}_setUri(dataType);return _request('DELETE',cmd,data)}function _request(method,cmd,data){Preloader.show({mini:true});__uri+=cmd.replace(/[A-Z]/g,m=>"-"+m.toLowerCase());function requestSend(url='',data={}){if(Object.keys(data).length){method='POST'}let options={"headers":{"Content-Type":"application/json","Cache-Control":"no-cache"}};let body='';if(method==='POST'||method==='PUT'||Object.keys(data).length){body=angular.toJson({params:data})}else if(data instanceof Object&&data!=={}){let query='';let i=0;for(let[key,value]of Object.entries(data)){if(i>0){query+='&'}query+=key+'='+value;i++}}if(url.indexOf('?')==-1){url+='?'}else{url+='&'}url+='ver_id='+window.VER_ID+'&access='+window.ACCESS+'&rnd='+Date.now();if(method=='POST'){return $http.post(url,body,options).then(function(response){Preloader.hide();let isError=response.data.hasOwnProperty("error");if(isError){s3PopupService.setClose();s3.alertHTML(response.data.error,function(){s3PopupService.closeLast('mouse')})}return isError?$q.reject(response.data.error):response.data})}else{return $http.get(url).then(function(response){Preloader.hide();let isError=response.data.hasOwnProperty("error");if(isError){s3PopupService.setClose();s3.alertHTML(response.data.error,function(){s3PopupService.closeLast('mouse')})}return isError?$q.reject(response.data.error):response.data})}}return requestSend(__uri,data)}}})(angular);(function(angular){'use strict';angular.module('s3.core').service('s3DataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="";this.getCmsInfo=getCmsInfo;function getCmsInfo(data){return s3RequestService.get(dataType,'cms-info',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicGroupService',service);service.$inject=['_','s3PopupService','dynamicGroupDataService'];function service(_,s3PopupService,dynamicGroupDataService){var data={};this.add=add;this.edit=edit;this.remove=remove;function add(list,groupType){return edit(0,list,groupType)}function edit(dt_group_id,list,groupType){if(dt_group_id){data={dt_group_id:dt_group_id,groupType:groupType}}else{data={dt_group_id:dt_group_id,groupType:groupType,position:list.length}}if(typeof data.hide=='undefined'){data.hide={}}data.hide['headReload']=true;data.hide['headExpand']=true;return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/group/edit/dynamic.group.edit.html',data).then(function(modal){modal.close.then(function(group){if(_.isObject(group)){if(dt_group_id){_.each(list,function(gr,index){if(dt_group_id==gr.dt_group_id){list[index]=group}})}else{list.push(group)}}})})}function remove(data,list){return s3PopupService.confirm('dynamic.group.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicGroupDataService.remove(data).then(function(response){if(response.done){_.each(list,function(gr,index){if(gr&&data.dt_group_id==gr.dt_group_id){list.splice(index,1)}})}})}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicGroupDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="group";this.getList=getList;this.edit=edit;this.remove=remove;this.getById=getById;this.updatePositionGroups=updatePositionGroups;function getList(){return s3RequestService.get(dataType,'getList',{},{})}function edit(group){if(group.dt_group_id){return s3RequestService.put(dataType,"update",{'group':group},{})}else{return s3RequestService.post(dataType,"insert",{'group':group},{})}}function remove(data){return s3RequestService.delete(dataType,"remove",data)}function getById(dt_group_id){return s3RequestService.get(dataType,'get',{dt_group_id:dt_group_id},{})}function updatePositionGroups(data){return s3RequestService.get(dataType,'updatePositionGroups',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicParamDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="param";this.getList=getList;this.getMainData=getMainData;this.edit=edit;this.remove=remove;this.getById=getById;this.getParamTypes=getParamTypes;this.getParentListParams=getParentListParams;this.getParamOptions=getParamOptions;this.getParamsDynamicParam=getParamsDynamicParam;this.getListInjected=getListInjected;this.getInfoTransaction=getInfoTransaction;function getById(param_id){return s3RequestService.get(dataType,'get',{param_id:param_id},{})}function getList(data){return s3RequestService.get(dataType,'getList',data,{})}function getMainData(){return s3RequestService.get(dataType,'main-data')}function edit(param){if(param.param_id){return s3RequestService.put(dataType,"update",{param:param},{})}else{return s3RequestService.post(dataType,"insert",{param:param},{})}}function remove(data){return s3RequestService.delete(dataType,"remove",data)}function getParamTypes(){return s3RequestService.get(dataType,'param-types')}function getParentListParams(data){return s3RequestService.get(dataType,'getParentListParams',data,{})}function getParamOptions(data){return s3RequestService.get(dataType,'getParamOptions',data,{})}function getParamsDynamicParam(data){return s3RequestService.get(dataType,'getParamsDynamicParam',data,{})}function getListInjected(data){return s3RequestService.get(dataType,'getListInjected',data,{})}function getInfoTransaction(data){return s3RequestService.get(dataType,'getInfoTransaction',data,{})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicParamService',service);service.$inject=['_','s3PopupService','dynamicParamDataService'];function service(_,s3PopupService,dynamicParamDataService){this.add=add;this.edit=edit;this.remove=remove;this.optionSelector=optionSelector;this.selector=selector;function add(list){return edit(0,list)}function edit(param_id,list){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/param/edit/dynamic.param.edit.html',{param_id:param_id,hide:{save:(param_id==0?true:false),headExpand:true},width:'600px',list:list}).then(function(modal){modal.close.then(function(param){if(_.isObject(param)){if(list){if(param_id){list[param_id]=param}else{list[param.param_id]=param}}}})})}function remove(data,list){return s3PopupService.confirm('dynamic.param.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicParamDataService.remove(data).then(function(response){if(response.done){delete list[data.param_id]}})}})})}function optionSelector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/param/option.selector/dynamic.param.option.selector.html',data)}function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/param/selector/dynamic.param.selector.html',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicTypeDataService',service);service.$inject=['s3RequestService','$rootScope'];function service(s3RequestService,$rootScope){var dataType="type";this.getList=getList;this.getMainData=getMainData;this.edit=edit;this.remove=remove;this.getById=getById;this.getSelectorList=getSelectorList;this.getForView=getForView;this.getDataForEdit=getDataForEdit;this.getIdByAlias=getIdByAlias;this.getTypeByAlias=getTypeByAlias;this.importTypes=importTypes;this.exportTypes=exportTypes;function getById(dt_type_id){return s3RequestService.get(dataType,'get',{dt_type_id:dt_type_id},{})}function getList(tag_id){return s3RequestService.get(dataType,'getList',{tag_id:tag_id},{})}function getMainData(){return s3RequestService.get(dataType,'main-data')}function edit(type){if(type.dt_type_id){return s3RequestService.put(dataType,"update",type,{})}else{return s3RequestService.post(dataType,"insert",type,{})}}function remove(data){return s3RequestService.delete(dataType,"remove",data)}function getSelectorList(data){return s3RequestService.get(dataType,'getSelectorList',data,{})}function getForView(data){return s3RequestService.get(dataType,'getForView',data,{})}function getDataForEdit(data){return s3RequestService.get(dataType,'getDataForEdit',data)}function getIdByAlias(alias){return s3RequestService.get(dataType,'getIdByAlias',{alias:alias})}function getTypeByAlias(alias){return s3RequestService.get(dataType,'getTypeByAlias',{alias:alias})}function importTypes(data){return s3RequestService.post(dataType,'importTypes',data)}function exportTypes(){return s3RequestService.get(dataType,'export-types')}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicTypeService',service);service.$inject=['_','s3PopupService','dynamicTypeDataService'];function service(_,s3PopupService,dynamicTypeDataService){this.add=add;this.edit=edit;this.remove=remove;this.selector=selector;this.importTypes=importTypes;this.exportTypes=exportTypes;function add(list){return edit(0,list)}function edit(dt_type_id,list,checkSettings){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/type/edit/dynamic.type.edit.html',{dt_type_id:dt_type_id,width:'700px',hide:{save:(dt_type_id==0?true:false)}}).then(function(modal){modal.close.then(function(type){if(_.isObject(type)&&list){if(dt_type_id){list[dt_type_id]=type}else{list[type.dt_type_id]=type}}if(typeof checkSettings=='function'){checkSettings(type)}})})}function remove(data,list){return s3PopupService.confirm('dynamic.type.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicTypeDataService.remove(data).then(function(response){if(response.done){delete list[data.dt_type_id]}})}})})}function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/type/selector/dynamic.type.selector.html',data)}function importTypes(data){data.hide={save:true,headExpand:true,headReload:true};data.width='600px';data.uptitle='dynamic.type.typesSchema';return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/type/import/dynamic.type.import.html',data)}function exportTypes(data){data.hide={save:true,headExpand:true,headReload:true};data.width='600px';data.uptitle='dynamic.type.typesSchema';return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/type/export/dynamic.type.export.html',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicObjectDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="object";this.getList=getList;this.edit=edit;this.remove=remove;this.getById=getById;this.getListForSelector=getListForSelector;this.getListForSelectorSuggest=getListForSelectorSuggest;this.getDataForEditController=getDataForEditController;this.getListForTypeWithSearch=getListForTypeWithSearch;this.moveObjectTreeItem=moveObjectTreeItem;this.removeGroup=removeGroup;this.editGroup=editGroup;this.checkUnique=checkUnique;function getList(dt_type_id){return s3RequestService.get(dataType,'getList',{dt_type_id:dt_type_id},{})}function edit(object){var data={object:object};if(object.object_id){return s3RequestService.put(dataType,"update",data,{})}else{return s3RequestService.post(dataType,"insert",data,{})}}function remove(object_id){return s3RequestService.delete(dataType,"remove",{object_id:object_id})}function getById(object_id){return s3RequestService.get(dataType,'get',{object_id:object_id},{})}function getListForSelector(data){return s3RequestService.get(dataType,'getListForSelector',data)}function getListForSelectorSuggest(data){return s3RequestService.get(dataType,'getListForSelectorSuggest',data)}function getDataForEditController(dt_type_id,object_id){return s3RequestService.get(dataType,'getDataForEditController',{dt_type_id:dt_type_id,object_id:object_id},{})}function getListForTypeWithSearch(data){return s3RequestService.get(dataType,'getListForTypeWithSearch',data,{})}function moveObjectTreeItem(data){return s3RequestService.post(dataType,'moveObjectTreeItem',data,{})}function removeGroup(data){return s3RequestService.delete(dataType,"removeGroup",data)}function editGroup(data){return s3RequestService.put(dataType,"updateGroup",data,{})}function checkUnique(data){return s3RequestService.get(dataType,"checkUnique",data,{})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicObjectService',service);service.$inject=['$rootScope','s3PopupService','dynamicObjectDataService'];function service($rootScope,s3PopupService,dynamicObjectDataService){var timer;this.add=add;this.edit=edit;this.copy=copy;this.remove=remove;this.removeTreeItem=removeTreeItem;this.selector=selector;this.getSchemeItem=getSchemeItem;this.editGroup=editGroup;this.removeGroup=removeGroup;this.parseToEditParams=parseToEditParams;this.parseToEditParam=parseToEditParam;function add(data){data.hide={save:true};return edit(data)}function copy(data){data.hide={save:true};data.copy=true;return edit(data)}function edit(data){data['min-width']='870px';return s3PopupService.modal('dynamicObjectEdit',data)}function remove(object_id,list,callback,checkSettings){return s3PopupService.confirm('dynamic.object.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicObjectDataService.remove(object_id).then(function(response){if(response.done){delete list['_'+object_id];if(typeof checkSettings=='function'){checkSettings(false,'remove')}}if(typeof callback=='function'){callback(object_id,list,response)}})}})})}function removeTreeItem(object_id,ctrl){return s3PopupService.confirm('dynamic.object.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicObjectDataService.remove(object_id).then(function(response){if(response.scheme){_.each(response.object_ids,function(object_id){delete ctrl.objects[object_id]});ctrl.resetSearch();ctrl.scheme=response.scheme}})}})})}function selector(data,type){if(type=='regular'){data['width']='900px';return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/object/selector/regular/dynamic.object.selector.regular.html',data)}else{return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/object/selector/tree/dynamic.object.selector.tree.html',data)}}function getSchemeItem(object){return{'object_id':object.object_id,'_left':object._left,'_right':object._right,'_level':object._level}}function editGroup(data,callback){data.hide={save:true};data['width']='870px';data['groupEdit']=true;data['callback']=callback;return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/object/edit/component/dynamic.object.edit.component.html',data)}function removeGroup(data,callback){return s3PopupService.confirm('dynamic.object.groupOp.removeWarning').then(function(modal){modal.close.then(function(response){if(response){dynamicObjectDataService.removeGroup(data).then(function(response){if(response.status=='done'){_.each(response.data,function(object_id){delete data.list['_'+object_id]});if(typeof callback=='function'){callback()}}else if(response.status=='queue'){util.msg(JS_QUEUED)}else if(response.status=='error'){util.msg(response.error_message)}})}})})}function parseToEditParams(_data){var $this=_data['$this'],controls=_data['controls'],object=_data['object'],paramIds=_data['paramIds']||{},callback=_data['callback'];_.forEach(controls,function(group,gKey){_.forEach(group,function(param,pKey){parseToEditParam(controls,object,paramIds,param,gKey,pKey,$this,callback)})});if(typeof callback=='function'){clearTimeout(timer);timer=setTimeout(function(){callback()},100)}}function parseToEditParam(controls,object,paramIds,param,gKey,pKey,$this,callback){var params=[],key;if(param.param_type_id==5||param.param_type_id==6||param.param_type_id==35||param.param_type_id==37||param.param_type_id==38){params=[];_.forEach(object.params[param.alias],function(prm){params.push(prm)});if(params.length>1){object.params[param.alias]=params.sort(function(a,b){return a.position-b.position})}else{object.params[param.alias]=params}}else if(param.param_type_id==12||param.param_type_id==19){if($this&&$this.groupEdit&&(param.param_type_id==19||param.param_type_id==12&&param.deployed_object==1)){delete object.params[param.alias];if(controls[gKey].length===1){delete controls[gKey]}else{delete controls[gKey][pKey]}}else{paramIds[param.alias]=true;if(typeof object.params[param.alias]=='undefined'&&typeof $rootScope.objectStorage[Object.keys(param.types)[0]]=='object'){if(Object.keys(param.types)[0]!=$this.object.dt_type_id){object.params[param.alias]={};object.params[param.alias][Object.keys(param.types)[0]]=[];object.params[param.alias][Object.keys(param.types)[0]].push($rootScope.objectStorage[Object.keys(param.types)[0]])}}}if(object.params[param.alias]){key=Object.keys(object.params[param.alias])[0];params=[];_.forEach(object.params[param.alias][key],function(prm,id){params.push(prm)});if(params.length>1){object.params[param.alias][key]=params.sort(function(a,b){return a.position-b.position})}else{object.params[param.alias][key]=params}}else{object.params[param.alias]={}}}else if(param.param_type_id==21){if($this&&$this.groupEdit){delete object.params[param.alias];if(controls[gKey].length===1){delete controls[gKey]}else{delete controls[gKey][pKey]}}else{if(object.params[param.alias]){key=Object.keys(param.types)[0];_.each(object.params[param.alias][key],function(obj,object_id){parseToEditParams({controls:param.types[key].controls,object:obj,$this:$this,callback:callback});if(!isNaN(parseInt(object_id))){object.params[param.alias][key]['_'+object_id]=obj;delete object.params[param.alias][key][object_id]}})}paramIds[param.alias]={embeded:{}}}}else if(param.param_type_id==13){if(typeof object.params[param.alias]=='undefined'){object.params[param.alias]=[]}}else{}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicTypeParamService',service);service.$inject=['_','s3PopupService','dynamicTypeParamDataService'];function service(_,s3PopupService,dynamicTypeParamDataService){this.add=add;this.edit=edit;this.remove=remove;this.selector=selector;this.removeInherit=removeInherit;this.changeSwitchParam=changeSwitchParam;this.replaceGlobalParam=replaceGlobalParam;this.updateInjectStatus=updateInjectStatus;function add(data){data.hide={save:true};return edit(data)}function edit(data){if(typeof data.hide=='undefined'){data['hide']={}}data.hide['headExpand']=true;return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/type.param/edit/dynamic.type.param.edit.html',data)}function remove(data,list,i,util){var warning=false;if(list.length==1){warning=true}return s3PopupService.confirm('dynamic.type.param.delete',warning).then(function(modal){modal.close.then(function(response){if(response){dynamicTypeParamDataService.remove(data).then(function(response){if(response.done&&list[i]&&list[i].type_param_id==data.type_param_id){list.splice(i,1);util.fullLength=util.fullLength-1}else if(response.done&&list[data.type_param_id]){delete list[data.type_param_id]}})}})})}function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/type.param/selector/dynamic.type.param.selector.html',data)}function removeInherit(param,list,i,callback){var type_param_id=parseInt(param.type_param_id);return s3PopupService.confirm('dynamic.type.param.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicTypeParamDataService.remove(param).then(function(response){console.log(response);if(response.done&&list[i]&&list[i].type_param_id==type_param_id){list.splice(i,1);if(typeof callback=='function'){callback()}}})}})})}function updateInjectStatus(param,status){return s3PopupService.confirm('dynamic.type.param.update_inject_status').then(function(modal){modal.close.then(function(response){if(response){dynamicTypeParamDataService.updateInjectStatus(param.type_param_id,status).then(function(response){if(response.done==1){param.inject_status=status}})}})})}function changeSwitchParam(data,status){var confirm_msg='dynamic.type.param.confirm_';if(status=='enabled'){confirm_msg=confirm_msg+'on'}else{confirm_msg=confirm_msg+'off'}return s3PopupService.confirm(confirm_msg).then(function(modal){modal.close.then(function(response){if(response){dynamicTypeParamDataService.changeSwitchParam(data,status).then(function(response){if(response.done){data.status=status}})}})})}function replaceGlobalParam(data){}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicTypeParamDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="type/param";this.getList=getList;this.edit=edit;this.remove=remove;this.getById=getById;this.getSelectorList=getSelectorList;this.getMainData=getMainData;this.getAllDataForParam=getAllDataForParam;this.loadParamEditControls=loadParamEditControls;this.loadByGroup=loadByGroup;this.getSelectorListByTypeId=getSelectorListByTypeId;this.getSelectorListByFolderId=getSelectorListByFolderId;this.getChildParamsForMapParam=getChildParamsForMapParam;this.getInjectedParams=getInjectedParams;this.updatePositionParams=updatePositionParams;this.getListForSearchByAliases=getListForSearchByAliases;this.getListForSortByAliases=getListForSortByAliases;this.changeSwitchParam=changeSwitchParam;this.replaceGlobalParam=replaceGlobalParam;this.updateInjectStatus=updateInjectStatus;function getList(dt_type_id){return s3RequestService.get(dataType,'getList',{dt_type_id:dt_type_id},{})}function edit(data){if(data.param&&data.param.type_param_id){return s3RequestService.put(dataType,"update",data,{})}else{return s3RequestService.post(dataType,"insert",data,{})}}function remove(data){return s3RequestService.delete(dataType,"remove",data)}function updateInjectStatus(type_param_id,status){return s3RequestService.put(dataType,"updateInjectStatus",{type_param_id:type_param_id,status:status},{})}function getById(type_param_id){return s3RequestService.get(dataType,'get',{type_param_id:type_param_id},{})}function getSelectorList(){return s3RequestService.get(dataType,'getSelectorList',{},{})}function getMainData(dt_type_id){return s3RequestService.get(dataType,'getMainData',{dt_type_id:dt_type_id},{})}function getAllDataForParam(data){return s3RequestService.get(dataType,'getAllDataForParam',data)}function loadParamEditControls(dt_type_id,param_id,object_id){if(object_id){return s3RequestService.get(dataType,'loadParamEditControls',{dt_type_id:dt_type_id,param_id:param_id,object_id:object_id})}else{return s3RequestService.get(dataType,'loadParamEditControls',{dt_type_id:dt_type_id,param_id:param_id})}}function loadByGroup(dt_group_id,dt_type_id){if(dt_group_id==-1){return getList(dt_type_id)}return s3RequestService.get(dataType,'loadByGroup',{dt_group_id:dt_group_id,dt_type_id:dt_type_id})}function getSelectorListByTypeId(dt_type_id){return s3RequestService.get(dataType,'getSelectorListByTypeId',{dt_type_id:dt_type_id},{})}function getSelectorListByFolderId(folder_id){return s3RequestService.get(dataType,'getSelectorListByFolderId',{folder_id:folder_id},{})}function getChildParamsForMapParam(dt_type_id,param_id,data){if(!_.isObject(data)){data={}}data.dt_type_id=dt_type_id;data.param_id=param_id;return s3RequestService.get(dataType,'getChildParamsForMapParam',data)}function getInjectedParams(data){return s3RequestService.get(dataType,'getInjectedParams',data)}function updatePositionParams(data){return s3RequestService.get(dataType,'updatePositionParams',data)}function getListForSearchByAliases(data){return s3RequestService.get(dataType,'getListForSearchByAliases',data,{})}function getListForSortByAliases(data){return s3RequestService.get(dataType,'getListForSortByAliases',data,{})}function changeSwitchParam(data,status){if(!_.isObject(data)){data={}}data.status=status;return s3RequestService.post(dataType,'changeSwitchParam',data,{})}function replaceGlobalParam(data){return s3RequestService.get(dataType,'replaceGlobalParam',data,{})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicActionGroupDataService',service);service.$inject=['$rootScope','s3RequestService'];function service($rootScope,s3RequestService){var dataType="action/group";this.getDataForEdit=getDataForEdit;this.edit=edit;this.updateProperties=updateProperties;this.remove=remove;function edit(data){return s3RequestService.post(dataType,'edit',data)}function remove(data){return s3RequestService.delete(dataType,'remove',data)}function getDataForEdit(data){return s3RequestService.get(dataType,'getDataForEdit',data)}function updateProperties(data){return s3RequestService.post(dataType,'updateProperties',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicActionGroupService',service);service.$inject=['_','s3PopupService','dynamicActionGroupDataService'];function service(_,s3PopupService,dynamicActionGroupDataService){this.add=add;this.edit=edit;this.remove=remove;function add(data){if(!data.hide){data.hide={}}data.hide={save:true};return edit(data)}function edit(data){if(!data.hide){data.hide={}}data.width='500px';data.hide['headReload']=true;data.hide['headExpand']=true;return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action.tree/action.group/edit/dynamic.action.group.edit.html',data)}function remove(group,list){var dt_action_group_id=group.dt_action_group_id;return s3PopupService.confirm('dynamic.action.group.delete').then(function(modal){modal.close.then(function(confirm){if(confirm){dynamicActionGroupDataService.remove(group).then(function(response){if(response.done){delete list[dt_action_group_id]}})}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicActionTreeService',service);service.$inject=['_','s3PopupService','dynamicActionTreeDataService','dynamicDataService'];function service(_,s3PopupService,dynamicActionTreeDataService,dynamicDataService){this.add=add;this.edit=edit;this.remove=remove;this.selector=selector;this.replaceToLocal=replaceToLocal;this.runAction=runAction;this.importTree=importTree;function add(data){data.hide={save:true};return edit(data)}function edit(data){if(typeof data.hide=='undefined'){data['hide']={}}data.hide['headExpand']=true;data.width='600px';data.uptitle='dynamic.actionTree.actionTree';return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action.tree/tree/edit/dynamic.action.tree.edit.html',data)}function importTree(data){data.hide={save:true,headExpand:true,headReload:true};data.width='600px';data.uptitle='dynamic.actionTree.actionTree';return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action.tree/tree/import/dynamic.action.tree.import.html',data)}function remove(){return s3PopupService.confirm('dynamic.action.delete')}function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action/selector/dynamic.action.selector.html',data)}function replaceToLocal(){return s3PopupService.confirm('dynamic.actionTree.replaceToLocal')}function runAction(data,storage){var dataAction=data['actionData'],storageObject={},keyStorage=data['keyStorage'],callback=data['callback'],Data={},pageCurrent=false;if(typeof storage!='undefined'){if(typeof dataAction=='object'){if(typeof keyStorage!='undefined'){if(storage[keyStorage]&&storage[keyStorage].pageCurrent){pageCurrent=true}if(!storage[keyStorage]){storage[keyStorage]={}}storageObject=storage[keyStorage]}else if(typeof keyStorage=='undefined'){storageObject=storage}else{return false}storageObject['settings']=dataAction;Data=storageObject['settings']}else{return false}return dynamicActionTreeDataService.runAction(Data).then(function(response){storageObject['result']=response.data.data||[];if(pageCurrent=true){storageObject['pageCurrent']=1}if(typeof pageCurrent!='undefined'&&typeof storageObject['count_rewrite']=='undefined'){storageObject['count_rewrite']=true}if(storageObject['count_rewrite']==true){storageObject['totalAll']=storageObject['result']['total']||0}if(typeof callback!='undefined'){dynamicDataService.run(callback,response.data.data)}})}else{return false}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicActionTreeDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="action/tree";this.getList=getList;this.getDataForEdit=getDataForEdit;this.edit=edit;this.remove=remove;this.runAction=runAction;this.replaceToLocal=replaceToLocal;this.getScopeParams=getScopeParams;this.importTree=importTree;this.getByAlias=getByAlias;function getList(data){return s3RequestService.get(dataType,'getList',data)}function getDataForEdit(data){return s3RequestService.get(dataType,'getDataForEdit',data)}function edit(data){return s3RequestService.post(dataType,'edit',data)}function remove(data){return s3RequestService.delete(dataType,'remove',data)}function runAction(data){return s3RequestService.post(dataType,'runAction',data)}function replaceToLocal(data){return s3RequestService.post(dataType,'replaceToLocal',data)}function getScopeParams(){return s3RequestService.get(dataType,'scope-params')}function importTree(data){return s3RequestService.post(dataType,'importTree',data)}function getByAlias(data){return s3RequestService.get(dataType,'getByAlias',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicActionDataService',service);service.$inject=['$rootScope','s3RequestService'];function service($rootScope,s3RequestService){var dataType="action";this.getList=getList;this.getDataForEdit=getDataForEdit;this.edit=edit;this.remove=remove;this.updateLinkActions=updateLinkActions;this.updatePropertiesAction=updatePropertiesAction;this.updateLinkActionParams=updateLinkActionParams;this.removeLinkActions=removeLinkActions;this.removeLinkActionParams=removeLinkActionParams;this.updateStaticValueJson=updateStaticValueJson;this.addIncoming=addIncoming;this.deleteIncoming=deleteIncoming;this.saveComment=saveComment;this.updateStaticValuesJson=updateStaticValuesJson;function getList(data){return s3RequestService.get(dataType,'getList',data)}function getDataForEdit(data){return s3RequestService.get(dataType,'getDataForEdit',data)}function edit(data){return s3RequestService.post(dataType,'edit',data)}function remove(data){return s3RequestService.delete(dataType,'remove',data)}function updateLinkActions(data){return s3RequestService.get(dataType,'updateLinkActions',data)}function updatePropertiesAction(data){return s3RequestService.get(dataType,'updatePropertiesAction',data)}function updateLinkActionParams(data){return s3RequestService.get(dataType,'updateLinkActionParams',data)}function removeLinkActions(data){return s3RequestService.delete(dataType,'removeLinkActions',data)}function removeLinkActionParams(data){return s3RequestService.delete(dataType,'removeLinkActionParams',data)}function updateStaticValueJson(data){return s3RequestService.get(dataType,'updateStaticValueJson',data)}function addIncoming(data){return s3RequestService.post(dataType,'addIncoming',data)}function deleteIncoming(data){return s3RequestService.delete(dataType,'deleteIncoming',data)}function saveComment(data){return s3RequestService.get(dataType,'saveComment',data)}function updateStaticValuesJson(data){return s3RequestService.get(dataType,'updateStaticValuesJson',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicActionService',service);service.$inject=['_','s3PopupService'];function service(_,s3PopupService){this.add=add;this.edit=edit;this.remove=remove;function add(data){data.hide={save:true};return edit(data)}function edit(data){if(!data.canEdit){data.hide={save:true,saveAndClose:true}}return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action.tree/action/edit/dynamic.action.edit.html',data)}function remove(dt_action_id,list){return s3PopupService.confirm('dynamic.action.delete').then(function(modal){modal.close.then(function(confirm){if(confirm){dynamicActionDataService.remove({dt_action_id:dt_action_id}).then(function(response){if(response.done){delete list[dt_action_id]}})}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicQueueService',service);service.$inject=['_','s3PopupService','dynamicQueueDataService'];function service(_,s3PopupService,dynamicQueueDataService){this.add=add;this.edit=edit;this.remove=remove;this.selector=selector;this.reload=reload;function add(data){if(typeof data=='undefined'){data={}}data.hide={save:true};return edit(data)}function edit(data){if(typeof data.hide=='undefined'){data['hide']={}}data.hide['headExpand']=true;return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/queue/edit/dynamic.queue.edit.html',data)}function remove(queue_id,list){return s3PopupService.confirm('dynamic.queue.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicQueueDataService.remove(queue_id).then(function(response){if(response.done){delete list['_'+queue_id]}})}})})}function reload(queue_id,list){dynamicQueueDataService.getById({queue_id:queue_id}).then(function(response){if(response.queue){util.msg(JS_RELOADED);if(list[queue_id]){list[queue_id]=response.queue}else{list['_'+queue_id]=response.queue}}})}function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/queue/selector/dynamic.queue.selector.html',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicQueueDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="queue";this.getById=getById;this.getList=getList;this.edit=edit;this.remove=remove;this.getDataForEdit=getDataForEdit;this.clear=clear;function getById(data){return s3RequestService.get(dataType,'get',data)}function getList(data){return s3RequestService.get(dataType,'getList',data)}function edit(data){return s3RequestService.put(dataType,"edit",data)}function remove(queue_id){return s3RequestService.delete(dataType,"remove",{queue_id:queue_id})}function getDataForEdit(data){return s3RequestService.get(dataType,"getDataForEdit",data)}function clear(data){return s3RequestService.get(dataType,'clear',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicSitemapSettingsDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="sitemap-settings";this.getById=getById;this.getList=getList;this.edit=edit;this.remove=remove;this.getDataForEdit=getDataForEdit;function getById(data){return s3RequestService.get(dataType,'get',data)}function getList(data){return s3RequestService.get(dataType,'getList',data)}function edit(data){return s3RequestService.put(dataType,"edit",data)}function remove(settings_id){return s3RequestService.delete(dataType,"remove",{settings_id:settings_id})}function getDataForEdit(data){return s3RequestService.get(dataType,"getDataForEdit",data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicSitemapSettingsService',service);service.$inject=['_','s3PopupService','dynamicSitemapSettingsDataService'];function service(_,s3PopupService,dynamicSitemapSettingsDataService){this.add=add;this.edit=edit;this.remove=remove;this.selector=selector;function add(data){if(typeof data=='undefined'){data={}}data.hide={save:true};return edit(data)}function edit(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/sitemap.settings/edit/dynamic.sitemap.settings.edit.html',data)}function remove(settings_id,list){return s3PopupService.confirm('dynamic.sitemap_settings.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicSitemapSettingsDataService.remove(settings_id).then(function(response){if(response.done){delete list[settings_id]}})}})})}function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/sitemap.settings/selector/dynamic.sitemap.settings.selector.html',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicQueryDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="query";this.getById=getById;this.getList=getList;this.edit=edit;this.remove=remove;this.getDataForEdit=getDataForEdit;this.getTypesParams=getTypesParams;this.importQueries=importQueries;this.exportQueries=exportQueries;function getById(data){return s3RequestService.get(dataType,'get',data)}function getList(data){return s3RequestService.get(dataType,'getList',data)}function edit(data){return s3RequestService.put(dataType,"edit",data)}function remove(data){return s3RequestService.delete(dataType,"remove",data)}function getDataForEdit(data){return s3RequestService.get(dataType,"getDataForEdit",data)}function getTypesParams(data){return s3RequestService.get(dataType,'getTypesParams',data,{})}function importQueries(data){return s3RequestService.post(dataType,'importQueries',data)}function exportQueries(){return s3RequestService.get(dataType,'export-queries')}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicQueryService',service);service.$inject=['_','s3PopupService','dynamicQueryDataService'];function service(_,s3PopupService,dynamicQueryDataService){this.add=add;this.edit=edit;this.remove=remove;this.selector=selector;this.importQueries=importQueries;this.exportQueries=exportQueries;function add(data){if(typeof data=='undefined'){data={}}data.width='700px';data.hide={save:true};return edit(data)}function edit(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/query/edit/dynamic.query.edit.html',data)}function remove(data,list){return s3PopupService.confirm('dynamic.query.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicQueryDataService.remove(data).then(function(response){if(response.done){delete list[data.dt_query_id]}})}})})}function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/query/selector/dynamic.query.selector.html',data)}function importQueries(data){data.hide={save:true,headExpand:true,headReload:true};data.width='600px';data.uptitle='dynamic.query.querySchema';return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/query/import/dynamic.query.import.html',data)}function exportQueries(data){data.hide={save:true,headExpand:true,headReload:true};data.width='600px';data.uptitle='dynamic.query.querySchema';return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/query/export/dynamic.query.export.html',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicEventService',service);service.$inject=['_','s3PopupService','dynamicEventDataService'];function service(_,s3PopupService,dynamicEventDataService){this.add=add;this.edit=edit;this.remove=remove;this.selector=selector;function add(data){if(typeof data=='undefined'){data={}}data.hide={save:true};return edit(data)}function edit(data){if(typeof data.hide=='undefined'){data.hide={}}data.hide['headExpand']=true;return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/event/edit/dynamic.event.edit.html',data)}function remove(event_id,list){return s3PopupService.confirm('dynamic.event.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicEventDataService.remove(event_id).then(function(response){if(response.done){delete list[event_id]}})}})})}function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/event/selector/dynamic.event.selector.html',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicEventDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="event";this.getById=getById;this.getList=getList;this.edit=edit;this.remove=remove;this.getDataForEdit=getDataForEdit;this.checkStatues=checkStatues;function getById(data){return s3RequestService.get(dataType,'get',data)}function getList(data){return s3RequestService.get(dataType,'getList',data)}function edit(data){return s3RequestService.put(dataType,"edit",data)}function remove(event_id){return s3RequestService.delete(dataType,"remove",{event_id:event_id})}function getDataForEdit(data){return s3RequestService.get(dataType,"getDataForEdit",data)}function checkStatues(){return s3RequestService.get(dataType,"check-statues")}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicTagDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="tag";this.getList=getList;this.edit=edit;this.remove=remove;function getList(tag_id){return s3RequestService.post(dataType,'getList',{tag_id:tag_id})}function edit(tag){var data={tag:tag};if(tag.tag_id){return s3RequestService.put(dataType,"update",data,{})}else{return s3RequestService.post(dataType,"insert",data,{})}}function remove(tag_id){return s3RequestService.delete(dataType,"remove",{tag_id:tag_id})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicTagService',service);service.$inject=['_','s3PopupService','dynamicTagDataService'];function service(_,s3PopupService,dynamicTagDataService){this.add=add;this.edit=edit;this.remove=remove;function add(data){data.hide={save:true};return edit(data)}function edit(data){data['width']='870px';if(typeof data.hide=='undefined'){data.hide={}}data.hide['headReload']=true;data.hide['headExpand']=true;return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/tag/edit/dynamic.tag.edit.html',data)}function remove(tag_id,list){return s3PopupService.confirm('dynamic.tag.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicTagDataService.remove(tag_id).then(function(response){if(response){delete list[tag_id]}})}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicDebugService',service);service.$inject=['_','s3PopupService','dynamicDebugDataService','dynamicTypeService','dynamicQueryService','dynamicParamService','dynamicActionTreeService','dynamicQueueService'];function service(_,s3PopupService,dynamicDebugDataService,dynamicTypeService,dynamicQueryService,dynamicParamService,dynamicActionTreeService,dynamicQueueService){var data={};this.edit=edit;this.test=test;function edit(id,type){switch(type){case'type':dynamicTypeService.edit(id,{});break;case'param':dynamicParamService.edit(id,{});break;case'tree':dynamicActionTreeService.edit({dt_action_tree_id:id},{});break;case'query':dynamicQueryService.edit({dt_query_id:id},{});break;case'queue':dynamicQueueService.edit({queue_id:id},{});break}}function test(type,data){switch(type){case'query':return s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/debug/test/query/dynamic.debug.test.query.html',data);default:return[]}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').service('dynamicDebugDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="debug";this.getList=getList;this.getLinks=getLinks;this.reindexType=reindexType;this.reindexVersion=reindexVersion;this.getCount=getCount;this.elasticSearch=elasticSearch;this.getLocks=getLocks;this.removeLock=removeLock;this.queryTest=queryTest;this.fixCount=fixCount;this.getSitemapData=getSitemapData;this.refreshSitemap=refreshSitemap;this.getQueues=getQueues;this.awakenTask=awakenTask;function getList(){return s3RequestService.get(dataType,'list',{},{})}function getLinks($data){return s3RequestService.get(dataType,'getLinks',$data)}function reindexType(data){return s3RequestService.post(dataType,'reindexType',data)}function reindexVersion(){return s3RequestService.get(dataType,"reindex-version")}function getCount(data){return s3RequestService.get(dataType,'getCount',data)}function elasticSearch(data){return s3RequestService.get(dataType,'elasticSearch',data)}function getLocks(){return s3RequestService.get(dataType,'locks',{},{})}function removeLock(data){return s3RequestService.delete(dataType,'remove',data)}function queryTest(data){return s3RequestService.get(dataType,'queryTest',data)}function fixCount(data){return s3RequestService.get(dataType,'fixCount',data)}function getSitemapData(){return s3RequestService.get(dataType,'sitemap-data',{},{})}function refreshSitemap(){return s3RequestService.get(dataType,'refresh-sitemap',{},{})}function getQueues(){return s3RequestService.get(dataType,'queues',{},{})}function awakenTask(data){return s3RequestService.post(dataType,"awakenTask",data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.folder').service('folderService',service);service.$inject=['s3PopupService','folderDataService'];function service(s3PopupService,folderDataService){this.edit=edit;this.add=add;this.remove=remove;function add(parent_folder_id,onAddCallback){return _editPopup({'parent_folder_id':parent_folder_id},onAddCallback)}function edit(folder_id,onEditCallback){return _editPopup({'folder_id':folder_id},onEditCallback)}function remove(folder_id,onRemoveCallback){return s3PopupService.confirm('dynamic.folder.delete').then(function(modal){modal.close.then(function(response){if(response){folderDataService.remove(folder_id).then(function(response){if(typeof onRemoveCallback=='function'){onRemoveCallback(response)}})}})})}function _editPopup(data,onCloseCallback){return s3PopupService.modal('/my/s3/js/angular/s3/data/folder/edit/folder.edit.html',data).then(function(modal){modal.close.then(function(response){if(typeof onCloseCallback=='function'){onCloseCallback(response)}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.folder').service('folderDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="Folder";this.getList=getList;this.getById=getById;this.edit=edit;this.remove=remove;function getList(type){return s3RequestService.get(dataType,"getList",{type:type},{})}function getById(folder_id){return s3RequestService.get(dataType,'getById',{'folder_id':folder_id},{})}function edit(data){return s3RequestService.post(dataType,'save',{folder:data},{})}function remove(folder_id){return s3RequestService.delete(dataType,'remove',{folder_id:folder_id},{})}}})(angular);(function(angular){'use strict';angular.module('s3.data.template.group').service('templateGroupService',service);service.$inject=['_','s3PopupService','templateGroupDataService'];function service(_,s3PopupService,templateGroupDataService){this.save=save;this.remove=remove;this.getList=getList;function save(data){if(data.group_id>0){return templateGroupDataService.update({group_id:data.group_id,name:data.name})}else{return templateGroupDataService.insert({parent_group_id:data.parent_id,name:data.name})}}function remove(group_id,ctrl,parseGroupList,selectGroup){return s3PopupService.confirm('dynamic.template.group.delete',true).then(function(modal){modal.close.then(function(response){if(response){templateGroupDataService.remove(group_id).then(function(response){delete ctrl.editGroup;if(typeof parseGroupList=='function'){parseGroupList(response);if(typeof selectGroup=='function'&&group_id==ctrl.settings.lastGroup){selectGroup(ctrl.groups[0])}}})}})})}function getList(){return templateGroupDataService.getList()}}})(angular);(function(angular){'use strict';angular.module('s3.data.template.group').service('templateGroupDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="template/group";this.getList=getList;this.insert=insert;this.update=update;this.remove=remove;this.moveTreeItem=moveTreeItem;function getList(){return s3RequestService.get(dataType,'list')}function insert(data){return s3RequestService.put(dataType,'insert',data,{})}function update(data){return s3RequestService.post(dataType,'update',data,{})}function remove(group_id){return s3RequestService.delete(dataType,'remove',{group_id:group_id},{})}function moveTreeItem(data){return s3RequestService.post(dataType,'moveTreeItem',data,{})}}})(angular);(function(angular){'use strict';angular.module('s3.data.template').service('templateService',service);service.$inject=['_','s3PopupService','templateDataService'];function service(_,s3PopupService,templateDataService){this.save=save;this.remove=remove;this.select=select;this.loadList=loadList;this.search=search;this.loadOpened=loadOpened;function save(layout,control){var preBody=layout.originalBody,preGroup=layout.original_group_id;delete layout.originalBody;delete layout.original_group_id;if(layout.layout_id){control.needReloadGroup[layout.group_id]=true;templateDataService.update(layout).then(function(response){if(response.errors){delete control.needReloadGroup[layout.group_id];layout.errors=response.errors;layout.originalBody=preBody;layout.original_group_id=preGroup}else{control.needReloadGroup[preGroup]=true;layout.errors={};layout.originalBody=layout.body;layout.original_group_id=layout.group_id}})}else{control.needReloadGroup[layout.group_id]=true;templateDataService.insert(layout).then(function(response){if(response>0){layout.layout_id=response;layout.errors={};layout.originalBody=layout.body;control.selectTemplate(layout);delete control.selectedList['newTemplate']}else if(response.errors){delete control.needReloadGroup[layout.group_id];layout.errors=response.errors;layout.originalBody=preBody}})}}function remove(data){var layout=data.template,ctrl=data.ctrl;return s3PopupService.confirm('dynamic.template.delete',true).then(function(modal){modal.close.then(function(response){if(response){templateDataService.remove(layout.layout_id).then(function(response){if(response>0){if(ctrl.searchResult){delete ctrl.searchResult['_'+layout.layout_id]}delete ctrl.templates['_'+layout.layout_id];delete ctrl.selectedList['_'+layout.layout_id];if(ctrl.links.search&&ctrl.links.search[data.type_links]){delete ctrl.links.search[data.type_links][layout.alias]}delete ctrl.links.groups[data.type_links][layout.alias]}})}})})}function select(layout){return templateDataService.getById(layout.layout_id)}function loadList(group_id){return templateDataService.getList(group_id)}function search(data){return templateDataService.search(data)}function loadOpened(data){return templateDataService.getByIds(data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.template').service('templateDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="template";this.getList=getList;this.getByAlias=getByAlias;this.insert=insert;this.update=update;this.getById=getById;this.getByAlias=getByAlias;this.remove=remove;this.search=search;this.getByIds=getByIds;function getList(group_id){return s3RequestService.get(dataType,'getList',{group_id:group_id},{})}function getById(layout_id){return s3RequestService.get(dataType,'getLayout',{layout_id:layout_id},{})}function getByAlias(layout_alias){return s3RequestService.get(dataType,'getLayout',{alias:alias},{})}function insert(layout){return s3RequestService.put(dataType,'insert',layout,{})}function update(layout){return s3RequestService.post(dataType,'update',layout,{})}function remove(layout_id){return s3RequestService.delete(dataType,'remove',{layout_id:layout_id},{})}function search(data){return s3RequestService.get(dataType,'getList',data,{})}function getByIds(data){return s3RequestService.get(dataType,'getByIds',data,{})}}})(angular);(function(angular){'use strict';angular.module('s3.data.user').service('userService',service);service.$inject=['s3PopupService'];function service(s3PopupService){this.selector=selector;function selector(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/user/selector/user.selector.html',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.user').service('userDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="User";this.getList=getList;this.getListSearch=getListSearch;function getList(data){return s3RequestService.get(dataType,"getList",data,{})}function getListSearch(data){return s3RequestService.get(dataType,"getListSearch",data,{})}}})(angular);(function(angular){'use strict';angular.module('s3.data.image').service('imageService',service);service.$inject=['s3PopupService'];function service(s3PopupService){this.selector=selector;function selector(data){s3PopupService.modal('/my/s3/js/angular/s3/data/image/selector/image.selector.html',data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.image').service('imageDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="Image";this.getList=getList;function getList(data){return s3RequestService.get(dataType,"getList",data)}}})(angular);(function(angular){'use strict';angular.module('s3.data.layoutMenu').service('layoutMenuService',service);service.$inject=['_','s3PopupService','layoutMenuDataService'];function service(_,s3PopupService,layoutMenuDataService){this.add=add;this.edit=edit;this.save=save;this.remove=remove;this.getList=getList;this.getListAliases=getListAliases;function add(data){data.hide={save:true};return edit(data)}function edit(data){return s3PopupService.modal('/my/s3/js/angular/s3/data/layout.menu/edit.item/s3.data.layout.menu.edit.item.html',data)}function save(data){if(data.item_id){return layoutMenuDataService.update(data)}else{return layoutMenuDataService.insert(data)}}function remove(item_id,ctrl){return s3PopupService.confirm('dynamic.layout.menu.delete',true).then(function(modal){modal.close.then(function(response){if(response){layoutMenuDataService.remove(item_id).then(function(response){ctrl.scheme=response.scheme;ctrl.total=response.total;ctrl.listAliases=response.aliases})}})})}function getList(){return layoutMenuDataService.getList()}function getListAliases(){return layoutMenuDataService.getListAliases()}}})(angular);(function(angular){'use strict';angular.module('s3.data.layoutMenu').service('layoutMenuDataService',service);service.$inject=['s3RequestService'];function service(s3RequestService){var dataType="layout-menu";this.getList=getList;this.insert=insert;this.update=update;this.remove=remove;this.moveTreeItem=moveTreeItem;this.getListAliases=getListAliases;function getList(){return s3RequestService.get(dataType,'list')}function insert(data){return s3RequestService.put(dataType,'insert',data,{})}function update(data){return s3RequestService.post(dataType,'update',data,{})}function remove(item_id){return s3RequestService.delete(dataType,'remove',{item_id:item_id},{})}function moveTreeItem(data){return s3RequestService.post(dataType,'moveTreeItem',data,{})}function getListAliases(){return s3RequestService.get(dataType,'list-aliases')}}})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup').service('s3PopupService',service);service.$inject=['ModalService','$window'];function service(ModalService,$window){var tmp={},closeStack=[],closeType='',dt_modal_layer=$(document).find('#dt_modal_layer');this.alert=alert;this.confirm=confirm;this.modal=modal;this.getClose=getClose;this.closeLast=closeLast;this._set=_set;this._get=_get;this._remove=_remove;this.setClose=setClose;this.modalDtSearch=modalDtSearch;function alert(message,callback){return ModalService.showModal({templateUrl:"/my/s3/js/angular/s3/widgets/popup/alert/s3.popup.alert.html",controller:"S3PopupAlertController",controllerAs:"Alert",inputs:{message:message}}).then(function(modal){if(typeof callback=='function'){callback(modal)}})}function confirm(message,warning){return ModalService.showModal({templateUrl:"/my/s3/js/angular/s3/widgets/popup/confirm/s3.popup.confirm.html",controller:"S3PopupConfirmController",controllerAs:"Confirm",inputs:{message:message,warning:warning}})}function modal(template,data){if(!data){data={}}return ModalService.showModal({templateUrl:"/my/s3/js/angular/s3/widgets/popup/modal/s3.popup.modal.html",controller:"S3PopupModalController",controllerAs:"Modal",inputs:{template:template,data:data}})}function modalDtSearch(template,data){if(!data){data={}}return ModalService.showModal({templateUrl:"/my/s3/js/angular/s3/widgets/popup/modal/modal.dt.search/s3.popup.modal.dt.search.html",controller:"S3PopupModalDtSearchController",controllerAs:"ModalDtSearch",inputs:{template:template,data:data}})}function setClose(){closeStack.push(function(){})}function getClose(close){closeStack.push(function(data,type){if(typeof close=='function'){close(data)}if(typeof data!='undefined'&&type=='confirm'){closeStack.pop();modalLayerUpdate();console.log('modalLayerUpdate')}});return closeStack[closeStack.length-1]}function closeLast(data){var close=closeStack[closeStack.length-1];if(typeof close=='function'){close(data)}if(data=='mouse'){closeType=data}closeStack.pop();modalLayerUpdate();Preloader.hide()}function _set(key,value){tmp[key]=value}function _get(key){return tmp[key]}function _remove(key){delete tmp[key]}angular.element($window).on('keyup.s3popup',keyUpCallback);function keyUpCallback(event){if($(document).find('[id^="ajaxPopupWindow_"]').length==0){if(event.keyCode==27&&closeType!='mouse'){angular.element($window).unbind("keydown.s3popup::confirm");closeLast()}closeType=''}}function modalLayerUpdate(){var zIindexL;if(dt_modal_layer.css('z-index')=='auto'){zIindexL=1000}else{zIindexL=parseInt(dt_modal_layer.css('z-index'))}if(zIindexL-2>=1000){dt_modal_layer.css({'z-index':zIindexL-2})}else{if(closeStack.length==0){dt_modal_layer.removeAttr('style')}}}}})(angular);(function(angular){angular.module('s3.widgets').service('cmsInfoDataService',cmsInfoDataService);cmsInfoDataService.$inject=['s3RequestService'];function cmsInfoDataService(s3RequestService){this.getCmsInfo=getCmsInfo;function getCmsInfo(){return s3RequestService.get('','cms-info')}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').service('eventManagerService',service);service.$inject=['$window'];function service($window){this.trigger=trigger;this.bind=bind;function trigger(eventName,data){eventName=_getEventName(eventName);$($window).trigger(eventName,[data])}function bind(eventName,callback){eventName=_getEventName(eventName);$($window).on(eventName,callback)}function _getEventName(eventName){return'dt.'+eventName}}})(angular);(function(angular){angular.module('s3.widgets').service('dynamicDataService',dynamicDataService);dynamicDataService.$inject=['_'];function dynamicDataService(_){this.run=run;function run(data,result){if(typeof data=='object'){_.each(data,function(params,type){switch(type){case'delete':var deleted;_.each(params,function(param,i){if(typeof param['list']!='undefined'){deleted=0;if(typeof param['param']!='undefined'){if(typeof param['param']['param']!='undefined'&&typeof param['param']['key']!='undefined'){_.each(param['list'],function(item,key){if(item[param['param']['key']]==param['param']['param']){if(typeof param['list']=='object'){delete param['list'][key]}else{param['list'].splice(key,1)}deleted++}})}}else if(typeof param['key']!='undefined'){if(typeof param['list']=='object'){delete param['list'][param['key']]}else{param['list'].splice(param['key'],1)}deleted++}if(typeof param['updateCount']=='object'){if(typeof param['updateCount']['key']!='undefined'&&typeof param['updateCount']['object']=='object'){if(param['updateCount']['object'][param['updateCount']['key']]){param['updateCount']['object'][param['updateCount']['key']]=param['updateCount']['object'][param['updateCount']['key']]-deleted}}else if(typeof param['updateCount']['total']!='undefined'){param['updateCount']['total']=param['updateCount']['total']-deleted}}}});break;case'replace':_.each(params,function(param,i){if(typeof param['target']!='undefined'&&result&&param['result_key']&&typeof result[param['result_key']]!='undefined'){if(typeof param['target_key']!='undefined'){param['target'][param['target_key']]=result[param['result_key']]}else{param['target']=result[param['result_key']]}}});break;case'add':_.each(params,function(param,i){var key='';if(typeof param['target']!='undefined'&&result&&param['result_key']&&result[param['result_key']]){if(param['new_key']){key=param['new_key']['prefix_key']+result[param['new_key']['key']];param['target'][key]=result[param['result_key']]}else{param['target'].push(result[param['result_key']])}}});break;case'copy':console.log('copy');break;case'update':console.log('update');break;case'runAction':console.log('runAction');break}})}else if(typeof data=='function'){data()}}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').service('keyCodeService',service);function service(){this.space=32;this.esc=27;this.enter=13;this.shift=16;this.ctrl=17;this.alt=18;this.leftSuper=91;this.rightSuper=93;this.up=38;this.down=40;this.left=37;this.right=39}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeActionMainController',controller);controller.$inject=['$stateParams','_','dynamicEventService','dynamicActionService','dynamicActionDataService'];function controller($stateParams,_,dynamicEventService,dynamicActionService,dynamicActionDataService){var $this=this;this.dt_type_id=$stateParams.dt_type_id;this.event={};this.event.add=eventAdd;this.event.list={};this.action={};this.action.add=actionAdd;this.action.list={};activate();function activate(){dynamicActionDataService.getActionAndEventList({dt_type_id:$this.dt_type_id}).then(function(response){if(_.isObject(response.actions)&&!_.isArray(response.actions)){$this.action.list=response.actions}if(_.isObject(response.events)&&!_.isArray(response.actions)){$this.event.list=response.events}})}function eventAdd(){dynamicEventService.add({dt_event_id:0,dt_type_id:$stateParams.dt_type_id,folder_id:0},$this.event.list)}function actionAdd(){dynamicActionService.add({dt_action_id:0,dt_type_id:$stateParams.dt_type_id,folder_id:0},$this.action.list)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicGroupEditController',controller);controller.$inject=['$scope','$stateParams','dynamicGroupDataService','s3PopupService'];function controller($scope,$stateParams,dynamicGroupDataService,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,groupType=Modal.data.groupType,updated=false,position=Modal.data.position;this.group={'dt_type_id':$stateParams.dt_type_id};this.dt_group_id=Modal.data.dt_group_id;$this.global=0;this.canEdit=canEdit;activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.onClose=function(){if(!updated){return null}return $this.group};Modal.onSave=function(){return dynamicGroupDataService.edit($this.group).then(function(response){if(typeof response.errors=='undefined'){$this.group=response.group;delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}function activate(){if($this.dt_group_id){dynamicGroupDataService.getById($this.dt_group_id).then(function(response){$this.group=response.group;Modal.title='dynamic.group.param.editing';Modal.subtitle=response.group.name;$scope.$emit('popupLoad:done',true);if(response.group.ver_id==0){$this.global=1}})}else{$this.group.group_type=groupType;$this.group.position=position;Modal.title='dynamic.group.param.adding';Modal.subtitle='dynamic.group.group';$scope.$emit('popupLoad:done',true)}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicParamSelectorController',controller);controller.$inject=['_','$scope','dynamicParamDataService'];function controller(_,$scope,dynamicParamDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,injected_load=false;this.params={};this.model=Modal.data.model;this.global=Modal.data.global?1:0;this.modal_ver_id=Modal.data.modal_ver_id;this.selected={};this.select=select;this.dt_type_ids=Modal.data.dt_type_ids;this.param_id=Modal.data.param_id;this.alias=Modal.data.alias;this.method=Modal.data.method||'checkbox';this.injected=false;this.selectedTab=0;this.groupsSelect={'_0':{'dt_group_id':'0','name':'dynamic.group.main.tab'},'_1':{'dt_group_id':'1','name':'dynamic.group.legacy.tab'}};this.selectTab=selectTab;Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.param.selector.title';Modal.hide={'save':true,'saveAndClose':true,'headReload':true};activate();function activate(){_.forEach($this.model,function(param){if(typeof $this.alias!='undefined'){$this.selected[param.alias]=true}else{$this.selected[param.param_id]=true}});if($this.param_id>0||$this.alias!=''){dynamicParamDataService.getParamsDynamicParam({'param_id':$this.param_id,'alias':$this.alias,'type_param':Modal.data.type_param}).then(function(response){if(_.isObject(response)){checkInjected(response);$this.params=response}$scope.$emit('popupLoad:done',true)})}else{dynamicParamDataService.getList({dt_type_ids:$this.dt_type_ids,param_id:$this.param_id,hash_key:'param_id'}).then(function(response){if(_.isObject(response.params)){checkInjected(response.params);$this.params=response.params}$scope.$emit('popupLoad:done',true)})}}function checkInjected(params){_.forEach(params,function(param){if(param.param_type_id==19){$this.injected=true}})}function select(param){var key;if(typeof $this.alias!='undefined'){key=param.alias}else{key=param.param_id}if($this.method=='checkbox'){if(!$this.model[key]){$this.model[key]=param}else{delete $this.model[key]}}else{delete $this.model[Object.keys($this.model)[0]];$this.model[key]=param}if(typeof Modal.data.callback==='function'){Modal.data.callback(param)}}function selectTab(pane){if(pane['dt_group_id']==1&&!injected_load){loadInjecteds(pane)}else{$this.selectedTab=pane['dt_group_id']}}function loadInjecteds(pane){_.forEach($this.model,function(param){if(typeof $this.alias!='undefined'){$this.selected[param.alias]=true}else{$this.selected[param.param_id]=true}});dynamicParamDataService.getListInjected({dt_type_ids:$this.dt_type_ids,alias:$this.alias,hash_key:'param_id'}).then(function(response){$this.injected_params=response.params;injected_load=true;$this.selectedTab=pane['dt_group_id']})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicParamEditController',controller);controller.$inject=['$rootScope','$scope','s3PopupService','dynamicParamDataService'];function controller($rootScope,$scope,s3PopupService,dynamicParamDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,message,timer;this.param={dt_types:{},options:{},parentLists:{}};this.param_id=Modal.data.param_id;this.paramTypes=[];this._loaded=0;this.canEdit=canEdit;this.change=change;this.seoUrlParam=Modal.data.seoUrlParam;activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.param.adding';Modal.onClose=function(){if(!updated){return null}if(typeof $this.errors=='undefined'){if($this.param.options&&Array.isArray($this.param.options)){$rootScope.$broadcast('option-'+$this.param.param_id+':reload',$this.param.options.sort(function(a,b){return a.position-b.position}))}return $this.param}};function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}Modal.onSave=function(){if(!$this.param.hasParent){$this.param.parent_options=[];$this.param.parent_alias=''}convertOptions($this.param);return dynamicParamDataService.edit($this.param).then(function(response){if(typeof response.errors=='undefined'){$this.param=response.param;convertOptions($this.param);delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};Modal.onReload=function(){$this.paramTypes=[];$this._loaded=0;$this.param={dt_types:{},options:{},parentLists:{}};message=JS_RELOADED;delete $this.errors;activate()};$this.checkForTypeSelector=checkForTypeSelector;function checkForTypeSelector(){return[12,19,21].indexOf($this.param.param_type_id)>-1}this.debug=debug;function debug(){console.log($this.param);console.log($this.paramTypes)}function activate(){var seoUrlParam=0,smtParam=0,uniqueParam=0;for(var key in Modal.data.list){switch(parseInt(Modal.data.list[key].param_type_id)){case 30:seoUrlParam=Modal.data.list[key].param_id;break;case 7:smtParam=Modal.data.list[key].param_id;break;case 33:uniqueParam=Modal.data.list[key].param_id;break}}$this._loaded=0;if($rootScope.isStaff()){dynamicParamDataService.getParamTypes().then(function(response){if(seoUrlParam>0||smtParam>0){for(var i=0;i<response['param_types'].length;i++){switch(parseInt(response['param_types'][i].param_type_id)){case 30:if(seoUrlParam>0){response['param_types'][i]['disabledParam']=true}break;case 7:if(smtParam>0){response['param_types'][i]['disabledParam']=true}break;case 33:if(uniqueParam>0){response['param_types'][i]['disabledParam']=true}break}}}$this.paramTypes=response['param_types'];$this._loaded++;if(response['tags']){$this.tags=response['tags']}});dynamicParamDataService.getParentListParams({param_id:$this.param_id}).then(function(response){if(_.isArray(response.params)){$this.parentLists=response.params}$this._loaded++})}if($this.param_id){dynamicParamDataService.getById($this.param_id).then(function(response){_.replaceObject($this.param,response.param);$this.param.param_type_id=parseInt($this.param.param_type_id);Modal.title='dynamic.param.editing';Modal.subtitle=response.param.name;$this.global=(response.param.ver_id==0)?1:0;if(!_.size($this.param.dt_types)){$this.param.dt_types={}}if(!_.size($this.param.options)){$this.param.options=[]}convertOptions($this.param);if(!_.size($this.param.parentLists)){$this.param.parentLists=[]}$this._loaded++})}else{Modal.subtitle='dynamic.param.param'}}$scope.$watch(function(){return $this._loaded},function(a,b){if(a!=b){clearTimeout(timer);timer=setTimeout(function(){$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}},100)}});$scope.$watch(function(){return $this.param.param_type_id},function(a){if(a==33){$this.param.alias="unique_param_field"}});function convertOptions(param){if(_.isArray(param.options)){var tmp={};_.each(param.options,function(option,index){var key='_'+index;if(option.option_id){key='_'+option.option_id}tmp[key]=option});param.options=tmp}else if(!_.isArray(param.options)){var tmp=[];_.each(param.options,function(option){tmp.push(option)});if(tmp.length>1){param.options=tmp.sort(function(a,b){return a.position-b.position})}else{param.options=tmp}}if(param.parent_options){_.each(param.parent_options,function(parent_param){convertOptions(parent_param)})}}function change(){if($this.param.param_type_id==7){_.forEach($this.paramTypes,function(param){if(param.param_type_id==7){$this.param.alias=param.alias}})}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicParamListController',controller);controller.$inject=['dynamicParamListRouteService','dynamicParamService','dynamicParamDataService'];function controller(dynamicParamListRouteService,dynamicParamService,dynamicParamDataService){var $this=this;this.title='dynamic.param.title';this.params=dynamicParamListRouteService.params;this.uses=dynamicParamListRouteService.uses;this.param={};this.param.add=dynamicParamService.add;this.param.edit=dynamicParamService.edit;this.param.remove=dynamicParamService.remove;this.filterByTag=filterByTag;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};if(_.size(this.params)==0){this.params={}}function filterByTag(tag_id){dynamicParamDataService.getList({tag_id:tag_id,hash_key:'param_id'}).then(function(response){$this.params=response.params})}dynamicParamDataService.getParamTypes().then(function(response){$this.paramTypes=response.param_types})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicParamOptionSelectorController',controller);controller.$inject=['_','$scope','dynamicParamDataService'];function controller(_,$scope,dynamicParamDataService){var $this=this,Modal=$scope.$parent.$parent.Modal;this.options={};this.param_id=Modal.data.param_id;this.model=Modal.data.model;this.selected={};this.change=change;Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.param.option.selector.title';Modal.hide={'save':true,'saveAndClose':true};activate();function activate(){_.forEach($this.model,function(item){$this.selected[item.option_id]=true});if($this.param_id){dynamicParamDataService.getParamOptions({param_id:$this.param_id}).then(function(response){$scope.$emit('popupLoad:done',true);if(_.isObject(response.options)){$this.options=response.options}})}else{$scope.$emit('popupLoad:done',true)}}function change(option_id){if($this.selected[option_id]){$this.model[option_id]=$this.options[option_id]}else{delete $this.model[option_id]}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeSelectorController',controller);controller.$inject=['$scope','_','dynamicTypeDataService'];function controller($scope,_,dynamicTypeDataService){var $this=this,Modal=$scope.$parent.$parent.Modal;this.list=Modal.data.list;this._selected={};this.types={};this.select=select;this.method=Modal.data.method||'checkbox';activate();Modal.title='dynamic.type.selector.title';Modal.uptitle='dynamic.type.title';Modal.buttonsBottom=true;Modal.hide={'save':true,'saveAndClose':true,'headReload':true,'headExpand':true};function activate(){_.forEach($this.list,function(type){$this._selected[type.dt_type_id]=true});dynamicTypeDataService.getSelectorList({'load_params':Modal.data.load_params,'dt_type_ids':Modal.data.dt_type_ids}).then(function(response){$this.types=response.types;$scope.$emit('popupLoad:done',true)})}function select(type){var dt_type_id=type.dt_type_id;if($this.method=='checkbox'){if(!$this.list[dt_type_id]){$this.list[dt_type_id]=type}else{delete $this.list[dt_type_id]}}else{delete $this.list[Object.keys($this.list)[0]];$this.list[dt_type_id]=type}if(typeof Modal.data.callback==='function'){Modal.data.callback()}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeEditController',controller);controller.$inject=['$scope','dynamicTypeDataService','$rootScope','s3PopupService'];function controller($scope,dynamicTypeDataService,$rootScope,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,message;this.type={};this.dt_type_id=Modal.data.dt_type_id;this.folders=[];this.global=0;this.protection=0;this.global_update=0;this.canEdit=canEdit;activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.type.adding';Modal.onClose=function(){if(!updated){return null}if(typeof $this.errors=='undefined'){return $this.type}};Modal.onSave=function(){return dynamicTypeDataService.edit($this.type).then(function(response){if(typeof response.errors=='undefined'){$this.type=response.type;delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};Modal.onReload=function(){message=JS_RELOADED;$this.type={};delete $this.errors;activate()};function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}function activate(){dynamicTypeDataService.getDataForEdit({dt_type_id:$this.dt_type_id}).then(function(response){if(_.isObject(response.type)&&response.type.dt_type_id){$this.type=response.type;Modal.title='dynamic.type.editing';Modal.subtitle=response.type.name;if(response.type.ver_id==0){$this.global=1}if(response.type.protection==1){$this.protection=1}}if(_.isObject(response.tags)){$this.tags=response.tags}$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}})}$this.debug=function(){console.log('106:dynamic.type.edit.controller.js');console.log($this)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeViewController',controller);controller.$inject=['$stateParams','dynamicTypeService','dynamicObjectService','dynamicTypeDataService','dynamicObjectDataService','s3PopupService'];function controller($stateParams,dynamicTypeService,dynamicObjectService,dynamicTypeDataService,dynamicObjectDataService,s3PopupService){var $this=this,limit=30,mode='view',sortSystemFields=[{name:'general.created',alias:'created'},{name:'general.modified',alias:'modified'}];if(!this.alias){this.dt_type_id=$stateParams.dt_type_id}this.type={};this.title='';this.objects={};this.scheme={};this.params={};this.search={};this.search.sort={};this.search.search={};this.showAdd=true;this.groupOp={'list':{},'all':false,'count':0,'allCount':0,'paramSearch':{}};this.pageList=[];this.pageCurrent=1;this.pageChange=pageChange;this.checkSettings=checkSettings;this.size=size;this.m={'type':{'edit':dynamicTypeService.edit},'object':{'add':addObject},'search':{'onSort':onSort,'search':search,'searchText':searchText,'resetSort':resetSort,'resetSearch':resetSearch}};if(this.alias){if($this.hardSearch){dynamicTypeDataService.getTypeByAlias($this.alias).then(function(response){if(_.isObject(response.type)){$this.type=response.type;$this.title=response.type.name;$this.dt_type_id=response.type.dt_type_id}activate()})}else{dynamicTypeDataService.getIdByAlias($this.alias).then(function(response){$this.dt_type_id=response;activate()})}}else{activate()}function activate(){if($this.dt_type_id){if($this.hardSearch){$this.search.search=$this.hardSearch;search()}else{dynamicTypeDataService.getForView({dt_type_id:$this.dt_type_id,start:0,limit:limit}).then(function(response){parseResponse(response)})}}}function parseResponse(response){$this.objects={};$this.all=false;$this.groupOp.list={};$this.groupOp.count=0;if(_.isObject(response.type)){$this.type=response.type;$this.title=$this.type.name}if(response.tree&&_.size(response.tree)&&!$this.tree){$this.tree=response.tree}if(_.isObject(response.objects)&&_.size(response.objects)){$this.objects=response.objects}$this.groupOp.perPage=_.size($this.objects);if(_.isObject(response.params)){$this.params=response.params}if(_.isObject(response.scheme)){$this.scheme=response.scheme}if(response.total>=0){$this.groupOp.allCount=response.total;$this.total=response.total;pageListCreate(response.total);if(_.size($this.search.search)==0){$this.totalAll=response.total;if($this.type.max_objects>0){$this.totalAll=$this.totalAll+' из '+$this.type.max_objects}}}if(!$this.params.sort){$this.params.sort=sortSystemFields}else{if(response.params){$this.params.sort=sortSystemFields.concat($this.params.sort)}}checkSettings()}function onSort(){search($this.search.search,true)}function search(data,sortOnly){var start=0;sortOnly=sortOnly||false;mode='search';if(data){$this.search.search=data}else{$this.search.search={}}$this.search.search.dt_type_id=$this.dt_type_id;if(sortOnly){start=($this.pageCurrent*limit)-limit}return dynamicObjectDataService.getListForTypeWithSearch({'sort':$this.search.sort,'search':$this.search.search,'dt_type_id':$this.dt_type_id,'limit':limit,'start':start}).then(function(response){if(!sortOnly){$this.pageCurrent=1}$this.groupOp.paramSearch=$this.search.search;parseResponse(response);s3PopupService.closeLast(false);if(_.size($this.search.search)>1){$this.searchResult=true}})}function resetSearch(){var keys=_.keys($this.search.search);_.forEach(keys,function(key){delete $this.search.search[key]});$this.searchResult=false;search({})}function resetSort(){var keys=_.keys($this.search.sort);_.forEach(keys,function(key){delete $this.search.sort[key]});search($this.search.search)}function addObject(){dynamicObjectService.add({dt_type_id:$this.dt_type_id,list:$this.objects}).then(function(modal){modal.close.then(function(result){if(result!=null){checkSettings(false,'add')}switch($this.type.type_kind){case"tree":case"param_tree":if(!_.isObject(result)){break}$this.scheme.push(dynamicObjectService.getSchemeItem(result));break}})})}function pageChange(n,event){var target=$(event.currentTarget),start=(limit*(n-1));if($this.dt_type_id&&!target.is('.disabled')){if(mode=='search'){$this.search.search.dt_type_id=$this.dt_type_id;return dynamicObjectDataService.getListForTypeWithSearch({'sort':$this.search.sort,'search':$this.search.search,'dt_type_id':$this.dt_type_id,'limit':limit,'start':start}).then(function(response){$this.pageCurrent=n;parseResponse(response)})}else{dynamicTypeDataService.getForView({dt_type_id:$this.dt_type_id,start:start,limit:limit}).then(function(response){$this.pageCurrent=n;parseResponse(response)})}}}function pageListCreate(n){var tmp={},tmp2=[],total=Math.ceil(n/limit);for(var i=1;i<=total;i++){tmp={n:i,active:false};if(i==$this.pageCurrent){tmp.active=true}tmp2.push(tmp)}$this.pageList=tmp2}function checkSettings(type,typeUpdate){var total=0;var max_objects=0;if(_.isObject(type)){$this.type=type;$this.title=$this.type.name}if(typeof typeUpdate=='string'){if(typeUpdate=='copy'||typeUpdate=='add'){$this.type.count=$this.groupOp.allCount=parseInt($this.type.count)+1;$this.groupOp.perPage=parseInt($this.groupOp.perPage)+1}else if(typeUpdate=='remove'){$this.type.count=$this.groupOp.allCount=parseInt($this.type.count)-1;$this.groupOp.perPage=parseInt($this.groupOp.perPage)-1}}if($this.type.max_objects>0){$this.totalAll=$this.type.count+' из '+$this.type.max_objects}total=parseInt($this.type.count);max_objects=parseInt($this.type.max_objects);if(max_objects>0&&max_objects>total||max_objects==0){$this.showAdd=true}else{$this.showAdd=false}}function size(objects){return _.size(objects)}function searchText(data){if(data!=''){mode='search';$this.search.search={dt_full_text_search:data,dt_type_id:$this.dt_type_id};return dynamicObjectDataService.getListForTypeWithSearch({'sort':$this.search.sort,'search':$this.search.search,'dt_type_id':$this.dt_type_id,'limit':limit,'start':0}).then(function(response){$this.pageCurrent=1;$this.groupOp.paramSearch=$this.search.search;parseResponse(response);$this.searchResult=true})}else if($this.searchResult){resetSearch()}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeExportController',controller);controller.$inject=['$scope','_','dynamicTypeDataService','$filter','$rootScope','s3PopupService'];function controller($scope,_,dynamicTypeDataService,$filter,$rootScope,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false;this.scheme='';activate();Modal.buttonsBottom=false;Modal.buttonsTop=false;Modal.title='general.export';function activate(){return dynamicTypeDataService.exportTypes({}).then(function(response){if(_.isObject(response)){$this.scheme=$filter('json')(response.schema);Modal.title='general.export'}$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeImportController',controller);controller.$inject=['$scope','_','dynamicTypeDataService','$rootScope','s3PopupService'];function controller($scope,_,dynamicTypeDataService,$rootScope,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false;this.scheme='';this.canEdit=canEdit;activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='general.import';Modal.onClose=function(){if(!updated){return null}if(typeof $this.errors=='undefined'){return $this.scheme}};Modal.onSave=function(){if(typeof $this.scheme!='undefined'&&typeof $this.scheme=='string'){$this.scheme=JSON.parse($this.scheme)}return dynamicTypeDataService.importTypes({'schema':$this.scheme}).then(function(response){if(typeof response.errors=='undefined'){$this.type=response.type;delete $this.errors;updated=true}else if(response.errors){$this.errors=response.errors;return false}})};function activate(){return s3PopupService.confirm('dynamic.type.importNotice1').then(function(modal){modal.close.then(function(response){if(response){$scope.$emit('popupLoad:done',true)}else{return s3PopupService.confirm('dynamic.type.importNotice2').then(function(modal){modal.close.then(function(response){if(response){$scope.$emit('popupLoad:done',true)}})})}})})}function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicObjectSelectorControllerTree',controller).config(treeConfig);treeConfig.$inject=['$rootScopeProvider'];function treeConfig($rootScopeProvider){$rootScopeProvider.digestTtl(30)}controller.$inject=['$filter','$q','$scope','_','dynamicObjectDataService','dynamicObjectService'];function controller($filter,$q,$scope,_,dynamicObjectDataService,dynamicObjectService){var $this=this,Modal=$scope.$parent.$parent.Modal,divContextMenu='s3-tree-context-for-selector',linked_dt_type_id=Modal.data.linked_dt_type_id,dt_type_id=Modal.data.dt_type_id,alias=Modal.data.alias,parent_alias=Modal.data.parent_alias,parent_object_ids=Modal.data.parent_object_ids,load_object_inject_params=Modal.data.load_object_inject_params,multiple=Modal.data.multiple,max_values=Modal.data.max_values,max_count=1000,total=0,timer,lastContext;Modal.buttonsBottom=true;Modal.title='general.editing';Modal.uptitle='dynamic.object.selector.title';Modal.hide={'save':true,'saveAndClose':true,'headReload':true,'headExpand':true};this.toggle=toggle;this.options=options();this.collapsed=1;this.total=0;this.expands={};this.dragTarget=0;this.lastHoverExpand=0;this.objects={};this.objectsSuggest={};this.selected={};this.model=Modal.data.objects;this.max_count=max_count;this.scheme=[];this.selectDisabled=false;this.alias=alias;this.select=select;this.addObject=addObject;this.editObject=editObject;this.beforeDrop=beforeDrop;this.contextMenu=contextMenu;this.addExpand=addExpand;this.search=search;this.resetSearch=resetSearch;this.contextAdd=contextAdd;this.contextEdit=contextEdit;this.contextDelete=contextDelete;if(max_values==0){max_values=100}if(multiple==0){multiple=1;max_values=1}activate();function activate(){if(_.size($this.model)){_.forEach($this.model,function(object){$this.selected[object.object_id]=true})}dynamicObjectDataService.getListForSelector({alias:alias,dt_type_id:dt_type_id,linked_dt_type_id:linked_dt_type_id,parent_object_ids:parent_object_ids,load_object_inject_params:load_object_inject_params,selected_ids:Object.keys($this.selected),max_count:max_count,parent_alias:parent_alias}).then(function(response){if(_.isObject(response.objects)&&!_.isEmpty(response.objects)){$this.objects=response.objects}$this.total=response.total;schemeUpdate(response.scheme);multipleCheck();$scope.$emit('popupLoad:done',true)})}function editObject(object){dynamicObjectService.edit({dt_type_id:linked_dt_type_id,object_id:object.object_id,selector_dt_type_id:dt_type_id,selector_alias:alias,list:$this.objects})}function contextEdit(event){if(event){var object=$(event.currentTarget).data('object')}return editObject(object)}function addObject(){dynamicObjectService.add({dt_type_id:linked_dt_type_id,selector_dt_type_id:dt_type_id,selector_alias:alias,list:$this.objects,schemeUpdate:schemeUpdate})}function contextAdd(event){if(event){var object=$(event.currentTarget).data('object')}return dynamicObjectService.add({parent_object_id:object.object_id,dt_type_id:object.dt_type_id,list:$this.objects,schemeUpdate:schemeUpdate})}function contextDelete(event){if(event){var object=$(event.currentTarget).data('object')}return dynamicObjectService.removeTreeItem(object.object_id,$this)}function select(object,noCheckbox){var key='_'+object.object_id;if($this.selected[object.object_id]&&typeof noCheckbox=='undefined'||!$this.selected[object.object_id]&&noCheckbox==true){if($this.selectDisabled==false){if(!$this.selected[object.object_id]){$this.selected[object.object_id]=true}object['position']=$this.model.length;$this.model.push(object)}}else{if(noCheckbox==true){delete $this.selected[object.object_id]}_.each($this.model,function(obj,index){if(obj&&obj.object_id==object.object_id){$this.model.splice(index,1)}});delete $this.model[key]}multipleCheck()}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){$this.selectDisabled=true}else{$this.selectDisabled=false}}function beforeDrop(moveData){return dynamicObjectDataService.moveObjectTreeItem({'target_id':moveData.target.object_id,'source_id':moveData.source.object_id,'mode':moveData.mode})}function options(){var options={dragMove:function(event){clearTimeout(timer);timer=setTimeout(function(){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(move_data.target){$this.dragTarget=move_data.target.object_id;if($this.lastHoverExpand!=$this.dragTarget&&$this.expands[$this.dragTarget]!=false){$this.expands[$this.lastHoverExpand]=true;$this.expands[$this.dragTarget]=false;$this.lastHoverExpand=$this.dragTarget}}},500)},dropped:function(event){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(move_data.target){$this.dragTarget=move_data.target.object_id;if($this.lastHoverExpand!=$this.dragTarget&&$this.expands[$this.dragTarget]!=false){$this.expands[$this.lastHoverExpand]=true}}$this.lastHoverExpand=0;$this.dragTarget=0;if(!move_data.mode){return $q.reject()}if(typeof $this.beforeDrop=='function'){return $this.beforeDrop(move_data).then(function(response){if(!response.moved){return $q.reject()}if(parent&&parent.children.length==0){$this.expands[parent.object_id]=true}return true})}return $q.reject()},_getParent:function(dest){return dest.nodesScope.$parent.$parent.object},_getSource:function(source){return source.nodeScope.object},_getPosition:function(dest){return dest.index},_getLastPosition:function(source){return source.index},_getMoveData:function(source,parent,index,last_position){var mode=false,target={},data,prev;if(!parent){target=$this.scheme;prev=target[index-1]}else{prev=parent.children[index-1]}if(index==0&&parent){target=parent;mode='inside'}else if(index==0&&!parent){target={'object_id':null};mode='before'}else{target=prev;mode='after'}data={'mode':mode,'target':target,'source':source};return data}};return options}function contextMenu(object,event){var contextMenu=$('#'+divContextMenu),target=$(event.currentTarget).parents('.dynatree-node:first'),targetOffset=target.find('.dynatree-context').position();if(contextMenu.is(':visible')){contextMenu.hide();if(lastContext==object.object_id){lastContext='';return false}}S3ContextMenuController.openContextMenu(contextMenu,function(context){context.find('li').data('object',object);context.find('.folder-id').html(object.object_id).attr('data-clipboard-text',object.object_id);lastContext=object.object_id;context.css({'top':targetOffset.top+21,'left':targetOffset.left})},null,target)}$scope.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};$scope.collapseAll=function(){$scope.$broadcast('angular-ui-tree:collapse-all');_.each($this.expands,function(expand,key){$this.expands[key]=true});$this.collapsed=1};$scope.expandAll=function(){$scope.$broadcast('angular-ui-tree:expand-all');_.each($this.expands,function(expand,key){$this.expands[key]=false});$this.collapsed=0};function toggle(scope,object_id){$this.expands[object_id]=!$this.expands[object_id];scope.toggle()}function addExpand(object_id){if(typeof $this.expands[object_id]=='undefined'){$this.expands[object_id]=true}}function schemeUpdate(newScheme){$this.scheme=newScheme}$scope.$watch(function(){return $this.scheme},function(){$this.total=_.size($this.objects)});function search(){if($this.searchText&&$this.searchText!=''){$this.searchResult=$filter('toArray')(JSON.parse(JSON.stringify($this.objects)));$this.searchResult=$filter('filter')($this.searchResult,{'mask':$this.searchText})}}function resetSearch(){delete $this.searchText;delete $this.searchResult}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicObjectSelectorControllerRegular',controller);controller.$inject=['$scope','_','dynamicObjectDataService','dynamicObjectService'];function controller($scope,_,dynamicObjectDataService,dynamicObjectService){var $this=this,Modal=$scope.$parent.$parent.Modal,linked_dt_type_id=Modal.data.linked_dt_type_id,dt_type_id=Modal.data.dt_type_id,alias=Modal.data.alias,parent_alias=Modal.data.parent_alias,parent_object_ids=Modal.data.parent_object_ids,load_object_inject_params=Modal.data.load_object_inject_params,multiple=Modal.data.multiple,max_values=Modal.data.max_values,max_count=500,total=0,suggestObjects={},timer;Modal.buttonsBottom=true;Modal.title='general.editing';Modal.uptitle='dynamic.object.selector.title';Modal.hide={'save':true,'saveAndClose':true,'headReload':true,'headExpand':true};this.objects={};this.objectsSuggest={};this.selected={};this.model=Modal.data.objects;this.max_count=max_count;this.selectDisabled=false;this.search={};this.getTotal=getTotal;this.select=select;this.selectSuggest=selectSuggest;this.addObject=addObject;this.editObject=editObject;this.suggest=suggest;this.watch=watch;this.removeObject=objectRemove;if(max_values==0){max_values=100}if(multiple==0){multiple=1;max_values=1}activate();function watch(list,last){if(total>=max_count){_.forEach(list,function(object,key){if(!$this.selected[key]){$this.objectsSuggest[key]=object;delete $this.objects[key]}})}}function getTotal(){return total}function filterSelected(selectedList,list){_.forEach(list,function(object,key){if(selectedList[key]){delete list[key]}});return list}function activate(){if(_.size($this.model)){_.forEach($this.model,function(object){$this.selected[object.object_id]=true})}dynamicObjectDataService.getListForSelector({alias:alias,dt_type_id:dt_type_id,linked_dt_type_id:linked_dt_type_id,parent_object_ids:parent_object_ids,load_object_inject_params:load_object_inject_params,selected_ids:Object.keys($this.selected),max_count:max_count,parent_alias:parent_alias}).then(function(response){if(_.isObject(response.objects)&&!_.isEmpty(response.objects)){$this.objects=response.objects;suggestObjects=JSON.parse(JSON.stringify($this.objects))}total=response.total;$scope.$emit('popupLoad:done',true);multipleCheck()})}function suggest(text,event){clearTimeout(timer);if(typeof text!='undefined'&&!event.ctrlKey&&!event.altKey&&!event.metaKey&&event.keyCode!=27){timer=setTimeout(function(){dynamicObjectDataService.getListForSelectorSuggest({alias:alias,dt_type_id:dt_type_id,linked_dt_type_id:linked_dt_type_id,parent_object_ids:parent_object_ids,load_object_inject_params:load_object_inject_params,text:text}).then(function(response){if(_.isObject(response.objects)&&!_.isEmpty(response.objects)){$this.objectsSuggest=filterSelected($this.objects,response.objects);suggestObjects=JSON.parse(JSON.stringify($this.objectsSuggest))}else{$this.objectsSuggest={}}})},500)}else{$this.objectsSuggest={}}}function editObject(event,object){event.preventDefault();dynamicObjectService.edit({dt_type_id:linked_dt_type_id,object_id:object.object_id,selector_dt_type_id:dt_type_id,selector_alias:alias,list:$this.objects})}function addObject(){dynamicObjectService.add({dt_type_id:linked_dt_type_id,selector_dt_type_id:dt_type_id,selector_alias:alias,list:$this.objects})}function select(object){var key='_'+object.object_id;if($this.selected[object.object_id]){object['position']=$this.model.length;$this.model.push(object)}else{_.each($this.model,function(obj,index){if(obj.object_id==object.object_id){$this.model.splice(index,1)}});delete $this.objects[object.object_id];if(suggestObjects[object.object_id]){if(total>=max_count){$this.objectsSuggest[object.object_id]=object}else{$this.objects[object.object_id]=object}}}multipleCheck()}function selectSuggest(object){var key='_'+object.object_id;if($this.selected[object.object_id]){object['position']=$this.model.length;$this.model.push(object);$this.objects[object.object_id]=object;delete $this.objectsSuggest[object.object_id]}else{_.each($this.model,function(obj,index){if(obj.object_id==object.object_id){$this.model.splice(index,1)}})}}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){$this.selectDisabled=true}else{$this.selectDisabled=false}}function objectRemove(object_id,list){return dynamicObjectService.remove(object_id,list,function(){_.each(list,function(el,k){if(object_id==el.object_id){delete list[k]}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicObjectEditController',controller);controller.$inject=['$rootScope','$scope','$stateParams','dynamicObjectService','dynamicObjectDataService','dynamicTypeDataService','eventManagerService','dynamicActionTreeDataService'];function controller($rootScope,$scope,$stateParams,dynamicObjectService,dynamicObjectDataService,dynamicTypeDataService,eventManagerService,dynamicActionTreeDataService){var $this=this,Summoner=this.summoner||$scope.$parent.$parent.Modal,updated=false,selector_dt_type_id=Summoner.data.selector_dt_type_id,selector_alias=Summoner.data.selector_alias,objectsParamIds={},checkSettings=Summoner.data.callback,mode=this.mode||'modal',message;this.list=Summoner.data.list;this.done=false;this.dt_type_id=Summoner.data.dt_type_id?Summoner.data.dt_type_id:$stateParams.dt_type_id;this.dt_type_alias=Summoner.data.dt_type_alias?Summoner.data.dt_type_alias:$stateParams.dt_type_alias;this.parent_object_id=Summoner.data.parent_object_id;this._object={};this.object={'parent_object_id':$this.parent_object_id,'dt_type_id':$this.dt_type_id,'dt_type_alias':$this.dt_type_alias,'params':{},'errors':{}};this.object_id=Summoner.data.object_id;this.groups={};this.groupEdit=(Summoner.data.groupEdit?true:false);this.debug=debug;if(this.alias){dynamicTypeDataService.getIdByAlias($this.alias).then(function(response){$this.dt_type_id=response;activate()})}else{fullActivate()}function fullActivate(){activate().then(function(){$this.object.selector_dt_type_id=selector_dt_type_id;$this.object.selector_alias=selector_alias;if($this.object.object_id>0&&$rootScope.storage&&typeof $rootScope.objectStorage[$this.object.dt_type_id]=='undefined'){if(!_.isArray($this.list)){if(!selector_dt_type_id){$rootScope.objectStorage[$this.object.dt_type_id]=$this.list['_'+$this.object.object_id]}else{$rootScope.objectStorage[$this.object.dt_type_id]=$this.list[$this.object.object_id]}}}})}Summoner.buttonsBottom=true;Summoner.buttonsTop=true;Summoner.title='dynamic.object.adding';Summoner.onClose=function(){if(!updated){return null}if(mode=='modal'){if($this._object._level>0){$this.list[$this._object.object_id]=$this._object}else{if(!_.isArray($this.list)){if(!selector_dt_type_id){$this.list['_'+$this._object.object_id]=$this._object}else{$this.list[$this._object.object_id]=$this._object}}}delete $rootScope.objectStorage[$this.object.dt_type_id]}return $this._object};Summoner.onSave=function(){if($this.object.errors){delete $this.object.errors}var data=parseToSaveParams($this.object);if($this.groupEdit){data['object_ids']=Summoner.data.object_ids;data['limit']=Summoner.data.limit;data['paramSearch']=Summoner.data.paramSearch;return dynamicObjectDataService.editGroup(data).then(function(response){if(response.status=='done'){if(typeof Summoner.data.callback=='function'){Summoner.data.callback()}}else if(response.status=='queue'){util.msg(JS_QUEUED)}else if(response.status=='error'){util.msg(response.error_message)}})}else{return dynamicObjectDataService.edit(data).then(function(response){if(_.isObject(response.object_with_mask)){message=JS_SAVED;$this._object=response.object_with_mask;if(typeof $this.object_id=='undefined'){$this.object_id=$this._object.object_id}if(_.isObject(response.object)){parseResponse(response)}objectsParamIds={};dynamicObjectService.parseToEditParams({controls:$this.controls,object:$this.object,$this:$this,callback:popupLoadDone});objectName(response.object_with_mask);updated=true;if(typeof checkSettings=='function'){checkSettings(false,'copy')}if(response.scheme&&Summoner.data&&typeof Summoner.data.schemeUpdate=='function'){if(typeof $this.list[$this.object_id]=='undefined'){$this.list[$this.object_id]=$this._object}Summoner.data.schemeUpdate(response.scheme)}else if(!response.scheme){if(!_.isArray($this.list)){if(!selector_dt_type_id){if(typeof $this.list['_'+$this.object_id]=='undefined'){if(Summoner.data.reverse==true){reverse($this.list)}$this.list['_'+$this.object_id]=$this._object;if(Summoner.data.reverse==true){reverse($this.list)}}}else{if(typeof $this.list[$this.object_id]=='undefined'){$this.list[$this.object_id]=$this._object}}}else{var index=0,find=false;_.each($this.list,function(object,i){if(object.object_id==$this._object.object_id){index=i;find=true}});if(find){$this.list[index]=$this._object}else{$this.list[$this.list.length]=$this._object}}}return true}else if(response.errors&&response.errors){$this.object.errors=response.errors;updateErrors($this.object.errors);return false}else if(response.error&&response.error_msg=="unique_param_field"){$this.object.errors={"unique_param_field":{'error_message':"Текст не является уникальным для типа"}};updateErrors($this.object.errors);return false}})}};Summoner.onReload=function(){message=JS_RELOADED;delete $this.errors;return activate()};function activate(){if(Summoner.data.action){return dynamicActionTreeDataService.runAction(Summoner.data.action).then(function(response){parseResponse(response.data.data)})}else{return dynamicObjectDataService.getDataForEditController($this.dt_type_id,$this.object_id).then(function(response){parseResponse(response)})}}function parseResponse(response){if(response.dt_type_id>0){$this.dt_type_id=response.dt_type_id;$this.object.dt_type_id=$this.dt_type_id}if(response.dt_type_alias!=''){$this.dt_type_alias=response.dt_type_alias;$this.object.dt_type_alias=$this.dt_type_alias}if(_.isObject(response.object)){$this.object=response.object;if(!$this.object.errors){$this.object['errors']={}}if(Summoner.data.copy){Summoner.title='dynamic.object.copying'}else{Summoner.title='dynamic.object.editing'}if(!_.isObject($this.object.params)){$this.object.params={}}if(Summoner.data.copy){var newObject=$.parseJSON(JSON.stringify($this.object));delete newObject.object_id;$this.object=newObject;delete Summoner.data.copy}}if(_.isArray(response.groups)){var groups={};_.forEach(response.groups,function(group){groups['_'+group.dt_group_id]=group});$this.groups=groups}else if(_.isObject(response.groups)){$this.groups=response.groups}$this.controls=response.controls;if(!$this.controls||$this.controls.length==0){if(!Summoner.hide){Summoner.hide={}}Summoner.hide['saveAndClose']=true;Summoner.onSave=null;$scope.$emit('popupLoad:done',true)}else{dynamicObjectService.parseToEditParams({controls:$this.controls,object:$this.object,$this:$this,callback:popupLoadDone})}if(mode=='modal'){if($this.list['_'+$this.object_id]){objectName($this.list['_'+$this.object_id])}else if($this.list[$this.object_id]){objectName($this.list[$this.object_id])}else if($this.list[0]){objectName($this.list[0])}}$this.done=true}function parseToSaveParams(data,paramIds){data=$.parseJSON(JSON.stringify(data));if($this.dt_type_alias!=''){data.dt_type_alias=$this.dt_type_alias}paramIds=paramIds||objectsParamIds;var obj={},key;_.each(data.params,function(param,id){obj={};_.each(param,function(value){if(value){if(value.image_id){obj['_'+value.image_id]=value}else if(value.file_id){obj['_'+value.file_id]=value}else if(value.product_id){obj['_'+value.product_id]=value}else if(value.user_id){obj['_'+value.user_id]=value}if(_.size(obj)>0){data.params[id]=obj}}});if(paramIds[id]===true){if(_.size(param)>0){key=Object.keys(param)[0];obj={};_.each(param[key],function(value){if(value.object_id){obj['_'+value.object_id]=value}});data.params[id][key]=obj}else{data.params[id]={}}}else if(paramIds[id]){if(_.size(param)>0){key=Object.keys(param)[0];obj={};_.each(param[key],function(value,object_id){if(_.size(param[key][object_id]['errors'])){delete param[key][object_id]['errors']}param[key][object_id]=parseToSaveParams(value,paramIds[id]['embeded'])})}else{data.params[id]={}}}});return data}function debug(){console.log($this.object);console.log($this.object.params)}function objectName(object){if(typeof object!='undefined'&&typeof object.mask!='undefined'&&object.mask!=''){Summoner.subtitle='"'+object.mask+'"'}else if(typeof $this.object.object_id!='undefined'){Summoner.subtitle='#'+$this.object.object_id}else if(!$this.object.object_id&&!$this.groupEdit){Summoner.subtitle='dynamic.object.object'}else if($this.groupEdit){Summoner.subtitle='dynamic.object.groupOp.edit'}}function embededUpdate(data,responseData,paramIds){var key;paramIds=paramIds||objectsParamIds;_.each(data.params,function(param,id){if(paramIds[id]&&paramIds[id]!==true){key=Object.keys(param)[0];if(typeof key!='undefined'){eventManagerService.trigger('embeded.update'+$this.dt_type_id+$this.object_id+key,responseData.params[id][key])}}})}function reverse(object){if(_.isObject(object)){var keys=Object.keys(object);keys=keys.reverse();_.each(keys,function(key){var prop=object[key];delete object[key];object[key]=prop})}}function updateErrors(errors){eventManagerService.trigger('embeded.update.errors'+$this.dt_type_id+$this.object_id,errors)}function popupLoadDone(){$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}}$scope.$on("$destroy",function(){delete $rootScope.objectStorage[$this.object.dt_type_id]})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeParamSelectorController',controller);controller.$inject=['_','$scope','dynamicTypeParamDataService'];function controller(_,$scope,dynamicTypeParamDataService){var $this=this,Modal=$scope.$parent.$parent.Modal;this.params={};this.dt_type_id=Modal.data.dt_type_id;this.folder_id=Modal.data.folder_id;this.model=Modal.data.model;this.selected={};this.change=change;Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.type.param.selector.title';Modal.uptitle='dynamic.type.title';Modal.hide={'save':true,'saveAndClose':true,'headReload':true,'headExpand':true};activate();function activate(){_.forEach($this.model,function(item){$this.selected[item.param_id]=true});if($this.dt_type_id){dynamicTypeParamDataService.getSelectorListByTypeId($this.dt_type_id).then(function(response){parseResponse(response)})}else if($this.folder_id){dynamicTypeParamDataService.getSelectorListByFolderId($this.folder_id).then(function(response){parseResponse(response)})}}function parseResponse(response){if(_.isObject(response.params)){$this.params=response.params}$scope.$emit('popupLoad:done',true)}function change(param_id){if($this.selected[param_id]){$this.model[param_id]=$this.params[param_id]}else{delete $this.model[param_id]}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeParamEditController',controller);controller.$inject=['$element','$scope','$stateParams','dynamicTypeDataService','dynamicTypeParamDataService','s3PopupService','dynamicActionTreeDataService'];function controller($element,$scope,$stateParams,dynamicTypeDataService,dynamicTypeParamDataService,s3PopupService,dynamicActionTreeDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,dt_type_id=Modal.data.dt_type_id,type_param_id=Modal.data.type_param_id,object_id=Modal.data.object_id,updated=false;this.params=[];this.controls=[];this.parentParams=[];this.groups=[];this.param={dt_type_id:dt_type_id,type_param_id:type_param_id,object_id:object_id,options:{},extra_params:{},validators:{}};this.type={};this.searchControls=[];this.validatorControls=[];this.shower={'transformator':{},'validator':{}};this.trees={};this.selectedTab=0;this.groupsForm={'_0':{'dt_group_id':'0','name':'general.main'},'_1':{'dt_group_id':'1','name':'dynamic.type.param.validators'},'_2':{'dt_group_id':'2','name':'dynamic.type.param.transformators'},'_3':{'dt_group_id':'3','name':'Дополнительно'}};this.controlsForm={0:[{'name':'dynamic.type.param.param','alias':'param_id','dt_group_id':0}],1:['validatorControls'],2:['transformatorControls'],3:[{'name':'general.mask','alias':'extra_params->mask','dt_group_id':3}]};this.sortableOptions={handle:'.sort-handler',axis:'y'};this.cmsReadonlyChange=cmsReadonlyChange;this.nestingLimitedChange=nestingLimitedChange;this.debug=debug;this.customMapCheck=customMapCheck;this.canEdit=canEdit;this.loadParamEditControls=loadParamEditControls;this.selectTab=selectTab;this.transformatorAdd=transformatorAdd;this.transformatorDelete=transformatorDelete;this.validatorAdd=validatorAdd;this.validatorDelete=validatorDelete;this.clearTransformatorOption=clearTransformatorOption;this.expand=expand;this.selectorTree=selectorTree;function debug(){console.log($this)}activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.type.param.adding';Modal.onClose=function(){if(!updated){return null}if(typeof $this.errors=='undefined'){return $this.param}};Modal.onSave=function(){if(Modal.data.pos){$this.param.pos=Modal.data.pos}return dynamicTypeParamDataService.edit({param:$this.param}).then(function(response){if(typeof response.errors=='undefined'&&response.param){$this.param=response.param;delete $this.errors;updated=true}else if(response.errors){$this.errors=response.errors;return false}})};Modal.onReload=function(){$this.params=[];$this.groups=[];$this.controls=[];$this.mayBeMultiple=false;$this.mayBeLimited=false;$this.mayBeCmsReadonly=false;$this.mayBeNestingLimited=false;$this.controls=[];$this.searchControls=[];$this.validatorControls=[];$this.parentParams=[];$this.param={dt_type_id:dt_type_id,type_param_id:type_param_id,object_id:object_id,options:{},extra_params:{},validators:{}};delete $this.errors;activate()};function activate(){if(dt_type_id){dynamicTypeDataService.getById(dt_type_id).then(function(response){$this.type=response.type})}dynamicTypeParamDataService.getAllDataForParam({dt_type_id:dt_type_id,type_param_id:type_param_id,object_id:object_id}).then(function(response){if(response.param){Modal.title='dynamic.type.param.editing';Modal.subtitle=response.param.name;$this.param=response.param;$this.param_type_id=response.param.param.param_type_id;$this.param_id=response.param.param.param_id;$this.global=(response.param.param.ver_id==0)?1:0;parseResponse(response)}else{checkEmptyTab()}if(response.groups){$this.groups=response.groups;$this.groups.unshift({'dt_group_id':'0','name':'Без группы'})}if(response.params){if(typeof dt_type_id=='undefined'){_.each(response.params,function(param,key){if(param&&param.param_type_id==30){response.params.splice(1,key)}})}$this.params=response.params}$scope.$emit('popupLoad:done',true)})}function loadParamEditControls(){dynamicTypeParamDataService.loadParamEditControls($this.type.dt_type_id,$this.param.param_id,object_id).then(function(response){parseResponse(response)});var param=_.find($this.params,{param_id:$this.param.param_id});$this.param_type_id=param.param_type_id}function parseResponse(response){$this.mayBeMultiple=response.multiple||false;$this.mayBeLimited=response.limited||false;$this.mayBeCmsReadonly=response.cms_readonly||false;$this.mayBeStaffOnly=response.staff_only||false;$this.mayBeNestingLimited=response.nesting_limited||false;$this.controls=response.controls;$this.searchControls=response.search_controls;$this.validatorControls=response.available_validators;$this.transformatorControls=response.avialable_transformators;$this.parentParams=response.parent_params;setTimeout(function(){$element.find('#controlsList').trigger('liszt:updated')},0);if($this.transformatorControls){var newTransformatorControls={};_.forEach($this.transformatorControls,function(transformator){newTransformatorControls[transformator.control_id]=transformator});$this.transformatorControls=newTransformatorControls}if($this.param_type_id==32&&$this.param.type_param_id==undefined){$this.param.cms_readonly='1'}if(!_.isObject($this.param.options)||_.isArray($this.param.options)){$this.param.options={}}if(!_.isObject($this.param.images)||_.isArray($this.param.images)){$this.param.images={}}if(!_.isObject($this.param.extra_params)||_.isArray($this.param.extra_params)){$this.param.extra_params={}}if(!_.isObject($this.param.validators)||_.isArray($this.param.validators)){$this.param.validators={}}else{var clear;_.forEach($this.param.validators,function(validator,code){clear=false;switch(validator){case'':delete $this.param.validators[code];clear=true;break;case'0':case 0:if($this.validatorControls[code]['type']=='checkbox'){delete $this.param.validators[code];clear=true}break}if(typeof $this.validatorControls[code]=='undefined'){delete $this.param.validators[code];clear=true}if(!clear){$this.validatorControls[code]['disable']=true}})}if(!_.isArray($this.param.transformators)){$this.param.transformators=[]}else{_.forEach($this.param.transformators,function(transformator,i){if($this.transformatorControls[transformator.control_id]){$this.transformatorControls[transformator.control_id]['disable']=true}else{$this.param.transformators.splice(i,1)}})}checkEmptyTab();if(_.size($this.controls)==1){$this.param.control_id=$this.controls[0].control_id}$this.param.control_id=parseInt($this.param.control_id);$this.param.search_cms_control_id=parseInt($this.param.search_cms_control_id);$this.param.search_site_control_id=parseInt($this.param.search_site_control_id)}function cmsReadonlyChange(){if($this.param.cms_readonly==1){$this.validatorControls['required']['disable']=true;delete $this.param.validators['required']}else{delete $this.validatorControls['required']['disable']}}function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}function nestingLimitedChange(){if($this.param.nesting_limited==1){$this.param.validators={}}}function customMapCheck(){var result=true;if($this.param.parent_alias&&($this.param.control_id=='22'||$this.param.control_id=='23')){_.each($this.parentParams,function(param){if($this.param.parent_alias==param.alias){if(param.control_id==26&&param.param_type_id==15){delete $this.param.search_cms_control_id;result=false}}})}return result}function selectTab(pane){$this.selectedTab=pane['dt_group_id'];validatorsListUpdate()}function transformatorAdd(){if(typeof $this.newTransformator!='undefined'){var control_id=$this.newTransformator;$this.param.transformators.push({control_id:control_id});$this.shower.transformator[control_id]=true;$this.transformatorControls[control_id]['disable']=true;delete $this.newTransformator;transformatorsListUpdate()}}function transformatorDelete(k){$this.transformatorControls[$this.param.transformators[k].control_id]['disable']=false;$this.param.transformators.splice(k,1);transformatorsListUpdate()}function clearTransformatorOption(option,template){if(typeof option.value){delete template.value}}$scope.$on('s3DtGoToPaneAndField',function(event,data){angular.element(window).trigger('resize');$this.selectedTab=data.group_id;if(typeof alias=='string'){clearTimeout(timer);timer=setTimeout(function(){window.scrollTo(0,$element.find('.s3_dt_alias_'+alias+':first').offset().top-50)},0)}});function checkEmptyTab(){if(_.size($this.validatorControls)>0||_.size($this.param.validators)>0){$this.groupsForm['_1']['disabled']=false}else{$this.groupsForm['_1']['disabled']=true}if(_.size($this.transformatorControls)>0||_.size($this.param.transformators)>0){$this.groupsForm['_2']['disabled']=false}else{$this.groupsForm['_2']['disabled']=true}if(typeof $this.param.param_id!='undefined'){$this.groupsForm['_3']['disabled']=false}else{$this.groupsForm['_3']['disabled']=true}transformatorsListUpdate();validatorsListUpdate()}function transformatorsListUpdate(){setTimeout(function(){$element.find('#transformatorControlsList').trigger('liszt:updated')},0)}function validatorsListUpdate(){setTimeout(function(){$element.find('#validatorControlsList').trigger('liszt:updated')},0)}function validatorAdd(){if(typeof $this.newValidator!='undefined'){var code=$this.newValidator,newValue='';$this.shower.validator[code]=true;switch($this.validatorControls[code]['type']){case'checkbox':newValue=1;break}$this.param.validators[code]=newValue;$this.validatorControls[code]['disable']=true;delete $this.newValidator;validatorsListUpdate()}}function validatorDelete(k){$this.validatorControls[k]['disable']=false;delete $this.param.validators[k];validatorsListUpdate()}function selectorTree(key,type){var list={},scope=0,target;switch(type){case'validator':target=$this.param.validators[key];scope=['validator'];break;case'transformator':target=$this.param.transformators[key].tree_alias;scope=['transformator'];break}if(!$this.trees[target]){list={}}else if($this.trees[target]){list[$this.trees[target].dt_action_tree_id]=$this.trees[target]}s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action.tree/tree/selector/dynamic.action.tree.selector.html',{list:list,type:type,scope:scope,method:'radio'}).then(function(modal){modal.close.then(function(){if(Object.keys(list).length>0){var _key=Object.keys(list)[0],alias=list[_key].alias;$this.trees[alias]=list[_key];switch(type){case'validator':$this.param.validators[key]=alias;break;case'transformator':$this.param.transformators[key].tree_alias=alias;break}}})})}function expand(type,key,i){var selector=false,scope=0,target,alias;switch(type){case'validator':target=$this.validatorControls[key];alias=$this.param.validators[key];selector=target.type=='selector';scope=['validator'];break;case'transformator':target=$this.transformatorControls[key];alias=$this.param.transformators[i].tree_alias;selector=target.type=='selector';scope=['transformator'];break}if(selector){dynamicActionTreeDataService.getByAlias({'alias':alias,'scope':scope}).then(function(response){if(_.size(response.tree)){$this.trees[alias]=response.tree}$this.shower[type][key]=!$this.shower[type][key]})}else{$this.shower[type][key]=!$this.shower[type][key]}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTypeParamListController',controller);controller.$inject=['$scope','dynamicTypeParamListRouteService','dynamicTypeParamService','dynamicTypeParamDataService'];function controller($scope,dynamicTypeParamListRouteService,dynamicTypeParamService,dynamicTypeParamDataService){var $this=this,paramsMoved={},veiwAll=true,defaultSheme={};this.type=dynamicTypeParamListRouteService.type;this.params=dynamicTypeParamListRouteService.params;this.groups=dynamicTypeParamListRouteService.groups;this.title='dynamic.type.param.title';this.param={};this.param.add=add;this.param.edit=edit;this.param.remove=dynamicTypeParamService.remove;this.param.loadByGroup=loadByGroup;this.savePositions=savePositions;this.active={};this.param.changeSwitchParam=dynamicTypeParamService.changeSwitchParam;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};this.util={'fullLength':this.params.length};this.positionsChanged=false;this.sortableOptions={handle:'> .sort-handler',stop:function(){positionsCheck()},axis:'y'};if(_.size(this.groups)==0){this.groups=[]}if(_.size(this.params)==0){this.params=[]}function loadByGroup(dt_group_id){if(dt_group_id==$this.active.dt_group_id){return}$this.positionsChanged=false;dynamicTypeParamDataService.loadByGroup(dt_group_id,$this.type.dt_type_id).then(function(response){$this.params=objectToArray(response.params);if(dt_group_id>=0){veiwAll=false;createDefaultSheme()}else{veiwAll=true;$this.util.fullLength=$this.params.length}})}function add(){return dynamicTypeParamService.add({list:arrayToObject($this.params),dt_type_id:$this.type.dt_type_id,pos:$this.util.fullLength}).then(function(modal){modal.close.then(function(param){if(_.isObject(param)){if($this.active.dt_group_id==param.dt_group_id||$this.active.dt_group_id<0||$this.active.dt_group_id<=0&&typeof param.dt_group_id=='undefined'){$this.params.push(param)}if($this.active.dt_group_id>=0){createDefaultSheme()}$this.util.fullLength=$this.util.fullLength+1}})})}function edit(param){var index=$this.params.indexOf(param);return dynamicTypeParamService.edit({type_param_id:param.type_param_id,dt_type_id:$this.type.dt_type_id}).then(function(modal){modal.close.then(function(param){if(_.isObject(param)){$this.params[index]=param}})})}function bool(value){return!!parseInt(v)}function objectToArray(object){var array=[];_.each(object,function(param){array.push(param)});return array}function arrayToObject(array){var object={};_.each(array,function(param){object[param.param_id]=param});return object}function positionsCheck(){paramsMoved={};if(veiwAll){_.each($this.params,function(param,index){if(param.pos!=index){paramsMoved[param.type_param_id]=index}})}else{_.each($this.params,function(param,i){if(param.type_param_id!=defaultSheme[i].type_param_id){paramsMoved[param.type_param_id]=defaultSheme[i]['pos']}})}if(_.size(paramsMoved)>0){$this.positionsChanged=true}else{$this.positionsChanged=false}}function savePositions(){if(_.size(paramsMoved)>0){dynamicTypeParamDataService.updatePositionParams(paramsMoved).then(function(response){$this.positionsChanged=false})}}function createDefaultSheme(){defaultSheme={};_.each($this.params,function(param,index){defaultSheme[index]={'pos':param.pos,'type_param_id':param.type_param_id}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicActionGroupEditController',controller);controller.$inject=['$scope','$stateParams','s3PopupService','dynamicActionGroupDataService'];function controller($scope,$stateParams,s3PopupService,dynamicActionGroupDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,message;this.dt_action_tree_id=$stateParams.dt_action_tree_id;this.dt_action_group_id=Modal.data.dt_action_group_id;this.group={properties:{x:87,y:87,collapsed:false}};activate();if(typeof Modal.hide=='undefined'){Modal.hide={}}Modal.hide['headReload']=true;Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.action.group.adding';Modal.onClose=function(){if(!updated){return null}return $this.group};Modal.onSave=function(){delete $this.errors;return dynamicActionGroupDataService.edit({'dt_action_tree_id':$this.dt_action_tree_id,'dt_action_group_id':$this.dt_action_group_id,'comment':$this.group.comment,'name':$this.group.name}).then(function(response){if(response.errors&&response.errors){$this.errors=response.errors;updated=false;return false}else{updated=true;if($this.dt_action_group_id>0){}else{$this.group.dt_action_group_id=response}util.msg(JS_SAVED)}})};function activate(){if($this.dt_action_group_id>0){dynamicActionGroupDataService.getDataForEdit({'dt_action_tree_id':$this.dt_action_tree_id,'dt_action_group_id':$this.dt_action_group_id}).then(function(response){if(_.isObject(response)&&response.dt_action_group_id){$this.group=response;Modal.title='dynamic.action.group.editing';Modal.subtitle=response.name}$scope.$emit('popupLoad:done',true)})}else{$scope.$emit('popupLoad:done',true)}}$this.debug=debug;function debug(){console.log('85:dynamic.action.edit.group.controller.js');console.log($this)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicActionTreeSelectorController',controller);controller.$inject=['$scope','_','dynamicActionTreeDataService'];function controller($scope,_,dynamicActionTreeDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,globals_load=false,scope=Modal.data.scope;this.list=Modal.data.list;this._selected={};this.trees={};this.select=select;this.method=Modal.data.method||'checkbox';this.selectedTab=0;this.groupsSelect={'_0':{'dt_group_id':'0','name':'general.locals'},'_1':{'dt_group_id':'1','name':'general.globals'}};this.selectTab=selectTab;activate();Modal.title='Выберите требуемое дерево действий';Modal.buttonsBottom=true;Modal.hide={'save':true,'saveAndClose':true};function activate(){_.forEach($this.list,function(tree){$this._selected[tree.dt_action_tree_id]=true});dynamicActionTreeDataService.getList({scope:scope}).then(function(response){$this.trees=response.trees;$scope.$emit('popupLoad:done',true)})}function loadGlobals(pane){_.forEach($this.list,function(tree){$this._selected[tree.dt_action_tree_id]=true});dynamicActionTreeDataService.getList({tag_id:0,scope:scope}).then(function(response){$this.global_trees=response.trees;globals_load=true;$this.selectedTab=pane['dt_group_id']})}function select(tree){var dt_action_tree_id=tree.dt_action_tree_id;if($this.method=='checkbox'){if(!$this.list[dt_action_tree_id]){$this.list[dt_action_tree_id]=tree}else{delete $this.list[dt_action_tree_id]}}else{delete $this.list[Object.keys($this.list)[0]];$this.list[dt_action_tree_id]=tree}}function selectTab(pane){if(pane['dt_group_id']==1&&!globals_load){loadGlobals(pane)}else{$this.selectedTab=pane['dt_group_id']}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicActionTreeEditController',controller);controller.$inject=['$scope','_','dynamicActionTreeDataService','$rootScope','s3PopupService','dynamicTagDataService'];function controller($scope,_,dynamicActionTreeDataService,$rootScope,s3PopupService,dynamicTagDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,message;this.tree={'dt_type_id':{}};this.dataTypes=[{'key':'str','name':'general.string'},{'key':'int','name':'general.number'},{'key':'array','name':'general.array'}];this.types={};this.dt_action_tree_id=Modal.data.dt_action_tree_id;this.global=(Modal.data.ver_id==0)?1:0;this.scope=[];this.inputParamAdd=inputParamAdd;this.inputParamRemove=inputParamRemove;this.outputParamAdd=outputParamAdd;this.outputParamRemove=outputParamRemove;this.selector=selector;this.remove=remove;this.canEdit=canEdit;$this.tree.input_params={'params':{'alias':'params','type':'array'}};$this.tree.output_params={'data':{'alias':'data','type':'array'}};if(!canEdit()){Modal.hide={save:true,saveAndClose:true}}activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.actionTree.adding';Modal.onClose=function(){if(!updated){return null}if(typeof $this.errors=='undefined'){return $this.tree}};Modal.onSave=function(){return dynamicActionTreeDataService.edit({'tree':$this.tree}).then(function(response){if(typeof response.errors=='undefined'){$this.tree=response.tree;delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};Modal.onReload=function(){message=JS_RELOADED;$this.tree.input_params={'params':{'alias':'params','type':'array'}};$this.tree.output_params={'data':{'alias':'data','type':'array'}};if(!canEdit()){Modal.hide={save:true,saveAndClose:true}}activate()};function activate(){if($this.dt_action_tree_id){dynamicActionTreeDataService.getDataForEdit({dt_action_tree_id:$this.dt_action_tree_id}).then(function(response){if(_.isObject(response.tree)&&response.tree.dt_action_tree_id){$this.tree=response.tree;Modal.title='dynamic.actionTree.editing';Modal.subtitle=response.tree.name;if($this.tree.input_params&&$this.tree.input_params==''){$this.tree.input_params={'alias':{'alias':'params','type':'array'}}}if($this.tree.output_params&&$this.tree.output_params==''){$this.tree.output_params={'data':{'alias':'data','type':'array'}}}}if(_.isObject(response.scope)){$this.scope=response.scope}$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}})}else{dynamicTagDataService.getList().then(function(response){$scope.$emit('popupLoad:done',true);$this.tags=response});dynamicActionTreeDataService.getScopeParams().then(function(response){if(_.isObject(response)){$this.scope=response}});$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}}}function inputParamAdd(){if(typeof $this.input_param_new=='undefined'||$this.tree.input_params[$this.input_param_new]){return false}$this.tree.input_params[$this.input_param_new]={'alias':'my_data','type':'str'};$this.params.input[$this.input_param_new]=true;delete $this.input_param_new}function inputParamRemove(k){delete $this.tree.input_params[k]}function outputParamAdd(){if(typeof $this.output_param_new=='undefined'||$this.tree.output_params[$this.output_param_new]){return false}$this.tree.output_params[$this.output_param_new]={'alias':'my_data','type':'array'};$this.params.output[$this.input_param_new]=true;delete $this.output_param_new}function outputParamRemove(k){delete $this.tree.output_params[k]}function selector(){if(!_.isObject($this.tree.dt_type_id)||_.isEmpty($this.tree.dt_type_id)){$this.types={}}else if(_.isObject($this.tree.dt_type_id)&&!_.isEmpty($this.tree.dt_type_id)){$this.types={};$this.types[$this.tree.dt_type_id.dt_type_id]=$this.tree.dt_type_id}s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/type/selector/dynamic.type.selector.html',{list:$this.types,method:'radio'}).then(function(modal){modal.close.then(function(){if(Object.keys($this.types).length>0){$this.tree.dt_type_id=$this.types[Object.keys($this.types)[0]]}})})}function remove(){$this.types={};delete $this.tree.dt_type_id}function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicActionTreeViewController',controller).directive('jsPlumbCanvas',jsPlumbCanvas).directive('jsPlumbObject',jsPlumbObject).directive('jsPlumbGroup',jsPlumbGroup).directive('jsPlumbEndpoint',jsPlumbEndpoint).directive('jsPlumbConnection',jsPlumbConnection);jsPlumbCanvas.$inject=['dynamicActionDataService','$rootScope'];function jsPlumbCanvas(dynamicActionDataService,$rootScope){var jsPlumbZoomCanvas=function(instance,zoom,el,transformOrigin){transformOrigin=transformOrigin||[0,0];var p=["webkit","moz","ms","o"],s="scale("+zoom+")",oString=(transformOrigin[0]*100)+"% "+(transformOrigin[1]*100)+"%";for(var i=0;i<p.length;i++){el.style[p[i]+"Transform"]=s;el.style[p[i]+"TransformOrigin"]=oString}el.style["transform"]=s;el.style["transformOrigin"]=oString;instance.setZoom(zoom)};controller.$inject=['$scope'];function controller($scope){this.scope=$scope}return{restrict:'AE',scope:{onConnection:'=onConnection',onConnectionDetached:'=onConnectionDetached',zoom:'=',x:'=',y:'='},controller:controller,transclude:true,replace:true,template:'<div ng-transclude></div>',link:function(scope,element,attr){var instance=$rootScope.j=jsPlumb.getInstance(),binds={connection:false,connectionDetached:false},timer;scope.jsPlumbInstance=instance;scope.done=function(){clearTimeout(timer);Preloader.show({mini:true});timer=setTimeout(function(){if($rootScope['groups']){_.forEach($rootScope['groups'],function(group,dt_action_group_id){_.forEach(group.blocks,function(block){instance.addToGroup(group.element,block)});if(group.collapsed){instance.collapseGroup(dt_action_group_id)}})}Preloader.hide();$('#js-plumb-canvas').addClass('done')},300)};instance.bind("connection",function(info,origEvent){if(!binds.connection){binds.connection=true;if(typeof origEvent!=='undefined'&&origEvent.type=='mouseup'){var targetUUID=info.targetEndpoint.getUuid(),sourceUUID=info.sourceEndpoint.getUuid(),targetActionId=info.targetEndpoint.getParameter('dt_action_id'),sourceActionId=info.sourceEndpoint.getParameter('dt_action_id'),targetType=info.sourceEndpoint.getParameter('type_link');scope.onConnection(instance,info.connection,targetUUID,sourceUUID,targetActionId,sourceActionId,targetType);instance.deleteConnection(info.connection)}binds.connection=false}});instance.bind("connectionDetached",function(info,origEvent){if(!binds.connectionDetached){binds.connectionDetached=true;if(typeof origEvent!=='undefined'&&origEvent.type=='mouseup'){var targetUUID=info.targetEndpoint.getUuid(),sourceUUID=info.sourceEndpoint.getUuid(),targetActionId=info.targetEndpoint.getParameter('dt_action_id'),sourceActionId=info.sourceEndpoint.getParameter('dt_action_id'),targetType=info.sourceEndpoint.getParameter('type_link');scope.onConnectionDetached(instance,info.connection,targetUUID,sourceUUID,targetActionId,sourceActionId,targetType)}binds.connectionDetached=false}});$(element).css({minWidth:'1000px',minHeight:'1000px',display:'block'}).draggable({stop:function(event,ui){var position=$(this).position();scope.x=position.left;scope.y=position.top}});instance.setContainer($(element));var zoom=(typeof scope.zoom==='undefined')?1:scope.zoom/100;jsPlumbZoomCanvas(instance,zoom,$(element)[0]);scope.$watch('zoom',function(newVal,oldVal){jsPlumbZoomCanvas(instance,newVal/100,$(element)[0])})}}}jsPlumbGroup.$inject=['dynamicActionGroupDataService','$timeout','$rootScope'];function jsPlumbGroup(dynamicActionGroupDataService,$timeout,$rootScope){return{restrict:'AE',require:'^jsPlumbCanvas',scope:{group:'=group'},transclude:true,replace:true,template:'<div ng-transclude></div>',link:function(scope,element,attrs,jsPlumbCanvas){var instance=jsPlumbCanvas.scope.jsPlumbInstance;$timeout(function(){element.resizable({minHeight:60,minWidth:350,handles:"se"});if((scope.group.properties.collapsed||false)){element.resizable('disable')}instance.addGroup({el:element.get(0),id:scope.group.dt_action_group_id,anchor:['Top','TopRight','Right','BottomRight','Bottom','BottomLeft','Left','TopLeft'],endpoint:["Rectangle",{width:20,height:20,cssClass:'connect',hoverClass:'connect-select'}],ghost:true,orphan:true,dragOptions:{containment:true,handle:".group-head",stop:function(event){dynamicActionGroupDataService.updateProperties({'dt_action_group_id':scope.group.dt_action_group_id,'properties':{'x':event.pos[0],'y':event.pos[1],collapsed:(scope.group.properties.collapsed||false)}})}}});jsPlumbCanvas.scope.done();if(!$rootScope['groups']){$rootScope['groups']={}}if(!$rootScope['groups'][scope.group.dt_action_group_id]){$rootScope['groups'][scope.group.dt_action_group_id]={blocks:[]}}$rootScope['groups'][scope.group.dt_action_group_id]['element']=instance.getGroupFor(element.get(0));$rootScope['groups'][scope.group.dt_action_group_id]['collapsed']=(scope.group.properties.collapsed||false);instance.draggable(element.get(0),{})},0);scope.$on('$destroy',function(){instance.removeGroup(scope.group.dt_action_group_id)})}}}jsPlumbObject.$inject=['dynamicActionDataService','$rootScope'];function jsPlumbObject(dynamicActionDataService,$rootScope){return{restrict:'AE',require:'^jsPlumbCanvas',scope:{stateObject:'=stateObject'},transclude:true,replace:true,template:'<div ng-transclude></div>',link:function(scope,element,attrs,jsPlumbCanvas){var instance=jsPlumbCanvas.scope.jsPlumbInstance,h=0,hh=15;if(scope.stateObject.action_type!=83){setTimeout(function(){_.forEach($(element).find('h3'),function(el){h=h+$(el).outerHeight(true)});if($(element).find('.subtitle').length==1){hh=30}$(element).height(h+hh).tooltip({tooltipClass:"custom-tooltip-styling",position:{my:"left-5 top",at:"left bottom+5"}})},500)}function setProperties(event,save){var group=element.parent('.command-group');scope.stateObject.x=event.pos[0];scope.stateObject.y=event.pos[1];if(save){dynamicActionDataService.updatePropertiesAction({'dt_action_id':scope.stateObject.dt_action_id,'dt_action_group_id':(group.length>0?group.data('dt_action_group_id'):0),'properties':{'x':event.pos[0],'y':event.pos[1]}}).then(function(response){setTimeout(function(){instance.revalidate(element.get(0))},0)})}}if(scope.stateObject.dt_action_group_id>0){if(!$rootScope['groups']){$rootScope['groups']={}}if(!$rootScope['groups'][scope.stateObject.dt_action_group_id]){$rootScope['groups'][scope.stateObject.dt_action_group_id]={blocks:[]}}$rootScope['groups'][scope.stateObject.dt_action_group_id]['blocks'].push(element.get(0))}instance.draggable(element.get(0),{containment:true,drag:function(event){setProperties(event,false)},stop:function(event){setTimeout(function(){setProperties(event,true)},0)}});jsPlumbCanvas.scope.done()}}}function jsPlumbEndpoint(){controller.$inject=['$scope'];function controller($scope){this.scope=$scope;this.connectionObjects={}}return{restrict:'AE',require:'^jsPlumbCanvas',scope:{settings:'=settings'},controller:controller,transclude:true,replace:true,template:'<div ng-transclude></div>',link:function(scope,element,attrs,jsPlumbCanvas){var instance=jsPlumbCanvas.scope.jsPlumbInstance;scope.jsPlumbInstance=jsPlumbCanvas.scope.jsPlumbInstance;scope.uuid=attrs.uuid;var settings=JSON.parse(JSON.stringify(scope.settings));var options={anchor:settings.anchor[attrs.anchor],uuid:attrs.uuid,cssClass:'point_label_'+attrs.uuid,parameters:{'type_link':attrs.typeLink,'dt_action_id':attrs.dtActionId}};delete settings.anchor;var block=$(document).find('#'+attrs.parent);var ep=instance.addEndpoint(block.get(0),settings,options);if(settings.scope=='paramlinks'&&settings.isTarget==true){$('.point_label_'+attrs.uuid).attr('data-target-label',attrs.alias)}else if(settings.scope=='paramlinks'&&settings.isSource==true){$('.point_label_'+attrs.uuid).attr('data-source-label',attrs.alias)}jsPlumbCanvas.scope.done();scope.$on('$destroy',function(){instance.deleteEndpoint(ep)})}}}jsPlumbConnection.$inject=['$timeout'];function jsPlumbConnection($timeout){return{restrict:'AE',require:'^jsPlumbEndpoint',scope:{ngClick:'&ngClick',ngModel:'=ngModel'},link:function(scope,element,attrs,jsPlumbEndpoint){var instance=jsPlumbEndpoint.scope.jsPlumbInstance,sourceUUID=jsPlumbEndpoint.scope.uuid,targetUUID=scope.ngModel.uuid,labels={labelCommandLink:'<div class="settings-command-connection" onclick="$(\'.cLink-\' + $(this).attr(\'sourceUUID\') + \'-\' + $(this).attr(\'targetUUID\')).click()" sourceUUID="'+sourceUUID+'" targetUUID="'+targetUUID+'"><span class="s3-btn white-gray"><span class="s3-ico i-delete-svg"></span></span></div>',labelParamLink:'<div class="settings-param-connection" onclick="$(\'.pLink-\' + $(this).attr(\'sourceUUID\') + \'-\' + $(this).attr(\'targetUUID\')).click()" sourceUUID="'+sourceUUID+'" targetUUID="'+targetUUID+'"><span class="s3-btn white-gray"><span class="s3-ico i-delete-svg"></span></span></div>'},overlays=[["Label",{label:labels['label'+attrs.type+'Link'],id:"label_"+targetUUID}]];switch(attrs['type']){case'Command':overlays.push(["Arrow",{location:0.3,visible:true,width:22,length:32,direction:-1,paintStyle:{stroke:"#0B9334"},id:"ARROW"}],["Arrow",{location:0.7,visible:true,width:22,length:32,direction:-1,paintStyle:{stroke:"#0B9334"},id:"ARROW2"}]);break;case'Param':overlays.push(["Arrow",{location:0.3,visible:true,width:11,length:11,direction:-1,id:"ARROW"}],["Arrow",{location:0.7,visible:true,width:11,length:11,direction:-1,id:"ARROW2"}]);break}$timeout(function(){if(typeof jsPlumbEndpoint.connectionObjects[targetUUID]==='undefined'){jsPlumbEndpoint.connectionObjects[targetUUID]=instance.connect({uuids:[targetUUID,sourceUUID],overlays:overlays,editable:true})}var connection=jsPlumbEndpoint.connectionObjects[targetUUID];connection.bind("click",function(conn,originalEvent){scope.ngClick()});connection.bind("mouseenter",function(conn,originalEvent){scope.ngModel.mouseover=true});connection.bind("mouseleave",function(conn,originalEvent){scope.ngModel.mouseover=false})},100);scope.$on('$destroy',function(a,b){try{instance.deleteConnection(jsPlumbEndpoint.connectionObjects[targetUUID])}catch(err){}jsPlumbEndpoint.connectionObjects[targetUUID]=undefined})}}}controller.$inject=['$scope','$stateParams','dynamicActionDataService','$rootScope','s3PopupService','dynamicActionTreeDataService','dynamicActionService','dynamicActionGroupService','dynamicActionGroupDataService'];function controller($scope,$stateParams,dynamicActionDataService,$rootScope,s3PopupService,dynamicActionTreeDataService,dynamicActionService,dynamicActionGroupService,dynamicActionGroupDataService){var $this=this,pointStyles,errorsJson={};$scope.onConnection=onConnection;$scope.onConnectionDetached=onConnectionDetached;this.dt_action_tree_id=$stateParams.dt_action_tree_id;this.actionTypes=[];this.zoomlevel=100;this.newAction=[];this.stateObjects=[];this.activeState=null;this.global=0;this.canEdit=true;this.debugMode=false;this.show_scheme=0;this.treeNote=' ';this.actionList={};this.showScheme=showScheme;this.hideScheme=hideScheme;this.getStylePoint=getStylePoint;this.selectorTree=selectorTree;this.removeTree=removeTree;this.removeState=removeState;this.addAction=addAction;this.saveAction=saveAction;this.setActiveState=setActiveState;this.saveStaticValueJson=saveStaticValueJson;this.deleteCommandConnection=deleteCommandConnection;this.deleteParamConnection=deleteParamConnection;this.addIncoming=addIncoming;this.saveIncoming=saveIncoming;this.cancelAddIncoming=cancelAddIncoming;this.deleteIncoming=deleteIncoming;this.editCommentStart=editCommentStart;this.saveComment=saveComment;this.editCommentCancel=editCommentCancel;this.clearComment=clearComment;this.run=run;this.debugModeSwitch=debugModeSwitch;this.editState=editState;this.addGroup=addGroup;this.editGroup=editGroup;this.removeGroup=dynamicActionGroupService.remove;function addGroup(group){dynamicActionGroupService.add(group).then(function(modal){modal.close.then(function(response){if(response&&_.isObject(response)&&response.dt_action_group_id){$this.action_groups[response.dt_action_group_id]=response}})})}function editGroup(group){dynamicActionGroupService.edit(group).then(function(modal){modal.close.then(function(response){if(response&&_.isObject(response)&&response.dt_action_group_id){$this.action_groups[response.dt_action_group_id]=response}})})}this.collapseGroup=collapseGroup;this.expandGroup=expandGroup;function collapseGroup(group){$rootScope.j.collapseGroup(group.dt_action_group_id);var properties=$this.action_groups[group.dt_action_group_id].properties;properties['collapsed']=true;dynamicActionGroupDataService.updateProperties({'dt_action_group_id':group.dt_action_group_id,'properties':properties}).then(function(){$("#group-"+group.dt_action_group_id).resizable("disable")})}function expandGroup(group){$rootScope.j.expandGroup(group.dt_action_group_id);var properties=$this.action_groups[group.dt_action_group_id].properties;properties['collapsed']=false;dynamicActionGroupDataService.updateProperties({'dt_action_group_id':group.dt_action_group_id,'properties':properties}).then(function(){$("#group-"+group.dt_action_group_id).resizable("enable")})}function getStylePoint(point,type,action_type){if(typeof point!='undefined'){var replacement={};switch(action_type){case 83:switch(type){case'input':replacement={anchor:[[0.5,0,0,-1]]};break;case'success':replacement={anchor:[[0.25,1,0,1],[0.25,1,0,1],[0.25,1,0,1]]};break;case'fail':replacement={anchor:[[0.75,1,0,1],[0.75,1,0,1],[0.75,1,0,1]]};break}break}return $.extend(pointStyles[type+'PointStyle'],replacement)}}pointStyles={incomingPointStyle:{anchor:[[0,0,-1,0],[0,0.16,-1,0],[0,0.32,-1,0],[0,0.48,-1,0],[0,0.64,-1,0],[0,0.80,-1,0],[0,0.96,-1,0],[0,1.14,-1,0],[0,1.30,-1,0],[0,1.46,-1,0],[0,1.62,-1,0],[0,1.78,-1,0]],endpoint:"Rectangle",scope:"paramlinks",isTarget:true,maxConnections:-1,hoverClass:'connect-select',dropOptions:{hoverClass:'connect-select'},paintStyle:{fill:"#E55B5B",stroke:'transparent',width:12,height:8},connectorStyle:{strokeWidth:2,stroke:"#61B7CF",joinstyle:"round",dashstyle:"1 1"}},outgoingPointStyle:{anchor:[[0.1,1,0,1],[0.2,1,0,1],[0.3,1,0,1],[0.4,1,0,1],[0.5,1,0,1],[0.6,1,0,1],[0.7,1,0,1],[0.8,1,0,1]],endpoint:"Rectangle",scope:"paramlinks",isSource:true,maxConnections:-1,paintStyle:{fill:"#B7B554",stroke:'transparent',width:15,height:15},connectorStyle:{strokeWidth:5,stroke:"#008000",dashstyle:"1 1"},hoverPaintStyle:{stroke:"#216477"},hoverClass:'connected',dropOptions:{hoverClass:'connected'}},inputPointStyle:{anchor:[[0.2,0,0,-1]],endpoint:"Dot",scope:"actionCommandLink",isTarget:true,maxConnections:-1,paintStyle:{fill:"#E55B5B",radius:11},hoverClass:'connect-select',dropOptions:{hoverClass:'connect-select'},connectionsDetachable:false,onMaxConnections:function(){alert('на вход могут прийти данные толкьо из одного источника')},connectorStyle:{strokeWidth:4,stroke:"#8FC592",joinstyle:"round",outlineColor:"#000000",outlineWidth:1}},successPointStyle:{anchor:[[0.9,1,0,1],[0.8,1,0,1],[0.7,1,0,1]],endpoint:"Dot",scope:"actionCommandLink",isSource:true,maxConnections:-1,connector:["Bezier"],paintStyle:{stroke:"green",fill:"transparent",radius:7,strokeWidth:3},connectorStyle:{strokeWidth:5,stroke:"#008000",dashstyle:"1 1"},hoverPaintStyle:{stroke:"#216477"},hoverClass:'connected',dropOptions:{hoverClass:'connected'}},failPointStyle:{anchor:[[0.9,1,0,1],[0.8,1,0,1],[0.7,1,0,1]],endpoint:"Dot",scope:"actionCommandLink",isSource:true,connector:["Bezier"],maxConnections:-1,paintStyle:{stroke:"orange",fill:"transparent",radius:7,strokeWidth:3},connectorStyle:{strokeWidth:5,stroke:"#008000",dashstyle:"1 1"},hoverPaintStyle:{stroke:"#216477"},hoverClass:'connected',dropOptions:{hoverClass:'connected'}},errorPointStyle:{anchor:[[0.9,1,0,1],[0.8,1,0,1],[0.7,1,0,1]],endpoint:"Dot",scope:"actionCommandLink",isSource:true,maxConnections:-1,connector:["Bezier"],paintStyle:{stroke:"red",fill:"transparent",radius:7,strokeWidth:3},connectorStyle:{strokeWidth:5,stroke:"#008000",dashstyle:"1 1"},hoverPaintStyle:{stroke:"#216477"},hoverClass:'connected',dropOptions:{hoverClass:'connected'}}};activate();function activate(){dynamicActionDataService.getList({dt_action_tree_id:$this.dt_action_tree_id,hash_key:'dt_action_id'}).then(function(response){if(_.isObject(response.actions)&&_.size(response.actions)){_.forEach(response.groups,function(group,key){response.groups[key].properties=JSON.parse(group.properties);response.groups[key].width=350;response.groups[key].height=60});$this.action_groups=response.groups;$this.global=response.global;$this.canEdit=canEdit();$this.actionList=response.actions;createScheme(response.actions,response.param_links,response.action_links);setTimeout(function(){resizeCanvas()},10)}});dynamicActionDataService.getDataForEdit({dt_action_tree_id:$this.dt_action_tree_id}).then(function(response){if(_.isArray(response.action_types)){$this.actionTypes=response.action_types}$this.commandGroups=response.groups;$this.treeName=response.tree_name;$this.treeNote=response.tree_note})}function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}function createScheme(actions,param_links,action_links){if(typeof actions!='undefined'){_.each(actions,function(action){$this.stateObjects.push(createSchemeElement(action,param_links,action_links));var block=$this.stateObjects[$this.stateObjects.length-1];if($this.action_groups[block.dt_action_group_id]){var group=$this.action_groups[block.dt_action_group_id];if(block.y+150>group.height){group.height=parseInt(block.y)+150}if(block.x+200>group.width){group.width=parseInt(block.x)+200}}})}}function createSchemeElement(action,param_links,action_links){var command={};if(action.type_group_id){command.type_group_id=action.type_group_id}command.dt_action_group_id=action.dt_action_group_id;if(action.properties){_.each(action.properties,function(value,key){command[key]=value});if(!action.properties.x||!action.properties.y){command.x=87;command.y=87}}if(action.properties){}command.dt_action_id=action.dt_action_id;command.name=action.name;command.code=action.code;command.comment=action.comment;command.ver_id=action.ver_id;command.action_type=action.action_type;command.params=action.params;if(action.run_action_tree.dt_action_tree_id>0){command.run_action_tree={'dt_action_tree_id':action.run_action_tree.dt_action_tree_id,'name':action.run_action_tree.name}}if(action.action_type_links){command.inputs=[];command.outputs=[];_.each(action.action_type_links,function(type_links){if(type_links=='input'){command.inputs.push({'type':type_links,'uuid':type_links+'_'+action.dt_action_id})}else{var connections=[];if(action_links&&action_links[action.dt_action_id]){_.each(action_links[action.dt_action_id],function(target,type){if(type==type_links){connections.push({'uuid':'input_'+target,'target_dt_action_id':target})}});command.outputs.push({'type':type_links,'uuid':type_links+'_'+action.dt_action_id,'connections':connections})}else{command.outputs.push({'type':type_links,'uuid':type_links+'_'+action.dt_action_id})}}});if(command.inputs.length==0){delete command.inputs}if(command.outputs.length==0){delete command.outputs}}if(action.params&&action.params.incoming){command.incomings=[];_.each(action.params.incoming,function(param){if(param.static_value_json!=null){var json={};if(param.static_value_json[param.alias]){json={};switch(param.type){case'object':case'array':json[param.alias]=JSON.stringify(param.static_value_json[param.alias]);break;default:json[param.alias]=param.static_value_json[param.alias];break}}command.incomings.push({'uuid':param.dt_action_param_id,'alias':param.alias,'type':param.type,'type_values':param.type_values,'static_value_json':json})}else{json={};json[param.alias]=param.hasOwnProperty('type_values_default')?param['type_values_default']:null;command.incomings.push({'uuid':param.dt_action_param_id,'alias':param.alias,'type':param.type,'type_values':param.type_values,'static_value_json':json})}})}if(action.params&&action.params.outgoing){command.outgoings=[];_.each(action.params.outgoing,function(param){if(param_links&&param_links[param.dt_action_param_id]){var connections=[];_.each(param_links[param.dt_action_param_id],function(target){connections.push({'uuid':target})});command.outgoings.push({'uuid':param.dt_action_param_id,'alias':param.alias,'type':param.type,'connections':connections})}else{command.outgoings.push({'uuid':param.dt_action_param_id,'alias':param.alias,'type':param.type})}})}return command}function removeState(state){return s3PopupService.confirm('dynamic.action.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicActionDataService.remove({'dt_action_id':state.dt_action_id,'dt_action_tree_id':$this.dt_action_tree_id}).then(function(response){if(response.done!=false){var index=$this.stateObjects.indexOf(state);if(index!==-1){var source_links={};_.each($this.stateObjects[index].incomings,function(param){source_links[param.uuid]=true});$this.stateObjects.splice(index,1);_.each($this.stateObjects,function(stateObject){_.each(stateObject.outgoings,function(outgoing){if(outgoing.connections&&outgoing.connections.length>0){_.each(outgoing.connections,function(connection,i){if(source_links[connection.uuid]){outgoing.connections.splice(i,1)}});if(outgoing.connections.length==0){delete outgoing.connections}}});_.each(stateObject.outputs,function(output){if(output.connections&&output.connections[0]&&output.connections[0].target_dt_action_id==state.dt_action_id){delete output.connections}})})}}})}})})}function addAction(){$this.newAction=[];$this.newAction=[{'x':this.pos_x,'y':this.pos_y,'run_action_tree':{'dt_action_tree_id':0}}]}function saveAction(action){if(typeof action.errors!='undefined'){delete action.errors}if(action&&typeof action.data!='undefined'&&action.data!=''){if(action.data.action_type==10){if(action.run_action_tree.dt_action_tree_id==0){action.errors={"run_action_tree":"Нужно выбрать дерево действий"};return false}if(action.run_action_tree.dt_action_tree_id==$this.dt_action_tree_id){action.errors={"run_action_tree":"Нельзя выбрать дерево в котором находишся"};return false}}if(typeof action.errors=='undefined'){dynamicActionDataService.edit({'action':{action_type:action.data.action_type,dt_action_tree_id:$this.dt_action_tree_id,parent_action_id:0,run_dt_action_tree_id:action.run_action_tree.dt_action_tree_id}}).then(function(response){if(response.action){var response=response.action;response['run_action_tree']={'dt_action_tree_id':action.run_action_tree.dt_action_tree_id,'name':action.run_action_tree.name};$this.stateObjects.push(createSchemeElement(response))}});$this.newAction={}}}else if(typeof action.data=='undefined'||action.data==''){alert('не сохранено, не выбран тип действия')}}function setActiveState(state,event){if(event&&$this.activeState==state){$this.activeState={}}else{$this.activeState=state;if(typeof event=='undefined'){setTimeout(function(){angular.element('body, html').animate({scrollTop:angular.element('.s3-dt-action-list-sidebar-panel-list-body[collapse="false"]').parents('.s3-dt-action-list-sidebar-panel-list').offset().top},0)},1)}}}function onConnection(instance,connection,targetUUID,sourceUUID,targetActionId,sourceActionId,targetType){if(connection.scope=='actionCommandLink'){dynamicActionDataService.updateLinkActions({'from_dt_action_id':sourceActionId,'to_dt_action_id':targetActionId,'command_type_link':targetType}).then(function(response){if(response.actions!==false){angular.forEach($this.stateObjects,function(state){angular.forEach(state.outputs,function(output){if(output.uuid==sourceUUID){if(typeof output.connections==='undefined')output.connections=[];output.connections.push({'uuid':targetUUID,'target_dt_action_id':targetActionId})}})})}})}else{dynamicActionDataService.updateLinkActionParams({'source_dt_action_param_id':sourceUUID,'dt_action_param_id':targetUUID}).then(function(response){if(response.params!==false){angular.forEach($this.stateObjects,function(state){angular.forEach(state.outgoings,function(outgoing){if(outgoing.uuid==sourceUUID){if(typeof outgoing.connections==='undefined')outgoing.connections=[];outgoing.connections.push({'uuid':targetUUID})}})})}})}}function onConnectionDetached(instance,connection,targetUUID,sourceUUID){if(connection.scope=='actionCommandLink'){dynamicActionDataService.removeLinkActions({'from_dt_action_id':sourceActionId,'to_dt_action_id':targetActionId,'command_type_link':targetType}).then(function(response){if(response.params!==false){angular.forEach($this.stateObjects,function(state){angular.forEach(state.outputs,function(output){if(output.uuid==targetUUID){_.each(output.connections,function(connection,index){if(connection.uuid==sourceUUID){output.connections.splice(index,1)}})}})})}})}else{dynamicActionDataService.removeLinkActionParams({'source_dt_action_param_id':targetUUID,'dt_action_param_id':sourceUUID}).then(function(response){if(response.params!==false){angular.forEach($this.stateObjects,function(state){angular.forEach(state.outgoings,function(outgoing){if(outgoing.uuid==targetUUID){_.each(outgoing.connections,function(connection,index){if(connection.uuid==sourceUUID){outgoing.connections.splice(index,1)}});if(outgoing.connections.length==0){delete outgoing.connections}}})})}})}}function saveStaticValueJson(dt_action_id,incoming){var error=false;_.each(incoming.static_value_json,function(value,alias){if(value==''||!value){delete incoming.static_value_json[alias]}else{if(incoming.type=='int'||incoming.type=='object'||incoming.type=='array'){try{incoming.static_value_json[alias]=JSON.parse(incoming.static_value_json[alias])}catch(err){error=true;alert('не верный формат')}}if(incoming.type=='select'){try{incoming.static_value_json[alias]=incoming.static_value_json[alias]}catch(err){error=true;alert('не верный формат')}}}});if(!error){dynamicActionDataService.updateStaticValueJson({'dt_action_id':dt_action_id,'dt_action_param_id':incoming.uuid,'static_value_json':incoming.static_value_json}).then(function(response){if(Object.keys(incoming.static_value_json).length===0){delete incoming.static_value_json}else{_.each(incoming.static_value_json,function(value,alias){incoming.static_value_json[alias]=incoming.type=="select"?incoming.static_value_json[alias]:JSON.stringify(incoming.static_value_json[alias])})}})}}function selectorTree(action){var list={};if(action.run_action_tree.dt_action_tree_id==0){list={}}else if(action.run_action_tree.dt_action_tree_id>0){list[action.run_action_tree.dt_action_tree_id]=action.run_action_tree}s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action.tree/tree/selector/dynamic.action.tree.selector.html',{list:list,method:'radio'}).then(function(modal){modal.close.then(function(){if(Object.keys(list).length>0){action.run_action_tree=list[Object.keys(list)[0]]}})})}function removeTree(action){action.run_action_tree={'dt_action_tree_id':0}}function deleteCommandConnection(state,point){s3PopupService.confirm('Удалить связь?').then(function(modal){modal.close.then(function(response){if(response){dynamicActionDataService.removeLinkActions({'from_dt_action_id':state.dt_action_id,'to_dt_action_id':point.connections[0].target_dt_action_id,'command_type_link':point.type}).then(function(response){if(response.params!=false){var index=$this.stateObjects.indexOf(state),index2;if(index>=0){index2=$this.stateObjects[index]['outputs'].indexOf(point);if(index2>=0){delete $this.stateObjects[index]['outputs'][index2]['connections']}}}})}})})}function resizeCanvas(){var height=0,width=0,canvas=$('.s3-dt-action-list-panel-body');_.each($this.stateObjects,function(block){if(block.dt_action_group_id==0){if(block.y+150>height){height=parseInt(block.y)+150}if(block.x+200>width){width=parseInt(block.x)+200}}});_.each($this.action_groups,function(group){var h=60,w=350;if(group.properties.y+h>height){height=parseInt(group.properties.y)+h}if(group.properties.x+w>width){width=parseInt(group.properties.x)+w}});if(width>parseInt(canvas.width())){$this.zoomlevel=100/(width/parseInt(canvas.width()))}if(height>parseInt(canvas.height())){canvas.height(height*($this.zoomlevel/100))}}function addIncoming(index,state){$this.newIncoming={'index':index,'state':state}}function cancelAddIncoming(){delete $this.newIncoming}function saveIncoming(){var index=$this.newIncoming.index;dynamicActionDataService.addIncoming({dt_action_id:$this.newIncoming.state.dt_action_id,alias:$this.newIncoming.alias}).then(function(response){if(response.errors){$this.newIncoming['errors']=response.errors}else{delete $this.newIncoming;if(typeof $this.stateObjects[index]['incomings']=='undefined'){$this.stateObjects[index]['incomings']=[]}$this.stateObjects[index]['incomings'].push({'uuid':response.dt_action_param_id,'alias':response.alias})}})}function deleteIncoming(pindex,index,dt_action_id,dt_action_param_id){return s3PopupService.confirm('dynamic.actionTree.paramDelete').then(function(modal){modal.close.then(function(confirm){if(confirm){dynamicActionDataService.deleteIncoming({dt_action_id:dt_action_id,dt_action_param_id:dt_action_param_id}).then(function(response){if(response!=false){$this.stateObjects[pindex]['incomings'].splice(index,1)}})}})})}function deleteParamConnection(state,point,connection,index,pindex){s3PopupService.confirm('Удалить связь?').then(function(modal){modal.close.then(function(response){if(response){dynamicActionDataService.removeLinkActionParams({'source_dt_action_param_id':point.uuid,'dt_action_param_id':connection.uuid}).then(function(response){if(response.params!=false){if(state.outgoings[pindex].uuid==point.uuid){state.outgoings[pindex].connections.splice(index,1);if(state.outgoings[pindex].connections.length==0){delete state.outgoings[pindex].connections}}}})}})})}function editCommentStart(state){state.newComment=state.comment||' '}function saveComment(state){dynamicActionDataService.saveComment({'dt_action_id':state.dt_action_id,'comment':state.newComment}).then(function(response){if(response!=false){state.comment=state.newComment}delete state.newComment})}function editCommentCancel(state){delete state.newComment}function clearComment(state){return s3PopupService.confirm('dynamic.action.commentClear').then(function(modal){modal.close.then(function(confirm){if(confirm){dynamicActionDataService.saveComment({'dt_action_id':state.dt_action_id,'comment':''}).then(function(response){if(response!=false){state.comment=''}})}})})}function run(){try{var data=$this.debugDataInput||'{}';dynamicActionTreeDataService.runAction({'params':JSON.parse(data),'dt_action_tree_id':$this.dt_action_tree_id,'debug_mode':1}).then(function(response){$this.debugDataOutput=response})}catch(e){alert('Error JSON format !\n')}}function debugModeSwitch(){$this.debugMode=!$this.debugMode}function showScheme(){$this.show_scheme=1}function hideScheme(){$this.show_scheme=0}function editState(state){if(state){dynamicActionService.edit({'state':state,'canEdit':$this.canEdit,'stateObjects':$this.stateObjects,'index':$this.stateObjects.indexOf(state),'callback':function(){}})}else{dynamicActionService.add({'state':{'x':this.pos_x,'y':this.pos_y,'run_action_tree':{'dt_action_tree_id':0}},'canEdit':$this.canEdit,'callback':function(response){$this.stateObjects.push(createSchemeElement(response))}})}}$scope.$on('$destroy',function(){delete $rootScope['groups'];delete $rootScope['j']})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicActionTreeMainController',controller);controller.$inject=['_','dynamicActionTreeService','dynamicActionTreeDataService'];function controller(_,dynamicActionTreeService,dynamicActionTreeDataService){var $this=this;this.list={};activate();this.filterByTag=filterByTag;this.addActionTree=addActionTree;this.importActionTree=importActionTree;function activate(){dynamicActionTreeDataService.getList({'hash_key':'dt_action_tree_id'}).then(function(response){if(_.isObject(response.trees)&&!_.isArray(response.trees)){$this.list=response.trees}})}function addActionTree(){dynamicActionTreeService.add({list:$this.list}).then(function(modal){modal.close.then(function(tree){if(_.isObject(tree)){$this.list[tree.dt_action_tree_id]=tree}})})}function filterByTag(tag_id){dynamicActionTreeDataService.getList({tag_id:tag_id,hash_key:'dt_action_tree_id'}).then(function(response){$this.list=response.trees})}function importActionTree(){dynamicActionTreeService.importTree({list:$this.list}).then(function(modal){modal.close.then(function(tree){if(_.isObject(tree)){$this.list[tree.dt_action_tree_id]=tree}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicActionTreeImportController',controller);controller.$inject=['$scope','_','dynamicActionTreeDataService','$rootScope','s3PopupService'];function controller($scope,_,dynamicActionTreeDataService,$rootScope,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false;this.tree={};this.canEdit=canEdit;activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.actionTree.import';Modal.onClose=function(){if(!updated){return null}if(typeof $this.errors=='undefined'){return $this.tree}};Modal.onSave=function(){if(typeof $this.tree.scheme!='undefined'&&typeof $this.tree.scheme=='string'){$this.tree.scheme=JSON.parse($this.tree.scheme)}return dynamicActionTreeDataService.importTree({'tree':$this.tree}).then(function(response){if(typeof response.errors=='undefined'){$this.tree=response.tree;delete $this.errors;updated=true}else if(response.errors){$this.errors=response.errors;return false}})};function activate(){$scope.$emit('popupLoad:done',true)}function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicActionEditController',controller);controller.$inject=['$scope','$stateParams','_','dynamicActionDataService','s3PopupService'];function controller($scope,$stateParams,_,dynamicActionDataService,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,callback=Modal.data.callback,index=Modal.data.index,stateObjects=Modal.data.stateObjects,message;this.dt_action_id=Modal.data.state.dt_action_id;this.dt_action_tree_id=$stateParams.dt_action_tree_id;this.parent_action_id=0;if(Modal.data.dt_action_tree_id){this.dt_action_tree_id=Modal.data.dt_action_tree_id}else{this.dt_action_tree_id=$stateParams.dt_action_tree_id}if(Modal.data.parent_action_id){this.parent_action_id=Modal.data.parent_action_id}this.action={dt_action_tree_id:$this.dt_action_tree_id,parent_action_id:$this.parent_action_id};this.state=Modal.data.state;this.canEdit=Modal.data.canEdit;this.saveIncoming=saveIncoming;this.deleteIncoming=deleteIncoming;this.selectorTree=selectorTree;this.removeTree=removeTree;activate();if(typeof Modal.hide=='undefined'){Modal.hide={}}Modal.hide['headReload']=true;Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.action.adding';Modal.onClose=function(){if(!updated){return null}return $this.action};Modal.onSave=function(){delete $this.state.errors;var properties={x:$this.state.x,y:$this.state.y};if($this.state.condition){properties['condition']=$this.state.condition}if($this.dt_action_id>0){return dynamicActionDataService.updateStaticValuesJson({'dt_action_tree_id':$this.dt_action_tree_id,'dt_action_id':$this.dt_action_id,'incomings':$this.state.incomings,'comment':$this.state.comment,'properties':properties}).then(function(response){if(response.errors&&response.errors){$this.state.errors=response.errors;return false}else{util.msg(JS_SAVED)}},function(response){s3.alertHTML(response.message,function(){s3PopupService.closeLast('mouse')});s3PopupService.setClose();return false})}else{if(typeof $this.state.errors!='undefined'){delete $this.state.errors}if($this.state&&typeof $this.state.data!='undefined'&&$this.state.data!=''){if($this.state.data.action_type==10){if($this.state.run_action_tree.dt_action_tree_id==0){$this.state.errors={"run_action_tree":"Нужно выбрать дерево действий"};return false}if($this.state.run_action_tree.dt_action_tree_id==$this.dt_action_tree_id){$this.state.errors={"run_action_tree":"Нельзя выбрать дерево в котором находишся"};return false}}if(typeof $this.state.errors=='undefined'){return dynamicActionDataService.edit({'action':{action_type:$this.state.data.action_type,dt_action_tree_id:$this.dt_action_tree_id,parent_action_id:0,run_dt_action_tree_id:$this.state.run_action_tree.dt_action_tree_id,comment:$this.state.comment,properties:properties}}).then(function(response){if(response.action){var response=response.action;response['run_action_tree']={'dt_action_tree_id':$this.state.run_action_tree.dt_action_tree_id,'name':$this.state.run_action_tree.name};if(typeof callback=='function'){callback(response)}util.msg(JS_ADDED)}$this.newAction={}})}}else if(typeof $this.state.data=='undefined'||$this.state.data==''){alert('не сохранено, не выбран тип действия')}}};function activate(){dynamicActionDataService.getDataForEdit({dt_action_tree_id:$this.dt_action_tree_id,dt_action_id:$this.dt_action_id}).then(function(response){if(_.isArray(response.action_types)){$this.actionTypes=response.action_types}$this.commandGroups=response.groups;if(_.isObject(response.action)&&response.action.dt_action_id){$this.action=response.action;Modal.title='dynamic.action.editing';Modal.subtitle=response.action.name}if(response.action&&!_.isObject(response.action.properties)){try{$this.state.condition=JSON.parse(response.action.properties)['condition']}catch(e){$this.state.condition={}}}$scope.$emit('popupLoad:done',true)})}function saveIncoming(){if($this.newIncoming){dynamicActionDataService.addIncoming({dt_action_id:$this.dt_action_id,alias:$this.newIncoming.alias}).then(function(response){if(response.errors){$this.newIncoming['errors']=response.errors}else{delete $this.newIncoming;if(typeof stateObjects[index]['incomings']=='undefined'){stateObjects[index]['incomings']=[]}stateObjects[index]['incomings'].push({'uuid':response.dt_action_param_id,'alias':response.alias});util.msg(JS_ADDED)}})}}function deleteIncoming(pindex,dt_action_param_id){return s3PopupService.confirm('dynamic.actionTree.paramDelete').then(function(modal){modal.close.then(function(confirm){if(confirm){dynamicActionDataService.deleteIncoming({dt_action_id:$this.dt_action_id,dt_action_param_id:dt_action_param_id}).then(function(response){if(response!=false){stateObjects[index]['incomings'].splice(pindex,1);util.msg(JS_DELETED)}})}})})}function selectorTree(){var list={};if($this.state.run_action_tree.dt_action_tree_id==0){list={}}else if($this.state.run_action_tree.dt_action_tree_id>0){list[$this.state.run_action_tree.dt_action_tree_id]=$this.state.run_action_tree}s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action.tree/tree/selector/dynamic.action.tree.selector.html',{list:list,method:'radio'}).then(function(modal){modal.close.then(function(){if(Object.keys(list).length>0){$this.state.run_action_tree=list[Object.keys(list)[0]]}})})}function removeTree(action){action.run_action_tree={'dt_action_tree_id':0}}$this.debug=debug;function debug(){console.log('220:dynamic.action.edit.controller.js');console.log($this)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicQueueEditController',controller);controller.$inject=['$scope','dynamicQueueDataService','$filter','$timeout','$element','s3PopupService'];function controller($scope,dynamicQueueDataService,$filter,$timeout,$element,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,l=$.datepicker.regional[i18n_map[S3_LANG_CODE]],message;this.queue={run_time:''};this.queue_id=Modal.data.queue_id;this.done=false;this.queue_tree={dt_action_tree_id:0};this.selectorTree=selectorTree;this.removeTree=removeTree;activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.queue.adding';Modal.onClose=function(){if(!updated){return{}}if(typeof $this.errors=='undefined'){return{queue:$this.queue}}};Modal.onSave=function(){return dynamicQueueDataService.edit({'queue':$this.queue}).then(function(response){if(_.isObject(response.queue)){$this.queue=response.queue;delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};Modal.onReload=function(){message=JS_RELOADED;delete $this.errors;$this.queue={run_time:''};activate()};function activate(){dynamicQueueDataService.getDataForEdit({queue_id:$this.queue_id}).then(function(response){if(_.isObject(response.params)){$this.params=response.params}if(_.isObject(response.queue)&&response.queue.queue_id){$this.queue=response.queue;if($this.queue.params){$this.queue.params=$filter('json')(JSON.parse(response.queue.params))}Modal.title='dynamic.queue.editing';Modal.subtitle=response.queue.name}if(_.isObject(response.queue_tree)){$this.queue_tree=response.queue_tree}$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}$timeout(function(){var input=$element.find('input[name="run_time"]');if(input.length){input.datetimepicker({dateFormat:'yy-mm-dd',timeFormat:'HH:mm:ss',timeInput:true})}})})}function selectorTree(){var list={};if($this.queue_tree.dt_action_tree_id==0){list={}}else if($this.queue_tree.dt_action_tree_id>0){list[$this.queue_tree.dt_action_tree_id]=$this.queue_tree}s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/action.tree/tree/selector/dynamic.action.tree.selector.html',{list:list,scope:['all','cli'],method:'radio'}).then(function(modal){modal.close.then(function(){if(Object.keys(list).length>0&&!list[$this.queue_tree.dt_action_tree_id]){$this.queue_tree=list[Object.keys(list)[0]];$this.queue.alias_tree=$this.queue_tree.alias}})})}function removeTree(){$this.queue_tree={dt_action_tree_id:0};$this.queue.alias_tree=''}this.debug=debug;function debug(){console.log('143:dynamic.queue.edit.controller.js');console.log($this)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicQueueTasksController',controller);controller.$inject=['_','dynamicQueueService','dynamicQueueDataService'];function controller(_,dynamicQueueService,dynamicQueueDataService){var $this=this,limit=30;this.queues={};this.total=0;this.addQueue=addQueue;this.clear=clear;this.pageList=[];this.pageCurrent=1;this.pageChange=pageChange;activate();function activate(){dynamicQueueDataService.getList({'start':0,'limit':limit,'hash_key':'queue_id'}).then(function(response){parseResponse(response)})}function addQueue(){dynamicQueueService.add().then(function(modal){modal.close.then(function(response){if(_.isObject(response.queue)&&response.queue.queue_id){$this.queues['_'+response.queue.queue_id]=response.queue}})})}function clear(){dynamicQueueDataService.clear({'start':0,'limit':limit,'hash_key':'queue_id'}).then(function(response){$this.queues=response.queues})}function pageChange(n,event){var target=$(event.currentTarget),start=(limit*(n-1));if(!target.is('.disabled')){dynamicQueueDataService.getList({'start':start,'limit':limit,'hash_key':'queue_id'}).then(function(response){$this.pageCurrent=n;parseResponse(response)})}}function pageListCreate(n){var tmp={},tmp2=[],total=Math.ceil(n/limit);for(var i=1;i<=total;i++){tmp={n:i,active:false};if(i==$this.pageCurrent){tmp.active=true}tmp2.push(tmp)}$this.pageList=tmp2}function parseResponse(response){$this.total=response.total;pageListCreate($this.total);if(_.isObject(response.queues)){$this.queues=response.queues}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicSitemapSettingsEditController',controller);controller.$inject=['$scope','dynamicSitemapSettingsDataService','s3PopupService'];function controller($scope,dynamicSitemapSettingsDataService,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,message;this.settings={};this.settings_id=Modal.data.settings_id;this.queries=[];this.pages=[];activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.sitemap_settings.adding';Modal.onClose=function(){if(!updated){return{}}if(typeof $this.errors=='undefined'){return{settings:$this.settings}}};Modal.onSave=function(){return dynamicSitemapSettingsDataService.edit({'sitemapSettings':$this.settings}).then(function(response){if(_.isObject(response.sitemapSettings)){$this.settings=response.sitemapSettings;delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};Modal.onReload=function(){message=JS_RELOADED;$this.settings={};$this.queries=[];$this.pages=[];delete $this.errors;activate()};function activate(){dynamicSitemapSettingsDataService.getDataForEdit({settings_id:$this.settings_id}).then(function(response){if(_.isArray(response.queries)){$this.queries=response.queries}if(_.isArray(response.pages)){$this.pages=response.pages}if(_.isObject(response.sitemapSettings)&&response.sitemapSettings.settings_id){$this.settings=response.sitemapSettings;Modal.title='dynamic.sitemap_settings.editing';Modal.subtitle=response.sitemapSettings.name}$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}})}this.debug=debug;function debug(){console.log('80:dynamic.sitemap.settings.edit.controller.js');console.log($this)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicSitemapSettingsController',controller);controller.$inject=['_','dynamicSitemapSettingsService','dynamicSitemapSettingsDataService'];function controller(_,dynamicSitemapSettingsService,dynamicSitemapSettingsDataService){var $this=this;this.sitemapSettings={};this.enabled=true;this.addSettings=addSettings;activate();function activate(){dynamicSitemapSettingsDataService.getList({'hash_key':'settings_id'}).then(function(response){if(_.isObject(response.sitemapSettings)){$this.sitemapSettings=response.sitemapSettings}})}function addSettings(){dynamicSitemapSettingsService.add().then(function(modal){modal.close.then(function(response){if(_.isObject(response.settings)&&response.sitemapSettings.settings_id){$this.settings[response.sitemapSettings.settings_id]=response.sitemapSettings}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicQueryEditController',controller);controller.$inject=['$scope','dynamicQueryDataService','$filter','$element','s3PopupService'];function controller($scope,dynamicQueryDataService,$filter,$element,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,message,timer,editor_resize;this.query={'settings':{'aggr_easy_result':'1','aggr_method':'0'},'params':{}};this.params={'':{'sort':{},'search':{},'only':{}}};this.dt_query_id=Modal.data.dt_query_id;this.global=0;this.param_types={};this.selectedTab=0;this.groupsForm={'_0':{'dt_group_id':'0','name':'general.main'},'_1':{'dt_group_id':'1','name':'dynamic.query.tabSort'},'_2':{'dt_group_id':'2','name':'dynamic.query.tabSearch'},'_3':{'dt_group_id':'3','name':'dynamic.query.tabAggr'},'_4':{'dt_group_id':'4','name':'dynamic.query.tabOnly'},'_5':{'dt_group_id':'5','name':'Дополнительно'}};this.controlsForm={0:[{'name':'general.alias','alias':'alias','dt_group_id':0},{'name':'dynamic.query.types_search','alias':'types','dt_group_id':0},{'name':'general.name','alias':'name','dt_group_id':0}]};this.canEdit=canEdit;this.callback=callback;this.callback2=callback2;this.selectTab=selectTab;$scope.aceLoaded=function(editor){editor_resize=function(){timer=setTimeout(function(){editor.renderer.onResize(true,'undefined',$element.find('div[id^="ace_editor_wrapper"]').clientWidth,$element.find('div[id^="ace_editor_wrapper"]').clientHeight)},0)};clearTimeout(timer)};activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.query.adding';Modal.onClose=function(){if(!updated){return{}}if(typeof $this.errors=='undefined'){return{query:$this.query}}};Modal.onSave=function(){return dynamicQueryDataService.edit({'query':$this.query}).then(function(response){if(_.isObject(response.query)){$this.query=response.query;delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};Modal.onReload=function(){message=JS_RELOADED;$this.global=0;$this.query={'settings':{'aggr_easy_result':'1','aggr_method':'0'},'params':{}};$this.params={'':{'sort':{},'search':{},'only':{}}};delete $this.errors;activate()};function activate(){dynamicQueryDataService.getDataForEdit({dt_query_id:$this.dt_query_id}).then(function(response){$this.param_types=response.param_types;if(_.isObject(response.params)){$this.params['']=response.params}if(_.isObject(response.query)&&response.query.dt_query_id){$this.query=response.query;Modal.title='dynamic.query.editing';Modal.subtitle=response.query.name;$this.global=(response.query.ver_id==0)?1:0;if(Array.isArray($this.query.settings)){$this.query.settings={}}if(!_.isObject($this.query.return_types)||!_.size($this.query.return_types)){$this.query.return_types={}}if(typeof $this.query.settings.aggr_method=='undefined'){$this.query.settings.aggr_method='0'}if($this.query.raw_query_json){$this.query.raw_query_json=$filter('json')(JSON.parse($this.query.raw_query_json))}}$this.tags=response.tags;checkEmptyTab();$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}})}function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}function callback(data){dynamicQueryDataService.getTypesParams({'dt_type_ids':Object.keys($this.query.types)}).then(function(response){$this.params['']['sort']=response['sort'];$this.params['']['search']=response['search'];$this.params['']['aggr']=response['aggr'];$this.params['']['only']=response['only'];removeParamsNoType('');checkEmptyTab()})}function removeParamsNoType(parent_alias){_.each($this.query.params.sort,function(item,i){if(!$this.params[parent_alias]['sort'][item.param.alias]){if(_.isArray($this.query.params['sort'])){$this.query.params['sort'].splice(i,1)}else{delete $this.query.params['sort'][i]}}});_.each($this.query.params.search,function(item,key){if(!$this.params[parent_alias]['search'][item.param.alias]){delete $this.query.params['search'][key]}});_.each($this.query.params.aggr,function(param,key){if(!$this.params[parent_alias]['aggr'][param.alias]){delete $this.query.params['aggr'][key]}});_.each($this.query.params.only,function(param,key){if(!$this.params[parent_alias]['only'][param.alias]){delete $this.query.params['only'][key]}})}function callback2(data){console.log($this.query.return_types);if(_.size($this.query.return_types)==0){callback()}else{dynamicQueryDataService.getTypesParams({'dt_type_ids':Object.keys($this.query.return_types)}).then(function(response){$this.params['']['only']=response['only'];$this.query.params.only=[];checkEmptyTab()})}}function checkEmptyTab(){if(_.size($this.query.types)>0||_.size($this.query.types)>0){$this.groupsForm['_1']['disabled']=false;$this.groupsForm['_2']['disabled']=false;$this.groupsForm['_3']['disabled']=false;$this.groupsForm['_4']['disabled']=false;$this.groupsForm['_5']['disabled']=false}else{$this.groupsForm['_1']['disabled']=true;$this.groupsForm['_2']['disabled']=true;$this.groupsForm['_3']['disabled']=true;$this.groupsForm['_4']['disabled']=true;$this.groupsForm['_5']['disabled']=true}}$scope.$on('s3DtGoToPaneAndField',function(event,data){angular.element(window).trigger('resize');$this.selectedTab=data.group_id});function selectTab(pane){$this.selectedTab=pane['dt_group_id'];editor_resize()}this.debug=debug;function debug(){console.log('165:dynamic.query.edit.controller.js');console.log($this)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicQueryExportController',controller);controller.$inject=['$scope','_','dynamicQueryDataService','$filter','$rootScope','s3PopupService'];function controller($scope,_,dynamicQueryDataService,$filter,$rootScope,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false;this.scheme='';activate();Modal.buttonsBottom=false;Modal.buttonsTop=false;Modal.title='general.export';function activate(){return dynamicQueryDataService.exportQueries({}).then(function(response){if(_.isObject(response)){$this.scheme=$filter('json')(response.schema);Modal.title='general.export'}$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicQueryMainController',controller);controller.$inject=['_','dynamicQueryService','dynamicQueryDataService'];function controller(_,dynamicQueryService,dynamicQueryDataService){var $this=this;this.queries={};this.addQuery=addQuery;this.filterByTag=filterByTag;this.importQueries=importQueries;this.exportQueries=exportQueries;activate();function activate(){dynamicQueryDataService.getList({'hash_key':'dt_query_id'}).then(function(response){if(_.isObject(response.queries)){$this.queries=response.queries}})}function addQuery(){dynamicQueryService.add().then(function(modal){modal.close.then(function(response){if(_.isObject(response.query)&&response.query.dt_query_id){$this.queries[response.query.dt_query_id]=response.query}})})}function importQueries(){dynamicQueryService.importQueries({}).then(function(modal){modal.close.then(function(query){if(_.isObject(query)){console.log(query.queries);$this.queries=query.queries}})})}function exportQueries(){dynamicQueryService.exportQueries({}).then(function(modal){modal.close.then(function(query){if(_.isObject(query)){$this.list[query.dt_query_id]=query}})})}function filterByTag(tag_id){dynamicQueryDataService.getList({tag_id:tag_id,hash_key:'dt_query_id'}).then(function(response){$this.queries=response.queries})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicQueryImportController',controller);controller.$inject=['$scope','_','dynamicQueryDataService','$rootScope','s3PopupService'];function controller($scope,_,dynamicQueryDataService,$rootScope,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false;this.scheme='';this.canEdit=canEdit;activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='general.import';Modal.onClose=function(){if(!updated){return null}if(typeof $this.errors=='undefined'){return $this.scheme}};Modal.onSave=function(){if(typeof $this.scheme!='undefined'&&typeof $this.scheme=='string'){$this.scheme=JSON.parse($this.scheme)}return dynamicQueryDataService.importQueries({'schema':$this.scheme}).then(function(response){if(typeof response.errors=='undefined'){$this.query=response.query;delete $this.errors;updated=true}else if(response.errors){$this.errors=response.errors;return false}})};function activate(){return s3PopupService.confirm('dynamic.type.importNotice1').then(function(modal){modal.close.then(function(response){if(response){$scope.$emit('popupLoad:done',true)}else{return s3PopupService.confirm('dynamic.type.importNotice2').then(function(modal){modal.close.then(function(response){if(response){$scope.$emit('popupLoad:done',true)}})})}})})}function canEdit(){if($this.global==1){if($rootScope.can_edit_global){return true}else{return false}}return true}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicMainController',DynamicMainController);DynamicMainController.$inject=['dynamicMainRouteService','dynamicTypeService','dynamicTypeDataService'];function DynamicMainController(dynamicMainRouteService,dynamicTypeService,dynamicTypeDataService){var $this=this;this.types=dynamicMainRouteService.types;this.activeFolderId=0;this.type={};this.type.add=dynamicTypeService.add;this.type.importTypes=importTypes;this.type.exportTypes=exportTypes;this.filterByTag=filterByTag;function filterByTag(tag_id){dynamicTypeDataService.getList(tag_id).then(function(response){$this.types=response.types})}if(_.size(this.types)==0){this.types={}}function importTypes(){dynamicTypeService.importTypes({}).then(function(modal){modal.close.then(function(type){if(_.isObject(type)){console.log(type.types);$this.types=type.types}})})}function exportTypes(){dynamicTypeService.exportTypes({}).then(function(modal){modal.close.then(function(type){if(_.isObject(type)){$this.list[type.dt_type_id]=type}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicEventEditController',controller);controller.$inject=['$scope','dynamicEventDataService','s3PopupService'];function controller($scope,dynamicEventDataService,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false,message;this.event={};this.event_id=Modal.data.event_id;this.event_types=[];this.trees=[];activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.event.adding';Modal.onClose=function(){if(!updated){return{}}if(typeof $this.errors=='undefined'){return{event:$this.event}}};Modal.onSave=function(){return dynamicEventDataService.edit({'event':$this.event}).then(function(response){if(_.isObject(response.event)){$this.event=response.event;delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};Modal.onReload=function(){message=JS_RELOADED;$this.event={};$this.event_types=[];$this.trees=[];delete $this.errors;activate()};function activate(){dynamicEventDataService.getDataForEdit({event_id:$this.event_id}).then(function(response){if(_.isArray(response.event_types)){$this.event_types=response.event_types}if(_.isArray(response.trees)){$this.trees=response.trees}if(_.isObject(response.event)&&response.event.event_id){$this.event=response.event;Modal.title='dynamic.event.editing';Modal.subtitle=response.event.name}$scope.$emit('popupLoad:done',true);if(typeof message!='undefined'){util.msg(message)}})}this.debug=debug;function debug(){console.log('63:dynamic.event.edit.controller.js');console.log($this)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicEventController',controller);controller.$inject=['_','dynamicEventService','dynamicEventDataService'];function controller(_,dynamicEventService,dynamicEventDataService){var $this=this;this.event={};this.enabled=true;this.addEvent=addEvent;activate();function activate(){dynamicEventDataService.checkStatues().then(function(response){if(_.isObject(response)){$this.enabled=response.status}});dynamicEventDataService.getList({'hash_key':'event_id'}).then(function(response){if(_.isObject(response.event)){$this.event=response.event}})}function addEvent(){dynamicEventService.add().then(function(modal){modal.close.then(function(response){if(_.isObject(response.event)&&response.event.event_id){$this.event[response.event.event_id]=response.event}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicTagEditController',controller);controller.$inject=['$scope','dynamicTagDataService','s3PopupService'];function controller($scope,dynamicTagDataService,s3PopupService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false;this.list=Modal.data.list;this.tag={};if(Modal.data.tag_id){if(typeof this.list[Modal.data.tag_id]!='undefined'){this.tag=JSON.parse(JSON.stringify(this.list[Modal.data.tag_id]))}else{this.tag.tag_id=Modal.data.tag_id}}activate();Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='dynamic.tag.adding';Modal.subtitle='dynamic.tag.tag';if(this.tag_id){Modal.title='dynamic.tag.editing';Modal.subtitle=this.tag.name}Modal.onClose=function(){if(!updated){return null}if(typeof $this.errors=='undefined'){return $this.tag}};Modal.onSave=function(){return dynamicTagDataService.edit($this.tag).then(function(response){if(typeof response.errors=='undefined'){$this.tag.tag_id=response;$this.list[$this.tag.tag_id]=$this.tag;delete $this.errors;updated=true;util.msg(JS_SAVED)}else if(response.errors){$this.errors=response.errors;return false}})};function activate(){$scope.$emit('popupLoad:done',true)}$this.debug=function(){console.log('63:dynamic.tag.edit.controller.js');console.log($this)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicDebugTestQueryController',controller);controller.$inject=['$scope','dynamicDebugDataService'];function controller($scope,dynamicDebugDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,originalData;this.data=Modal.data;this.mode='normal';this.customData={};this.setMode=setMode;this.run=run;originalData=JSON.parse(JSON.stringify($this.data));Modal.buttonsBottom=false;Modal.buttonsTop=false;Modal.title='dynamic.debug.mode.list.test';Modal.onReload=function(){delete $this.result;$this.customData={};$this.mode='normal';Modal.data=originalData};activate();function activate(){Modal.subtitle=$this.data.name;$scope.$emit('popupLoad:done',true)}function run(){var data={};switch($this.mode){case'normal':break;case'extrimal':data.limit=1000;break;case'custom':data.limit=$this.customData.limit;data.query=$this.customData.query;break}$this.data['query_data']=data;dynamicDebugDataService.queryTest($this.data).then(function(response){$this.result=response},function(response){$this.result={'error':response.status+' '+response.statusText}})}function setMode(mode){$this.mode=mode}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('DynamicDebugController',controller);controller.$inject=['$scope','$element','dynamicDebugService','dynamicDebugDataService','$sce','$rootScope','s3PopupService'];function controller($scope,$element,dynamicDebugService,dynamicDebugDataService,$sce,$rootScope,s3PopupService){var $this=this;this.getLinks=getLinks;this.getId=getId;this.edit=edit;this.setMode=setMode;this.elastic=elastic;this.getCount=getCount;this.reindexType=reindexType;this.reindexVersion=reindexVersion;this.asHtml=asHtml;this.getLocks=getLocks;this.removeLock=removeLock;this.canEdit=canEdit;this.test=test;this.fixCount=fixCount;this.getSitemapData=getSitemapData;this.refreshSitemap=refreshSitemap;this.getQueues=getQueues;this.awakenTask=awakenTask;this.mode='list';this.list={};this.locks={};this.sitemap={};this.queues={};this.selected='types';this.types={types:{name:'dynamic.type.title',type:'type',key_id:'dt_type_id',url:'/dynamic/type/'},params:{name:'dynamic.param.title',type:'param',key_id:'param_id'},trees:{name:'dynamic.actionTree.title',type:'tree',key_id:'dt_action_tree_id',url:'/dynamic/tree/'},queries:{name:'dynamic.query.title',type:'query',key_id:'dt_query_id'},queues:{name:'dynamic.queue.title',type:'queue',key_id:'queue_id'}};activate();function activate(){dynamicDebugDataService.getList().then(function(response){$this.list=response});canEdit();getLocks();getSitemapData()}$scope.aceLoaded=function(editor){editor.commands.addCommand({name:'send',bindKey:{win:'Ctrl-S',mac:'Command-S',sender:'editor|cli'},exec:function(env,args,request){elastic()}});editor.getSession().setUseWrapMode(true);editor.getSession().setUseWorker(false);editor.setOption("enableEmmet",true);editor.setShowPrintMargin(false)};function getLinks(data){dynamicDebugDataService.getLinks({'type':$this.types[$this.selected]['type'],'type_id':data[$this.types[$this.selected]['key_id']]}).then(function(response){data['links']=response})}function getId(data){return data[$this.types[$this.selected]['key_id']]}function edit(key,id){return dynamicDebugService.edit(id,$this.types[key].type)}function setMode(mode){$this.mode=mode}function elastic(){if($this.elasticData){dynamicDebugDataService.elasticSearch(JSON.parse($this.elasticData)).then(function(response){$this.elasticResponse=response})}}function getCount(data){dynamicDebugDataService.getCount({'dt_type_id':$this.getId(data)}).then(function(response){data['count_bd']=response['bd'];data['count_es']=response['es']})}function reindexType(dt_type_id){return dynamicDebugDataService.reindexType({'dt_type_id':dt_type_id}).then(function(response){delete $this.indexError;delete $this.indexDone;if(response.error){$this.indexError=response.error.replace(/\n/g,'<br>')}else{$this.indexDone=response.done.replace(/\n/g,'<br>')}},function(response){$this.indexError=response.message})}function reindexVersion(){return dynamicDebugDataService.reindexVersion().then(function(response){delete $this.indexError;delete $this.indexDone;if(response.error){$this.indexError=response.error.replace(/\n/g,'<br>')}else{$this.indexDone=response.done.replace(/\n/g,'<br>')}},function(response){$this.indexError=response.message})}function asHtml(html){return $sce.trustAsHtml(html)}function getLocks(){dynamicDebugDataService.getLocks().then(function(response){$this.locks=response})}function removeLock(data){return s3PopupService.confirm('dynamic.debug.mode.lock.delete').then(function(modal){modal.close.then(function(response){if(response){dynamicDebugDataService.removeLock(data).then(function(response){delete $this.locks[data.name]})}})})}function canEdit(){if($rootScope.can_edit_global){return true}else{return false}}function test(data){dynamicDebugService.test($this.types[$this.selected].type,data)}function fixCount(data){dynamicDebugDataService.fixCount(data).then(function(response){data.count=response.count})}function getSitemapData(){dynamicDebugDataService.getSitemapData().then(function(response){$this.sitemap=response})}function refreshSitemap(){return s3PopupService.confirm('dynamic.debug.mode.sitemap.confirm').then(function(modal){modal.close.then(function(response){if(response){dynamicDebugDataService.refreshSitemap().then(function(response){console.log(response);$this.sitemap=response})}})})}function getQueues(){dynamicDebugDataService.getQueues().then(function(response){$this.queues=response})}function awakenTask(queue_id){return dynamicDebugDataService.awakenTask({'queue_id':queue_id}).then(function(response){$this.queues=response})}}})(angular);(function(angular){'use strict';angular.module('s3.data.layout').controller('DynamicLayoutController',controller);controller.$inject=['$scope','$rootScope','$stateParams'];function controller($scope,$rootScope,$stateParams){var $this=this;this.alias=$stateParams.alias;$scope.$on('$destroy',function(){$rootScope.storage={}})}})(angular);(function(angular){'use strict';angular.module('s3.data.folder').controller('FolderEditController',controller);controller.$inject=['$scope','_','folderDataService'];function controller($scope,_,folderDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,updated=false;this.folder_id=Modal.data.folder_id;this.parent_folder_id=Modal.data.parent_folder_id;this.folder={'folder_id':$this.folder_id,'parent_folder_id':$this.parent_folder_id};Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='folder.adding';Modal.onClose=function(){if(!updated){return null}return $this.folder};Modal.onSave=function(){return folderDataService.edit($this.folder).then(function(response){$this.folder=response.folder;updated=true})};activate();function activate(){if($this.folder_id){folderDataService.getById($this.folder_id).then(function(response){if(_.isObject(response.folder)){$this.folder=response.folder;Modal.title='folder.editing';Modal.subtitle=response.folder.folder_name}Modal.align()})}else{Modal.align()}}}})(angular);(function(angular){'use strict';angular.module('s3.data.template').controller('DynamicTemplateController',controller);controller.$inject=['$scope','$state','$timeout','s3PopupService','templateService','templateGroupService'];function controller($scope,$state,$timeout,s3PopupService,templateService,templateGroupService){var $this=this,needReload=false,editor={},undoData={},selectedUndo=0,defaultSettings={listOpenened:[],lastOpenened:0,themeEditor:'chrome',editorShow:true,lastGroup:0,expands:{},scrolls_info:{}},LS={storage:false,ver_id:VER_ID,_getObject:function(){var self=this,res=JSON.parse(localStorage.getItem(self.ver_id+'_dt_template_editor'));return res},_setObject:function(data){var self=this;return localStorage.setItem(self.ver_id+'_dt_template_editor',JSON.stringify(data))},set:function(key,value){var self=this,data=self._getObject();if(!data){data={}}if(value==null){delete data[key]}else{data[key]=value}return self._setObject(data)},get:function(key){var self=this,data=self._getObject();if(data==null||typeof data!='object'||!(key in data)){return{}}return data[key]},push:function(key,value){var self=this,data=self._getObject();data[key].push(value);return self._setObject(data)},remove:function(key){var self=this;return self.set(key,null)},check:function(){if(typeof localStorage=='undefined'){return false}return true}},tabs,timer,timer2;try{if(!LS._getObject()){this.settings=defaultSettings;LS._setObject(defaultSettings)}else{this.settings=LS._getObject()}}catch(e){this.settings=defaultSettings;LS._setObject(defaultSettings)}this.selectedTemplateGroupIf=false;this.errors={};this.deleteList={};this.selectedList={};this.needReloadGroup={};this.groupStore={};this.groupList=[];this.groups=[{name:'Без группы',group_id:'0',_level:'1'}];this.links={groups:{globalList:{},localList:{}},search:{globalList:{},localList:{}}};this.searchSettings={searchBy:'name',text:''};this.themes=[{code:'chrome',name:'Default'},{code:'ambiance',name:'Ambiance'},{code:'monokai',name:'Monokai'},{code:'chaos',name:'Chaos'},{code:'clouds',name:'Clouds'},{code:'clouds_midnight',name:'Clouds midnight'},{code:'cobalt',name:'Cobalt'},{code:'crimson_editor',name:'Crimson editor'},{code:'dawn',name:'Dawn'},{code:'dreamweaver',name:'Dreamweaver'},{code:'eclipse',name:'Eclipse'},{code:'github',name:'Github'},{code:'idle_fingers',name:'Idle fingers'},{code:'katzenmilch',name:'Katzenmilch'},{code:'kr_theme',name:'Kr theme'},{code:'kuroir',name:'Kuroir'},{code:'merbivore',name:'Merbivore'},{code:'merbivore_soft',name:'Merbivore soft'},{code:'mono_industrial',name:'Mono industrial'},{code:'pastel_on_dark',name:'Pastel on dark'},{code:'solarized_dark',name:'Solarized dark'},{code:'solarized_light',name:'Solarized light'},{code:'terminal',name:'Terminal'},{code:'textmate',name:'Textmate'},{code:'tomorrow',name:'Tomorrow'},{code:'tomorrow_night',name:'Tomorrow night'},{code:'tomorrow_night_blue',name:'Tomorrow night blue'},{code:'tomorrow_night_bright',name:'Tomorrow night bright'},{code:'tomorrow_night_eighties',name:'Tomorrow night eighties'},{code:'twilight',name:'Twilight'},{code:'vibrant_ink',name:'Vibrant ink'},{code:'xcode',name:'X code'}];this.selectTemplate=selectTemplate;this.newTemplate=newTemplate;this.saveTemplate=saveTemplate;this.removeTemplate=removeTemplate;this.goList=goList;this.copyTemplate=copyTemplate;this.switchFullscreen=switchFullscreen;this.goTo=goTo;this.templateContext=templateContext;this.removeTemplateContext=removeTemplateContext;this.search=search;this.templateListAdd=templateListAdd;this.searchReset=searchReset;this.closeTemplate=closeTemplate;this.toggleTemplateGroupEdit=toggleTemplateGroupEdit;this.selectGroup=selectGroup;this.saveTemplateGroup=saveTemplateGroup;this.selectEditGroup=selectEditGroup;this.addGroup=addGroup;this.addExpand=addExpand;this.toggle=toggle;this.groupParentFilter=groupParentFilter;this.groupNameUpdate=groupNameUpdate;this.deleteTemplateGroup=deleteTemplateGroup;$scope.aceLoaded=function(_editor){editor=_editor;editor.commands.addCommand({name:'saveFile',bindKey:{win:'Ctrl-S',mac:'Command-S',sender:'editor|cli'},exec:function(env,args,request){saveTemplate()}});editor.getSession().setUseWrapMode(true);editor.getSession().setUseWorker(false);editor.setOption("enableEmmet",true);editor.setShowPrintMargin(false);editor.getSession().setUseSoftTabs(false);editor.getSession().on('changeScrollTop',function(scroll){clearTimeout(timer);timer=setTimeout(function(){var key=$this.settings.lastOpenened;$this.settings['scrolls_info'][key]=scroll;LS.set('scrolls_info',$this.settings['scrolls_info'])},1)})};$scope.aceChanged=function(e){if($this.selected){var layout_id='';if($this.selected.layout_id){layout_id=$this.selected.layout_id}else{layout_id='newTemplate'}}if(selectedUndo!=layout_id){clearTimeout(timer);timer=setTimeout(function(){editorDropUndo(layout_id)},50)}editorScrollTop(layout_id)};$scope.$watch(function(){return $this.settings.themeEditor},function(newValue,oldValue){if(newValue!=oldValue){saveSettings()}});$scope.$watch(function(){return $this.settings.listOpenened},function(newValue,oldValue){if(newValue!=oldValue){saveSettings()}});$scope.$watch(function(){return $this.settings.editorShow},function(newValue,oldValue){if(newValue!=oldValue){saveSettings()}});$scope.$watch(function(){return $this.settings.lastOpenened},function(newValue,oldValue){if(newValue!=oldValue){saveSettings()}});$scope.$watch(function(){return $this.settings.lastGroup},function(newValue,oldValue){if(newValue!=oldValue){saveSettings()}});$scope.$watch(function(){return $this.selected},function(newValue,oldValue){if(newValue!=oldValue){if($this.selected){$this.settings.lastOpenened=$this.selected.layout_id}else{selectedUndo=0;$this.settings.lastOpenened=0}}});init($this.settings.lastGroup);function init(group_id){if(!$this.done&&!needReload&&$this.settings.listOpenened.length>0){templateService.loadOpened($this.settings.listOpenened).then(function(response){if(response.layouts){if(response.layouts['_'+$this.settings.lastOpenened]){$this.selected=response.layouts['_'+$this.settings.lastOpenened];$this.selected['originalBody']=$this.selected['body'];$this.selected['original_group_id']=$this.selected['group_id'];groupIf()}_.each($this.settings.listOpenened,function(layout_id){if(typeof response.layouts['_'+layout_id]!='undefined'){var template=response.layouts['_'+layout_id];$this.selectedList['_'+layout_id]=template;$this.selectedList['_'+layout_id]['originalBody']=$this.selectedList['_'+layout_id]['body'];$this.selectedList['_'+layout_id]['original_group_id']=$this.selectedList['_'+layout_id]['group_id']}});tabsInit();_.each(response.layout_links,function(link){if(link.ver_id==0){$this.links.groups.globalList[link.alias]=link.layout_id}else{$this.links.groups.localList[link.alias]=link.layout_id}});$this.done=true}})}if(!$this.done){templateGroupService.getList().then(function(response){parseGroupList(response)})}templateService.loadList(group_id).then(function(response){if(response){if(response.templates){$this.templates=response.templates;needReload=false;$this.groupStore[group_id]=$this.templates;if($this.needReloadGroup[group_id]){delete $this.needReloadGroup[group_id]}}$this.done=true}})}function parseGroupList(response){$this.groupList=response;if($this.settings.lastGroup==0){$this.selectedGroup=$this.groups[0]}$this.groups=[{name:'Без группы',group_id:'0',_level:'1'}];$this.groups=$this.groups.concat(flatGroups($this.groupList))}function selectTemplate(data){var template;if(typeof data=='object'){template=data}else if(typeof data=='string'||typeof data=='number'){if(!isNaN(parseInt(data))){template=$this.templates['_'+data]}else if(data='newTemplate'){template=$this.selectedList['newTemplate']}else{return false}}else{return false}if($this.selected){var key;if($this.selected.layout_id){key=$this.selected.layout_id}else{key='newTemplate'}undoData[key]=jQuery.extend(true,new ace.UndoManager(),editor.getSession().getUndoManager());editorScrollTop(key)}if(template.layout_id&&typeof $this.selectedList['_'+template.layout_id]=='undefined'){templateService.select(template).then(function(response){if(response.layout_id){$this.selected=$this.selectedList['_'+response.layout_id]=response;$this.selectedList['_'+response.layout_id]['errors']={};$this.selectedList['_'+response.layout_id]['originalBody']=$this.selectedList['_'+response.layout_id]['body'];$this.selectedList['_'+response.layout_id]['original_group_id']=$this.selectedList['_'+response.layout_id]['group_id'];updateOpenedList();editorOnResize();groupIf()}})}else{if(template.layout_id){$this.selected=$this.selectedList['_'+template.layout_id];$this.settings.lastOpenened=template.layout_id;updateOpenedList()}else{$this.selected=$this.selectedList['newTemplate']}editorOnResize();groupIf()}}function updateOpenedList(){var tmp=[];_.each($this.selectedList,function(tpl){if(tpl.layout_id){tmp.push(tpl.layout_id)}});$this.settings.listOpenened=tmp;tabsRefresh()}function closeTemplate(template){if(!template.layout_id||template.body!=template.originalBody){s3PopupService.confirm('dynamic.template.closeNotSave',true).then(function(modal){modal.close.then(function(response){if(response){deleteSelectedList(template)}})})}else{deleteSelectedList(template)}}function deleteSelectedList(template){var keys,n,i;if(!template.layout_id){delete $this.selectedList['newTemplate'];delete $this.settings['scrolls_info']['newTemplate']}else{delete $this.selectedList['_'+template.layout_id];delete $this.settings['scrolls_info']['_'+template.layout_id];i=$this.settings.listOpenened.indexOf(template.layout_id);if(i!=-1){$this.settings.listOpenened.splice(i,1)}}if(!template.layout_id||template.layout_id==$this.selected.layout_id){keys=Object.keys($this.selectedList);n=keys.length-1;if(n>=0){selectTemplate($this.selectedList[keys[n]])}else{delete $this.selected}}tabsRefresh()}function newTemplate(ver_id){$this.selected={ver_id:ver_id,group_id:'0'};if($this.selectedList['newTemplate']){selectTemplate('newTemplate')}else{$this.selectedList['newTemplate']=$this.selected;$this.selectedTemplateGroupIf=true}tabsRefresh()}function saveTemplate(){templateService.save($this.selected,$this);needReload=true}function removeTemplate(template){var data={template:template,ctrl:$this};if(template.ver_id==0){data['type_links']='globalList'}else{data['type_links']='localList'}templateService.remove(data)}function goList(){if($this.selected){$this.links.groups.globalList={};$this.links.groups.localList={};_.each($this.groups,function(group){if(group.group_id==$this.settings.lastGroup){selectGroup(group)}});delete $this.selected;$this.selectedTemplateGroupIf=false}}function goGroup(group_id){$this.links.groups.globalList={};$this.links.groups.localList={};init(group_id)}function copyTemplate(data,ver_id,noLink){var layout_id,template;if(data.currentTarget){layout_id=$(data.currentTarget).data('layout_id');template=$this.templates['_'+layout_id]}else{template=data}templateService.select(template).then(function(response){$this.selected=response;$this.selected.ver_id=ver_id;delete $this.selected.layout_id;if(noLink){var n=1,check=$this.selected.alias.match(new RegExp(/.+(_copy)(\d*)$/g)),text='copy';if(check&&check[0]){if(check[1]){n=parseInt(check[1])+1}else{n++}text+=n}$this.selected.alias=$this.selected.alias.replace(new RegExp(/_copy\d*$/g),'')+'_'+text;$this.selected.name=$this.selected.name.replace(new RegExp(/\(copy|\(local\d*\)$/g),'')+'('+text+')'}else{$this.selected.name+=' (local)'}$this.selectedList['newTemplate']=$this.selected;searchReset()})}function switchFullscreen(){var mainBox=$('#editorWrapper');if(mainBox.hasClass('fullscreen')){mainBox.removeClass('fullscreen');mainBox.find('.tpl-body').css('height',parseInt($(window).height())-330)}else{var height=parseInt($(window).height())-116;mainBox.addClass('fullscreen');if(height>500){mainBox.find('.tpl-body').css('height',height)}}editorOnResize()}function goTo(path,params,_blank){if(!_blank){$state.go(path,params)}else{var url=$state.href(path,params);window.open(url,'_blank')}}function templateContext(event,target,layout_id){S3ContextMenuController.openContextMenu(target,function(context){var pos=$(event.currentTarget).position();context.find('.make-local-copy').data('layout_id',layout_id);context.css({left:pos.left+5,top:pos.top+15})})}function removeTemplateContext(event){var layout_id=$(event.currentTarget).data('layout_id'),templateAlias=$this.templates['_'+layout_id]['alias'],templateLocal=$this.templates['_'+$this.localList[templateAlias]];removeTemplate(templateLocal)}function search(){if($this.searchSettings.text!=''){templateService.search({'type':$this.searchSettings.searchBy,'text':$this.searchSettings.text}).then(function(response){$this.searchResult=response.templates})}}function templateListAdd(template,type){if(template.ver_id==0){$this.links[type].globalList[template.alias]=template.layout_id}else{$this.links[type].localList[template.alias]=template.layout_id}}function searchReset(){delete $this.searchResult;$this.searchSettings={searchBy:'name'}}function saveSettings(){LS._setObject($this.settings)}function editorOnResize(){clearTimeout(timer2);timer2=setTimeout(function(){if(document.getElementById('ace_editor_wrapper')!=null){editor.renderer.onResize(true,'undefined',document.getElementById('ace_editor_wrapper').clientWidth,document.getElementById('ace_editor_wrapper').clientHeight)}},0)}function editorDropUndo(layout_id){var undo_manager=jQuery.extend(true,new ace.UndoManager(),editor.getSession().getUndoManager()),tab_undo=undoData[layout_id];if(tab_undo!==undefined){editor.getSession().setUndoManager(tab_undo)}else{undo_manager.reset();editor.getSession().setUndoManager(undo_manager)}selectedUndo=layout_id}$(window).resize(function(){editorOnResize()});function toggleTemplateGroupEdit(){if($this.editGroup){delete $this.editGroup}else{$this.editGroup={'edit':{'group_id':'0','parent_id':'0'}}}}function selectEditGroup(){$this.editGroup={original:$this.selectedGroup,edit:JSON.parse(JSON.stringify($this.selectedGroup))}}function selectGroup(group){if(group){if($this.settings.lastGroup!=group.group_id||$this.needReloadGroup[group.group_id]){$this.selectedGroup=group;$this.settings.lastGroup=group.group_id;searchReset();if($this.groupStore[group.group_id]&&!$this.needReloadGroup[group.group_id]){$this.templates=$this.groupStore[group.group_id]}else{needReload=true;goGroup(group.group_id)}}}}function saveTemplateGroup(){templateGroupService.save($this.editGroup.edit).then(function(response){if(Array.isArray(response)){$this.groups=[{name:'Без группы',group_id:'0',_level:'1'}];parseGroupList(response)}else{if(typeof $this.editGroup.original=='undefined'){$this.editGroup.original={}}$this.editGroup.original['name']=$this.editGroup.edit.name}delete $this.editGroup})}function addGroup(group,parent_id){group['parent_id']=parent_id.toString()}function addExpand(item_id){if(typeof $this.settings.expands[item_id]=='undefined'){$this.settings.expands[item_id]=true}}function toggle(scope,item_id){$this.settings.expands[item_id]=!$this.settings.expands[item_id];saveSettings()}function groupParentFilter(group,index,array){if($this.editGroup){return!($this.editGroup.edit._left>=group._left&&$this.editGroup.edit._right<=group._right&&$this.editGroup.edit.parent_id!=group.group_id)}else{return false}}function groupNameUpdate(group){var text='';switch(group._level){case'1':text='-';break;case'2':text=' →';break;case'3':text=' -→';break;case'4':text=' --→';break}return'|'+text+' '+group.name}function groupIf(){$timeout(function(){$this.selectedTemplateGroupIf=true},0)}function flatGroups(data,parent_id){var tmp=[],groups=JSON.parse(JSON.stringify(data)),parent_id=parent_id||0,tmp2;_.each(groups,function(group){group['parent_id']=parent_id.toString();if(group.children.length>0){tmp2=group.children;delete group.children;tmp.push(group);tmp=tmp.concat(flatGroups(tmp2,group.group_id))}else{delete group.children;tmp.push(group)}if(group.group_id==$this.settings.lastGroup){$this.selectedGroup=group}});return tmp}function deleteTemplateGroup(){if($this.editGroup.edit&&$this.editGroup.edit.group_id>0){templateGroupService.remove($this.editGroup.edit.group_id,$this,parseGroupList,selectGroup)}}function editorScrollTop(key){var scrollTop=$this.settings['scrolls_info'][key]||0;editor.getSession().setScrollTop(parseInt(scrollTop))}function tabsInit(){tabs=$("#tplTabs");tabs.sortable({stop:function(){var tmp={},id;_.each($("#tplTabs > li"),function(el){id='_'+$(el).data('template-id');tmp[id]=$this.selectedList[id]});$this.selectedList=tmp;updateOpenedList();saveSettings()}})}function tabsRefresh(){if(!tabs){tabsInit()}tabs.sortable("refresh")}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').controller('UserSelectorController',controller);controller.$inject=['$scope','userDataService'];function controller($scope,userDataService){var $this=this,Modal=$scope.$parent.$parent.Modal,i=0,multiple=Modal.data.multiple,max_values=Modal.data.max_values,limit=30,mode='list',searchData={'text':''},timer;this.users={};this.model=Modal.data.model;this.selected={};this.change=change;this.pageList=[];this.pageCurrent=1;this.pageChange=pageChange;this.search=search;Modal.buttonsBottom=true;Modal.buttonsTop=true;Modal.title='user.selector.title';Modal.hide={'save':true,'saveAndClose':true,'headReload':true,'headExpand':true};if(max_values==0){max_values=100}if(multiple==0){multiple=1;max_values=1}activate();function activate(){_.forEach($this.model,function(item){$this.selected[item.user_id]=true});userDataService.getList().then(function(response){parseResponse(response)})}function parseResponse(response){if(_.isObject(response.users)){$this.users=response.users}if(mode=='list'){pageListCreate(response.total)}else{pageListCreate(response.found)}multipleCheck();$scope.$emit('popupLoad:done',true)}function change(user_id){if($this.selected[user_id]){$this.model.push($this.users[user_id])}else{_.forEach($this.model,function(user,i){if(typeof user!='undefined'&&user.user_id==user_id){$this.model.splice(i,1)}})}multipleCheck()}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){$this.selectDisabled=true}else{$this.selectDisabled=false}}function pageChange(n,event){var target=$(event.currentTarget),start=(limit*(n-1));if(mode=='search'&&searchData.text!=''){userDataService.getListSearch({start:start,limit:limit,search:searchData}).then(function(response){$this.pageCurrent=n;parseResponse(response)})}else{userDataService.getList({start:start,limit:limit}).then(function(response){$this.pageCurrent=n;parseResponse(response)})}}function pageListCreate(n){var tmp={},tmp2=[],total=Math.ceil(n/limit);$this.step=5;if($this.pageCurrent<=$this.step){$this.step=$this.step*2-$this.pageCurrent+1}if($this.pageCurrent+$this.step>=total){$this.step=($this.step*2)-(total-$this.pageCurrent)}for(var i=1;i<=total;i++){tmp={n:i,active:false};if(i==$this.pageCurrent){tmp.active=true}tmp2.push(tmp)}$this.pageList=tmp2}function search(text,event){clearTimeout(timer);if(typeof text!='undefined'&&!event.ctrlKey&&!event.altKey&&!event.metaKey&&event.keyCode!=27){timer=setTimeout(function(){searchData={text:text};mode='search';userDataService.getListSearch({start:0,limit:limit,search:searchData}).then(function(response){$this.pageCurrent=1;parseResponse(response)})},500)}else{searchData={text:''};mode='list';userDataService.getList({start:0,limit:limit}).then(function(response){$this.pageCurrent=1;parseResponse(response)})}}}})(angular);(function(angular){'use strict';angular.module('s3.data.image').controller('ImageSelectorController',controller);controller.$inject=['$scope','_','imageDataService'];function controller($scope,_,imageDataService){var $this=this,Modal=$scope.$parent.$parent.Modal;Modal.buttonsBottom=true;Modal.title='image.selector.title';Modal.hide={'save':true,'saveAndClose':true};this.images={};this.selected={};this.model=Modal.data.model;this.limit=Modal.data.limit;this.select=select;this.deselect=deselect;activate();function activate(){if(_.size($this.model)){_.forEach($this.model,function(image){$this.selected[image.image_id]=true})}imageDataService.getList().then(function(response){if(_.isObject(response.images)){$this.images=response.images}})}function select(image){if($this.limit==1){deselect();$this.selected[image.image_id]=true}var key='_'+image.image_id;if($this.selected[image.image_id]){$this.model[key]=image}else{delete $this.model[key]}}function deselect(){_.clearObject($this.selected);_.clearObject($this.model)}}})(angular);(function(angular){'use strict';angular.module('s3.data.layoutMenu').controller('S3DataLayoutMenuEditItemController',controller);controller.$inject=['$scope','layoutMenuService'];function controller($scope,layoutMenuService){var $this=this,Modal=$scope.$parent.$parent.Modal,parent_item=Modal.data.parent_item||false,item=Modal.data,parent_item_id=(parent_item?parent_item.item_id:0),ctrl=Modal.data.ctrl;this.aliases=[];this.errors={};this.alias=Modal.data.alias;this.name=Modal.data.name;Modal.buttonsBottom=true;Modal.buttonsTop=true;if(item.item_id){Modal.uptitle=this.name;Modal.title='dynamic.layout.menu.editing'}else{Modal.uptitle='dynamic.layout.menu.item';Modal.title='dynamic.layout.menu.adding'}init();function init(){layoutMenuService.getListAliases().then(function(response){$this.aliases=response;$scope.$emit('popupLoad:done',true)})}Modal.onSave=function(){var data={alias:$this.alias,name:$this.name,parent_item_id:parent_item_id};if(item.item_id){data['item_id']=item.item_id}return layoutMenuService.save(data).then(function(response){if(response.errors){$this.errors=response.errors;return false}else if(response.noChanges){}else{ctrl.scheme=response.scheme;ctrl.total=response.total;ctrl.listAliases=response.aliases;$this.errors={};updateTitle()}})};Modal.onClose=function(){return null};function updateTitle(){if(item){Modal.uptitle=item.name}}}})(angular);(function(angular){'use strict';angular.module('s3.data.layoutMenu').controller('DynamicLayoutMenuController',controller).config(treeConfig);treeConfig.$inject=['$rootScopeProvider'];function treeConfig($rootScopeProvider){$rootScopeProvider.digestTtl(30)}controller.$inject=['_','$scope','$q','layoutMenuService','layoutMenuDataService','$state'];function controller(_,$scope,$q,layoutMenuService,layoutMenuDataService,$state){var $this=this,divContextMenu='pageController',timer;this.toggle=toggle;this.options=options();this.scheme=[];this.collapsed=1;this.total=0;this.expands={};this.dragTarget=0;this.lastHoverExpand=0;this.listAliases={};this.add=add;this.edit=edit;this.remove=remove;this.beforeDrop=beforeDrop;this.contextMenu=contextMenu;this.addExpand=addExpand;this.goToTemplate=goToTemplate;init();function init(){layoutMenuService.getList().then(function(response){$this.scheme=response.scheme;$this.total=response.total;$this.done=true;$this.listAliases=response.aliases;$scope.expandAll();$scope.collapseAll()})}$scope.collapseAll=function(){$scope.$broadcast('angular-ui-tree:collapse-all');_.each($this.expands,function(expand,key){$this.expands[key]=true});$this.collapsed=1};$scope.expandAll=function(){$scope.$broadcast('angular-ui-tree:expand-all');_.each($this.expands,function(expand,key){$this.expands[key]=false});$this.collapsed=0};function toggle(scope,item_id){$this.expands[item_id]=!$this.expands[item_id];scope.toggle()}function addExpand(item_id){if(typeof $this.expands[item_id]=='undefined'){$this.expands[item_id]=true}}$scope.$broadcast('angular-ui-tree:expand-all');function beforeDrop(moveData){return layoutMenuDataService.moveTreeItem({'target_id':moveData.target.item_id,'source_id':moveData.source.item_id,'mode':moveData.mode})}function options(){var options={dragMove:function(event){clearTimeout(timer);timer=setTimeout(function(){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(move_data.target){$this.dragTarget=move_data.target.item_id;if($this.lastHoverExpand!=$this.dragTarget&&$this.expands[$this.dragTarget]!=false){$this.expands[$this.lastHoverExpand]=true;$this.expands[$this.dragTarget]=false;$this.lastHoverExpand=$this.dragTarget}}},500)},dropped:function(event){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(move_data.target){$this.dragTarget=move_data.target.item_id;if($this.lastHoverExpand!=$this.dragTarget&&$this.expands[$this.dragTarget]!=false){$this.expands[$this.lastHoverExpand]=true}}$this.lastHoverExpand=0;$this.dragTarget=0;if(!move_data.mode){return $q.reject()}if(typeof $this.beforeDrop=='function'){return $this.beforeDrop(move_data).then(function(response){if(!response.moved){return $q.reject()}if(parent&&parent.children.length==0){$this.expands[parent.item_id]=true}return true})}return $q.reject()},_getParent:function(dest){return dest.nodesScope.$parent.$parent.item},_getSource:function(source){return source.nodeScope.item},_getPosition:function(dest){return dest.index},_getLastPosition:function(source){return source.index},_getMoveData:function(source,parent,index,last_position){var mode=false,target={},data,prev;if(!parent){target=$this.scheme;prev=target[index-1]}else{prev=parent.children[index-1]}if(index==0&&parent){target=parent;mode='inside'}else if(index==0&&!parent){target={'item_id':null};mode='before'}else{target=prev;mode='after'}data={'mode':mode,'target':target,'source':source};return data}};return options}function contextMenu(item,event){var contextMenu=$('#'+divContextMenu);if(contextMenu.is(':visible')){contextMenu.hide()}S3ContextMenuController.openContextMenu(contextMenu,function(context){var pos=$(event.currentTarget).offset();context.find('.contextMenuItem').data('item',item);context.css({left:pos.left-28,top:pos.top+26})})}function add(event){var data={'name':'','alias':''};if(event){var item=$(event.currentTarget).data('item');data['parent_item']=item}data['ctrl']=$this;return layoutMenuService.add(data)}function edit(event){if(event){var item=$(event.currentTarget).data('item');item['ctrl']=$this;return layoutMenuService.edit(item)}}function remove(event){if(event){var item=$(event.currentTarget).data('item');return layoutMenuService.remove(item.item_id,$this)}}function goToTemplate(alias,event){event.preventDefault();var url=$state.href('template'),settings={};try{settings=JSON.parse(localStorage.getItem("dt_template_editor"))}catch(e){settings={listOpenened:[],lastOpenened:0,themeEditor:'chrome',editorShow:true}}if(settings['listOpenened'].indexOf($this.listAliases[alias].layout_id)==-1){settings['listOpenened'].push($this.listAliases[alias].layout_id)}settings['lastOpenened']=$this.listAliases[alias].layout_id;localStorage.setItem("dt_template_editor",JSON.stringify(settings));window.open(url,'_blank')}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').controller('TreeColumnController',controller);controller.$inject=['folderService'];function controller(folderService){var $this=this;this.folder={};this.folder.add=add;function add(){return folderService.add($this.model.root_folder_id)}}})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup').controller('S3PopupAlertController',controller);controller.$inject=['message','close','s3PopupService'];function controller(message,close,s3PopupService){this.message=message;this.close=s3PopupService.getClose(close)}})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup').controller('S3PopupConfirmController',controller);controller.$inject=['$window','$element','message','close','s3PopupService','warning','$sce','keyCodeService'];function controller($window,$element,message,close,s3PopupService,warning,$sce,keyCodeService){var $this=this,popup=$element.find('#confirm_message').parent(),dt_modal_layer=$(document).find('#dt_modal_layer'),firstTop=0,zIindexL=1000,zIindexP=1001,timer;popup.css('visibility','hidden');this.message=message;this.warning=warning;this.close=_close;this.asHtml=asHtml;this.number=$(document).find('[id^="dtPopupWindow_"]').length;if(dt_modal_layer.css('z-index')=='auto'){zIindexL=1000}else{zIindexL=parseInt(dt_modal_layer.css('z-index'))+2}zIindexP=zIindexL+1;dt_modal_layer.css({'z-index':zIindexL,'display':'block'});this.align=align;function asHtml(html){return $sce.trustAsHtml(html)}function align(){clearTimeout(timer);timer=setTimeout(function(){if(!firstTop){if($window.innerHeight>=popup.height()){firstTop=$(window).scrollTop()+($window.innerHeight-popup.outerHeight())/2}else{firstTop=$(window).scrollTop()+10}}popup.css({top:firstTop,left:($window.innerWidth-popup.outerWidth())/2,visibility:'visible','z-index':zIindexP,position:'absolute',display:'block'})},200)}align();s3PopupService.getClose(close);function _close(data,type){popup.unbind("keydown.s3popup::confirm");if($(document).find('[id="confirm"]').length!=0){s3PopupService.closeLast(data,type)}}angular.element($window).on('keydown.s3popup::confirm',keyDownCallback);function keyDownCallback(event){if(event.keyCode==13){_close(true);event.preventDefault()}}}})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup').controller('S3PopupModalController',controller);controller.$inject=['$scope','$window','$element','$rootScope','template','data','close','s3PopupService'];function controller($scope,$window,$element,$rootScope,template,data,_close,s3PopupService){var $this=this,popup=$element,table=popup.find('.bluepopup-wrapper > table'),dt_modal_layer=$(document).find('#dt_modal_layer'),firstTop=0,newLeft=0,done=false,zIindexL=1000,zIindexP=1001,width="",maxWidth="none",timer,lastPos;popup.css({'visibility':'hidden',position:'absolute'});if(template.match(new RegExp(/[/].*\.html$/g))!=null){this.template=template}else{this.template='/-/cms/v1/dynamic/template/?alias='+template+'&'+$rootScope.ACCESS+(Object.keys($rootScope.storage).length==0?'&global=1':'')}this.data=data;this._close=_close;this.onClose=data.onClose;this.onSave=data.onSave;this.onSaveAndClose=data.onSaveAndClose;this.hide=data.hide;this.done=false;if(this.data.width){width=this.data.width;popup.css({'width':width});table.css({'width':width})}if(this.data.maxWidth){maxWidth=this.data.maxWidth;popup.css({'max-width':maxWidth})}if(this.data.hide){this.hide=this.data.hide}if(this.data.title){this.title=this.data.title}if(this.data.uptitle){this.uptitle=this.data.uptitle}if(this.data.subtitle){this.subtitle=this.data.subtitle}if(this.data.class){this.class=this.data.class}else{this.class='popup'}this.reload_id=1;this.number=$(document).find('[id^="dtPopupWindow_"]').length;if(dt_modal_layer.css('z-index')=='auto'){zIindexL=1000}else{zIindexL=parseInt(dt_modal_layer.css('z-index'))+2}zIindexP=zIindexL+1;dt_modal_layer.css({'z-index':zIindexL,'display':'block'});this.align=align;this.reload=reload;this.expand=expand;this.close=close;this.alignStop=alignStop;this.dragStop=dragStop;data.align=align;$scope.$on('draggable:move',function(){lastPos={top:popup.offset().top,left:popup.offset().left,position:'absolute'}});$scope.$on('popupLoad:done',function(){align()});if(this.data.preLoad){align()}function dragStop(){popup.css(lastPos)}$scope.$on('draggable:end',function(){lastPos={top:popup.offset().top,left:popup.offset().left,position:'absolute'}});function alignStop(){}function align(expand){if(!$this.done||expand){var time=1000;if(expand){time=0}Preloader.show({mini:true});clearTimeout(timer);timer=setTimeout(function(){if($window.innerHeight>=popup.height()){firstTop=$(window).scrollTop()+($window.innerHeight-popup.outerHeight())/2}else{firstTop=$(window).scrollTop()+10}if(popup.outerWidth()<$window.innerWidth){newLeft=($window.innerWidth-popup.outerWidth())/2}else{newLeft=5}popup.css({top:firstTop,left:newLeft,visibility:'visible','z-index':zIindexP});Preloader.hide();$this.done=true},time)}}function reload(){$this.reload_id++;if(typeof $this.onReload=='function'){$this.onReload()}return false}function expand(){if($this.done){var css={},tableCss={};popup.css('visibility','hidden');if($this.expanded){css={width:width,height:"",visibility:'visible','max-width':maxWidth};tableCss={width:width,height:'auto'}}else{css={top:$(window).scrollTop,left:0,width:'100%',visibility:'visible','max-width':'none'};tableCss={width:'100%'};if(popup.height()>($window.innerHeight-20)){css.height=$window.innerHeight-20;tableCss.height=$window.innerHeight-20}}popup.css(css);table.css(tableCss);if($this.expanded){align(true)}$this.expanded=!$this.expanded}}function close(){var result=false;if(typeof $this.onClose=='function'){result=$this.onClose()}s3PopupService.closeLast(result)}s3PopupService.getClose(this._close);angular.element($window).on('keydown.s3popup',keyDownCallback);function keyDownCallback(event){if($(document).find('[id^="ajaxPopupWindow_"]').length==0){if($element.find('.bluepopup-wrapper').parent().get(0)==$(document).find('.bluepopup-wrapper:last').parent().get(0)&&!data.copy){if((event.ctrlKey||event.metaKey)&&(event.keyCode==83&&typeof $this.onSave=='function')){if((typeof $this.hide=='undefined'||(typeof $this.hide!='undefined'&&(typeof $this.hide.save=='undefined'||typeof $this.hide.saveAndClose=='undefined')))){if((typeof $this.hide!='undefined'&&typeof $this.hide.save!='undefined')){$this.onSave().then(function(done){if(typeof done=='undefined'||done){close()}})}else{$this.onSave()}event.preventDefault()}}}}}}})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup').controller('S3PopupModalDtSearchController',controller);controller.$inject=['$scope','$window','$element','$rootScope','template','data','close','s3PopupService'];function controller($scope,$window,$element,$rootScope,template,data,_close,s3PopupService){var $this=this,popup=$element,table=popup.find('.bluepopup-wrapper > table'),dt_modal_layer=$(document).find('#dt_modal_layer'),firstTop=0,newLeft=0,zIindexL=1000,zIindexP=1001,width="",maxWidth="none",timer,lastPos;popup.css({'visibility':'hidden',position:'absolute'});if(template.match(new RegExp(/[/].*\.html$/g))!=null){this.template=template}else{this.template='/-/cms/v1/dynamic/template/?alias='+template+'&'+$rootScope.ACCESS}this.data=data;this._close=_close;this.onClose=data.onClose;this.done=false;this.typeCtrl=this.data.type;this.form=this.data.form;if(this.data.width){width=this.data.width;popup.css({'width':width})}if(this.data.maxWidth){maxWidth=this.data.maxWidth;popup.css({'max-width':maxWidth})}this.reload_id=1;this.number=$(document).find('[id^="dtPopupWindow_"]').length;if(dt_modal_layer.css('z-index')=='auto'){zIindexL=1000}else{zIindexL=parseInt(dt_modal_layer.css('z-index'))+2}zIindexP=zIindexL+1;dt_modal_layer.css({'z-index':zIindexL,'display':'block'});this.align=align;this.reload=reload;this.expand=expand;this.close=close;this.alignStop=alignStop;this.dragStop=dragStop;data.align=align;$scope.$on('draggable:move',function(){lastPos={top:popup.offset().top,left:popup.offset().left,position:'absolute'}});align();function dragStop(){popup.css(lastPos)}$scope.$on('draggable:end',function(){lastPos={top:popup.offset().top,left:popup.offset().left,position:'absolute'}});function alignStop(){}function align(expand){if(!$this.done||expand){var time=1000;if(expand){time=0}Preloader.show({mini:true});clearTimeout(timer);timer=setTimeout(function(){if($window.innerHeight>=popup.height()){firstTop=$(window).scrollTop()+($window.innerHeight-popup.outerHeight())/2}else{firstTop=$(window).scrollTop()+10}newLeft=($window.innerWidth-popup.outerWidth())/2;popup.css({top:firstTop,left:newLeft,visibility:'visible','z-index':zIindexP});Preloader.hide();$this.done=true},time)}}function reload(){}function expand(){}function close(){var result=false;if(typeof $this.onClose=='function'){result=$this.onClose()}s3PopupService.closeLast(result)}s3PopupService.getClose(this._close)}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicGroupList',directive);function directive(){return{'restrict':'E','replace':true,'scope':{'groups':'=','groupType':'@','onLoad':'=','active':'='},'templateUrl':'/my/s3/js/angular/s3/data/dynamic/group/list/s3.dynamic.group.list.html','controller':controller,'controllerAs':'GroupList','bindToController':true}}controller.$inject=['_','dynamicGroupService','dynamicGroupDataService'];function controller(_,dynamicGroupService,dynamicGroupDataService){var $this=this,groupsMoved={};this.active_dt_group_id=$this.active.dt_group_id=-1;this.add=dynamicGroupService.add;this.edit=dynamicGroupService.edit;this.remove=dynamicGroupService.remove;this.positionsChanged=false;this.savePositions=savePositions;this.load=load;this.sortableOptions={stop:function(){positionsCheck($this.groups)},axis:'x'};function load(dt_group_id){if(typeof $this.onLoad=='function'){$this.onLoad(dt_group_id)}$this.active_dt_group_id=$this.active.dt_group_id=dt_group_id}function positionsCheck(groups){groupsMoved={};_.each(groups,function(group,index){if(group.position!=index){groupsMoved[group.dt_group_id]=index}});if(_.size(groupsMoved)>0){$this.positionsChanged=true}else{$this.positionsChanged=false}}function savePositions(){if(_.size(groupsMoved)>0){dynamicGroupDataService.updatePositionGroups(groupsMoved).then(function(response){$this.positionsChanged=false})}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicParamParentOption',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/param/directive/parent.option/s3.dynamic.param.parent.option.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'model':'=','title':'@','multiple':'@','parentParams':'='}}}controller.$inject=['$scope','_','dynamicParamDataService'];function controller($scope,_,dynamicParamDataService){var $this=this;if(!_.isObject(this.model.parent_options)||_.isArray(this.model.parent_options)){this.model.parent_options={}}this.options={};$scope.$watch(function(scope){return scope.Ctrl.model.parent_alias},function(){activate()});function activate(){if(!$this.model.parent_alias){return}dynamicParamDataService.getParamOptions({'param_id':$this.model.parent_alias}).then(function(response){if(_.isObject(response.options)){_.forEach(response.options,function(option){if(!_.isObject($this.model.parent_options[option.option_id])){$this.model.parent_options[option.option_id]={}}if(!_.isObject($this.model.parent_options[option.option_id].options)){$this.model.parent_options[option.option_id].options={}}});$this.options=response.options}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicParamOption',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/param/directive/option/s3.dynamic.param.option.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'model':'=','title':'@'}}}controller.$inject=['_'];function controller(_){var $this=this,i=0;if(!_.isArray(this.model.options)){this.model.options=[]}this.options=this.model.options;this.remove=remove;this.add=add;this.sortableOptions={handle:'> .sort-handler',stop:function(){positionsCheck()},axis:'y'};function add(){$this.options.push({'text':''})}function remove(option){if($this.options[option.position]){$this.options.splice(option.position,1)}}function positionsCheck(){_.forEach($this.options,function(option,index){option['position']=index})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicParamType',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/param/directive/type/s3.dynamic.param.type.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'model':'=','title':'@','multiple':'@'}}}controller.$inject=['_','s3PopupService'];function controller(_,s3PopupService){var $this=this,i=0;this.selector=selector;this.remove=remove;function selector(){if(!_.isObject($this.model.dt_types)){$this.model.dt_types={}}s3PopupService.modal('/my/s3/js/angular/s3/data/dynamic/type/selector/dynamic.type.selector.html',{list:$this.model.dt_types,method:'radio'}).then(function(modal){modal.close.then(function(){console.log($this)})})}function remove(key){delete $this.model.dt_types[key]}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicTypeActionTreeSelector',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/type/edit/action.tree/s3.dynamic.type.action.tree.selector.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'type':'=','trees':'='}}}controller.$inject=['_',"$rootScope"];function controller(_,$rootScope){var $this=this;this.add=add;this.remove=remove;this.toggle=toggle;this.canEditGlobal=canEditGlobal;this.when=['afterObjectAdd','afterObjectEdit'];function add(){if(!_.isObject($this.type.action_trees)||!_.size($this.type.action_trees)){$this.type.action_trees={}}$this.type.action_trees['_'+Date.now()]={}}function remove(k){delete $this.type.action_trees[k]}function toggle(k){if($this.type.action_trees[k].status=='enabled'){$this.type.action_trees[k].status='disabled'}else{$this.type.action_trees[k].status='enabled'}}function canEditGlobal(){if($rootScope.can_edit_global){return true}return false}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicTypeList',directive);function directive(){return{'restrict':'E','replace':true,'scope':{'types':'='},'templateUrl':'/my/s3/js/angular/s3/data/dynamic/type/list/s3.dynamic.type.list.html','controller':controller,'controllerAs':'TypeList','bindToController':true}}controller.$inject=['dynamicTypeService','dynamicObjectService'];function controller(dynamicTypeService,dynamicObjectService){this.edit=dynamicTypeService.edit;this.remove=dynamicTypeService.remove;this.objectEdit=objectEdit;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};function objectEdit(type){var list={};list[type.single_object_id]={mask:type.name};dynamicObjectService.edit({object_id:type.single_object_id,dt_type_id:type.dt_type_id,list:list})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectErrors',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/directives/object.errors/s3.dynamic.object.errors.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'errors':'=','controls':'=','groups':'='}}}controller.$inject=['$scope'];function controller($scope){var $this=this;this.errorsArray=[];this.goTo=goTo;$scope.$watch(function(){return $this.errors},function(){activate()});function activate(){$this.errorsArray=[];parseErrors()}function parseErrors(controls,group_id){if(_.size($this.errors)>0){if(typeof controls=='undefined'){controls=$this.controls}_.each(controls,function(group_param){_.each(group_param,function(param){if(typeof param['injected_params']!='undefined'){parseErrors(param['injected_params'],param.dt_group_id)}_.each($this.errors,function(error,alias){if(alias==param.alias){$this.errorsArray.push({'name':param.name,'error':error.error_message,'group_id':(group_id?group_id:param.dt_group_id),'alias':alias})}})})})}}function goTo(error){$scope.$emit('s3DtGoToPaneAndField',error)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectSelectorForParam',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/directives/object.selector.for.param/s3.dynamic.object.selector.for.param.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'model':'=','param':'=','key':'@','hideParamTitle':'@'}}}controller.$inject=['_','dynamicObjectService'];function controller(_,dynamicObjectService){var $this=this;if(!$this.key){$this.key='objects'}if(_.isEmpty($this.model[$this.key])){$this.model[$this.key]={}}else{_.forEach($this.model[$this.key],function(objects){_.forEach(objects,function(object,key){objects['_'+object.object_id]=object;delete objects[key]})})}$this.objects=$this.model[$this.key];$this.selector=selector;$this.remove=remove;function selector(linked_dt_type_id){if(!_.isObject($this.objects[linked_dt_type_id])){$this.objects[linked_dt_type_id]={}}dynamicObjectService.selector({'objects':$this.objects[linked_dt_type_id],'param_id':$this.param.param_id,'linked_dt_type_id':linked_dt_type_id,}).then(function(modal){modal.close.then(function(response){})})}function remove(linked_dt_type_id,key){delete $this.objects[linked_dt_type_id][key]}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectDynamicObject',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/dynamic.object/s3.dynamic.object.dynamic.object.html','controller':controller,'controllerAs':'Object','scope':{'object':'=','param':'=','params':'=','flattenParams':'='},'bindToController':true}}controller.$inject=['$scope','$timeout','dynamicObjectService','eventManagerService'];function controller($scope,$timeout,dynamicObjectService,eventManagerService){var $this=this;this.alias=this.param.alias;if(!_.isObject(this.object.params[this.alias])){this.object.params[this.alias]={}}this.objects=this.object.params[this.alias];this.selector=selector;this.remove=remove;this.addObject=addObject;this.editObject=editObject;this.checkFastAddObject=checkFastAddObject;this.parentParam=false;this.parentObjectIds=[];this.sortableOptions={handle:'.sort-handler',stop:function(){positionsCheck()},axis:'y'};activate();function getParentParam(){$this.parentParam=false;if(!$this.param.parent_alias){return $this.parentParam}if($this.flattenParams){$this.parentParam=_.find($this.params,function(p){return p.alias==$this.param.parent_alias})}else{_.forEach($this.params,function(group){$this.parentParam=_.find(group,function(p){if(p){return p.alias==$this.param.parent_alias}else{return false}})})}return $this.parentParam}function activate(){getParentParam();if($this.parentParam){if($this.parentParam.param_type_id==15){if(!_.isObject($this.parentParam.map)){$this.parentParam.map={}}if(!_.isObject($this.parentParam.map.object_params)){$this.parentParam.map.object_params={}}$this.parentParam.map.object_params[$this.alias]=$this.param;$this.hidden=true}}$timeout(trigger)}function selector(linked_dt_type_id,type){if(!_.isObject($this.objects[linked_dt_type_id])){$this.objects[linked_dt_type_id]=[]}if($this.param.parent_alias){$this.parentObjectIds=[];_.forEach($this.object.params[$this.param.parent_alias],function(objects){_.forEach(objects,function(object){$this.parentObjectIds.push(object.object_id)})})}dynamicObjectService.selector({'objects':$this.objects[linked_dt_type_id],'alias':$this.param.alias,'linked_dt_type_id':linked_dt_type_id,'dt_type_id':$this.object.dt_type_id,'parent_object_ids':$this.parentObjectIds.join(','),'parent_alias':$this.param.parent_alias,'multiple':$this.param.multiple,'max_values':$this.param.max_values},type).then(function(modal){modal.close.then(function(response){trigger()})})}function trigger(objects){eventManagerService.trigger('objectEdit.objectSelectorClosed'+$this.param.alias,{'objects':objects||$this.objects})}function remove(linked_dt_type_id,key){$this.objects[linked_dt_type_id].splice(key,1);if($this.objects[linked_dt_type_id].length>0){positionsCheck(linked_dt_type_id)}else if($this.objects[linked_dt_type_id].length==0){delete $this.objects[linked_dt_type_id]}trigger()}function positionsCheck(linked_dt_type_id){if(linked_dt_type_id){_.forEach($this.objects[linked_dt_type_id],function(object,index){object['position']=index})}else{_.forEach($this.objects,function(param){_.forEach(param,function(object,index){object['position']=index})})}}function addObject(linked_dt_type_id){if(typeof $this.objects[linked_dt_type_id]=='undefined'){$this.objects[linked_dt_type_id]=[]}dynamicObjectService.add({dt_type_id:linked_dt_type_id,selector_dt_type_id:$this.object.dt_type_id,selector_alias:$this.param.alias,list:$this.objects[linked_dt_type_id]})}function checkFastAddObject(type){if((($this.param.multiple==1&&(_.size($this.objects[type.dt_type_id])<=$this.param.max&&$this.param.max>0||$this.param.max==0))||$this.param.multiple==0&&_.size($this.objects[type.dt_type_id])==0)&&type.type_kind=='regular'){return true}else{return false}}function editObject(event,object,linked_dt_type_id,dt_type_id,alias){event.preventDefault();dynamicObjectService.edit({dt_type_id:linked_dt_type_id,object_id:object.object_id,selector_dt_type_id:dt_type_id,selector_alias:alias,list:$this.objects[linked_dt_type_id]}).then(function(modal){modal.close.then(function(response){trigger()})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectFloatInterval',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/float.interval/s3.dynamic.object.float.interval.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['$scope','$filter','$element','$timeout','_'];function controller($scope,$filter,$element,$timeout,_){var $this=this,alias=this.param.alias,newKey=0;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.mode.push({});$this.size=_.size($this.model)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectDynamicObjectEmbedded',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/dynamic.object.embedded/s3.dynamic.object.dynamic.object.embedded.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'=','params':'='},'bindToController':true}}controller.$inject=['$scope','dynamicObjectService','eventManagerService'];function controller($scope,dynamicObjectService,eventManagerService){var $this=this,date=new Date(),multiple=this.param.multiple,max_values=this.param.max_values,update_event=false;if(max_values==0){max_values=100}if(multiple==0){multiple=1;max_values=1}this.selectDisabled=false;this.alias=this.param.alias;this.addObject=addObject;this.removeObject=removeObject;if(!_.isObject(this.object.params[this.alias])){this.object.params[this.alias]={}}this.objects=this.object.params[this.alias];_.forEach($this.param.types,function(type){if(_.isArray(type.groups)){var groups={};_.forEach(type.groups,function(group){groups['_'+group.dt_group_id]=group});type.groups=groups}});_.forEach($this.objects,function(objects,dt_type_id){if(_.isArray(objects.groups)){var groups={};_.forEach(objects.groups,function(group){groups['_'+group.dt_group_id]=group});objects.groups=groups}if(typeof $this.object.object_id=='undefined'){var i=0;_.forEach(objects,function(object,object_id){delete object['object_id'];objects['_'+i]=object;delete objects[object_id];i++})}positionsCheck(dt_type_id);eventBind(dt_type_id);multipleCheck(dt_type_id)});function addObject(dt_type_id){if(!_.isObject($this.objects[dt_type_id])){$this.objects[dt_type_id]={};eventBind(dt_type_id)}$this.objects[dt_type_id]['_'+Date.now()]={'object_id':0,'dt_type_id':dt_type_id,'params':{},'position':_.size($this.objects[dt_type_id])};dynamicObjectService.parseToEditParams({controls:$this.param.types[dt_type_id].controls,object:$this.objects[dt_type_id]['_'+Date.now()],$this:$this});multipleCheck(dt_type_id)}function removeObject(dt_type_id,key){delete $this.objects[dt_type_id][key];if(_.size($this.objects[dt_type_id])>1){positionsCheck(dt_type_id)}else if(_.size($this.objects[dt_type_id])==0){delete $this.objects[dt_type_id]}multipleCheck(dt_type_id)}function positionsCheck(dt_type_id){var i=0;_.each($this.objects[dt_type_id],function(object){object.position=i;i++})}function multipleCheck(dt_type_id){if($this.objects[dt_type_id]&&multiple>0&&Object.keys($this.objects[dt_type_id]).length>=max_values){$this.selectDisabled=true}else{$this.selectDisabled=false}}function eventBind(dt_type_id){if(!update_event){eventManagerService.bind('embeded.update'+$this.object.dt_type_id+$this.object.object_id+dt_type_id,function(event,data){var object_ids=[];_.forEach($this.objects[dt_type_id],function(object,object_id){if(object.object_id==0){delete $this.objects[dt_type_id][object_id]}else{delete $this.objects[dt_type_id][object_id]['errors'];object_ids.push(object.object_id)}});_.forEach(data,function(object,object_id){if(object_ids.indexOf(object.object_id)==-1){$this.objects[dt_type_id]['_'+object_id]=object}});update_event=true})}eventManagerService.bind('embeded.update.errors'+$this.object.dt_type_id+$this.object.object_id,function(event,errors){if(typeof errors[$this.param.alias]!='undefined'&&typeof errors[$this.param.alias]['error_include_array']!='undefined'){var errors_keys=Object.keys(errors[$this.param.alias]['error_include_array']);_.forEach(errors[$this.param.alias]['error_include_array'],function(error_obj,k){if(typeof error_obj['errors']!='undefined'){$this.objects[dt_type_id][k]['errors']=error_obj['errors']}});_.forEach($this.objects[dt_type_id],function(object,object_id){if(errors_keys.indexOf(object_id)==-1){delete $this.objects[dt_type_id][object_id]['errors']}})}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectDynamicObjectInjector',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/dynamic.object.injector/s3.dynamic.object.dynamic.object.injector.html','controller':controller,'controllerAs':'Object','scope':{'object':'=','param':'=','params':'=','flattenParams':'@'},'bindToController':true}}controller.$inject=['_','dynamicObjectService','dynamicTypeParamDataService'];function controller(_,dynamicObjectService,dynamicTypeParamDataService){var $this=this;this.alias=this.param.alias;this.objects=this.object.params[this.alias];this.selector=selector;this.remove=remove;this.parentParam=false;this.parentObjectIds=[];if(!_.isObject(this.param.injected_params)){this.param.injected_params={}}this.injected_params=this.param.injected_params;this.sortableOptions={handle:'.sort-handler',stop:function(){positionsCheck()},axis:'y'};activate();function getParentParam(){$this.parentParam=false;if(!$this.param.parent_alias){return $this.parentParam}if($this.flattenParams){$this.parentParam=_.find($this.params,function(p){return p.alias==$this.param.parent_alias})}else{_.forEach($this.params,function(group){$this.parentParam=_.find(group,function(p){return p.alias==$this.param.parent_alias})})}return $this.parentParam}function activate(){getParentParam();if($this.parentParam){if($this.parentParam.param_type_id==15){if(!_.isObject($this.parentParam.map)){$this.parentParam.map={}}if(!_.isObject($this.parentParam.map.object_params)){$this.parentParam.map.object_params={}}$this.parentParam.map.object_params[$this.alias]=$this.param;$this.hidden=true}}}function selector(linked_dt_type_id,type){if(!_.isObject($this.objects[linked_dt_type_id])){$this.objects[linked_dt_type_id]=[]}if($this.param.parent_alias){$this.parentObjectIds=[];_.forEach($this.object.params[$this.param.parent_alias],function(objects){_.forEach(objects,function(object){$this.parentObjectIds.push(object.object_id)})})}dynamicObjectService.selector({'objects':$this.objects[linked_dt_type_id],'alias':$this.param.alias,'linked_dt_type_id':linked_dt_type_id,'dt_type_id':$this.param.dt_type_id,'parent_object_ids':$this.parentObjectIds.join(','),'multiple':$this.param.multiple,'max_values':$this.param.max_values},type).then(function(modal){modal.close.then(function(){var object_ids=[];_.forEach($this.objects,function(type){_.forEach(type,function(object){object_ids.push(object.object_id)})});dynamicTypeParamDataService.getInjectedParams({object_ids:object_ids}).then(function(response){if(_.isObject(response.params)){_.replaceObject($this.injected_params,response.params)}})})})}function remove(linked_dt_type_id,key){var object_id=$this.objects[linked_dt_type_id][key]['object_id'];_.forEach($this.injected_params[object_id],function(param){delete $this.object.params[param.alias]});delete $this.injected_params[object_id];$this.objects[linked_dt_type_id].splice(key,1);if($this.objects[linked_dt_type_id].length>1){positionsCheck(linked_dt_type_id)}else if(_.size($this.objects[linked_dt_type_id])==0){delete $this.objects[linked_dt_type_id]}}function positionsCheck(linked_dt_type_id){if(linked_dt_type_id){_.forEach($this.objects[linked_dt_type_id],function(object,index){object['position']=index})}else{_.forEach($this.objects,function(param){_.forEach(param,function(object,index){object['position']=index})})}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectSelectAdd',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/select.add/s3.dynamic.object.select.add.html','controller':controller,'controllerAs':'Select','scope':{'object':'=','param':'=','params':'='},'bindToController':true}}controller.$inject=['$element','$rootScope','$scope','_','dynamicParamService'];function controller($element,$rootScope,$scope,_,dynamicParamService){var $this=this,parent_alias=this.param.parent_alias,alias=this.param.alias,param_id=this.param.param_id,parentParam=false,objectParams,objectParam;this.option_id=0;this.parent_option_id=0;this.options=this.param.options.sort(function(a,b){return a.position-b.position});this.change=change;this.edit=dynamicParamService.edit;if(_.size(this.object.params[alias])==0){this.object.params[alias]={}}objectParams=this.object.params;objectParam=objectParams[this.param.alias];if(_.size(objectParam)){_.forEach(objectParam,function(option,key){objectParam['_'+option.option_id]=option;delete objectParam[key]});var key=_.keys(objectParams[alias])[0];this.option_id=objectParam[key].option_id;this.param.selected_option_id=this.option_id}else{objectParams[this.param.alias]={}}if(parent_alias>0){_.forEach($this.params,function(group){if(parentParam){return}var index=_.findIndex(group,{alias:parent_alias});if(index>-1){parentParam=group[index]}});$this.parent_option_id=parentParam.selected_option_id;$scope.$watch(function(scope){return parentParam.selected_option_id},function(){$this.parent_option_id=parentParam.selected_option_id})}function change(){var key='_0';if(_.size(objectParams[alias])>0){key=_.keys(objectParams[alias])[0]}$this.param.selected_option_id=$this.option_id;objectParams[alias][key]=_.find($this.options,function(o){return o.option_id==$this.option_id})}$rootScope.$on('option-'+param_id+':reload',function(event,options){$this.options.length=0;$this.options=options;setTimeout(function(){$element.find('#'+$this.param.alias+'-'+param_id).trigger('liszt:updated')},0)})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMultiselectAdd',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/multiselect.add/s3.dynamic.object.multiselect.add.html','controller':controller,'controllerAs':'Select','scope':{'object':'=','param':'=','params':'='},'bindToController':true}}controller.$inject=['$element','$rootScope','$scope','_','dynamicParamService'];function controller($element,$rootScope,$scope,_,dynamicParamService){var $this=this,parent_alias=this.param.parent_alias,alias=this.param.alias,param_id=this.param.param_id,parentParam=false,objectParams,objectParam,checked={};this.option_ids=[];this.parent_option_id=0;this.options=this.param.options.sort(function(a,b){return a.position-b.position});this.change=change;this.edit=dynamicParamService.edit;if(_.size(this.object.params[alias])==0){this.object.params[alias]={}}objectParams=this.object.params;objectParam=objectParams[this.param.alias];if(_.size(objectParam)){_.forEach(objectParam,function(option,key){objectParam['_'+option.option_id]=option;$this.option_ids.push(option.option_id);delete objectParam[key]});var key=_.keys(objectParams[alias])[0];this.option_id=objectParam[key].option_id;this.param.selected_option_id=this.option_id}if(_.size(this.model)){_.forEach(this.model,function(option,key){checked[option.option_id]=true})}function change(){checked={};_.forEach($this.option_ids,function(option_id){checked[option_id]=true;if(typeof objectParam['_'+option_id]=='undefined'){objectParam['_'+option_id]=_.find($this.options,function(o){return o.option_id==option_id})}});_.forEach(objectParam,function(option){if(!checked[option.option_id]){delete objectParam['_'+option.option_id]}})}$rootScope.$on('option-'+param_id+':reload',function(event,options){$this.options=options;setTimeout(function(){$element.find('#'+$this.param.alias+'-'+param_id).trigger('liszt:updated')},0)})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectFile',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/file/s3.dynamic.object.file.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'='},'bindToController':true}}controller.$inject=['$scope','_'];function controller($scope,_){var $this=this,alias=this.param.alias;$this.files=$this.object.params[alias]}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectCheckboxGroup',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/checkbox.group/s3.dynamic.object.checkbox.group.html','controller':controller,'controllerAs':'CheckboxGroup','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias,i=0;this.formName=this.object.object_id+alias+Date.now();if(_.isArray(this.object.params[alias])||!_.isObject(this.object.params[alias])){this.object.params[alias]={}}this.model=this.object.params[alias];this.change=change;this.checked={};if(_.size(this.model)){_.forEach(this.model,function(option,key){$this.checked[option.option_id]=true;$this.model['_'+key]=option;delete $this.model[key]});i=_.size(this.model)}function change(option){if($this.checked[option.option_id]){$this.model['_'+option.option_id]=option;i++}else{var k=_.findKey($this.model,function(o){return o.option_id==option.option_id});delete $this.model[k]}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectRadioGroup',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/radio.group/s3.dynamic.object.radio.group.html','controller':controller,'controllerAs':'RadioGroup','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias,newKey;this.formName=this.object.object_id+alias+Date.now();if(_.isArray(this.object.params[alias])||!_.isObject(this.object.params[alias])){this.object.params[alias]={}}this.model=this.object.params[alias];this.change=change;if(_.size(this.model)){_.forEach($this.model,function(value,key){$this.model['_'+key]=value;delete $this.model[key]});var key=_.keys(this.model)[0];this.selected_option_id=this.model[key].option_id;this.param.selected_option_id=this.model[key].option_id}newKey=_.size(this.model);if(newKey==0){add()}function add(){$this.model['_'+newKey]={};newKey++}function change(key,option){$this.model[key]=option;$this.param.selected_option_id=option.option_id}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectSmt',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/smt/s3.dynamic.object.smt.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['$scope','$sce','s3PopupService'];function controller($scope,$sce,s3PopupService){var $this=this,alias=this.param.alias,winOpened=false;if(!Array.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);this.image={};this.asHtml=asHtml;this.remove=remove;this.selector=selector;if(this.size==0){add()}else{if(typeof $this.model[0]['image']!='undefined'){$this.image=$this.model[0]['image'];$this.model[0]['image']=$this.image.image_id}}function add(){$this.model.push({"title":'',"description":'',"image":'',"type":'website'})}function remove(){$this.model[0]['image']=0;$this.image={}}function selector(){var imageInputs,selectedIds=[];if(_.size($this.image)){selectedIds.push($this.image.image_id)}openAjaxForm('/-/cms/v1/image/?popup=1&selector=1&multiple=0&'+ACCESS+'&type_group_id=0&rnd=592&xhr=1&dynamic=1&selected_ids='+selectedIds.join(),function(){},function(){winOpened=false;s3PopupService.closeLast('mouse')},function(){},{},function(content){imageInputs='.image-element .image';$(imageInputs).prop('onclick',null);_.forEach($this.model,function(image){$('#image'+image.image_id+' .image').addClass('dynamic-selected-image')});$(imageInputs).click(function(){var element=$(this),image={'image_id':element.data('image_id'),'image_thumb':element.data('thumb')},is_checked=element.hasClass('dynamic-selected-image');if(is_checked){element.removeClass('dynamic-selected-image');util.msg(s3.loc('JS_CANCELLED'));remove(image)}else{element.addClass('dynamic-selected-image');util.msg(s3.loc('JS_ADDED'));select(image)}$scope.$apply()});if(!winOpened){s3PopupService.setClose();winOpened=true}})}function select(image){$this.image=image;$this.model[0]['image']=image.image_id;popupController.closeLastPopup()}function asHtml(html){return $sce.trustAsHtml(html)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicTransactionList',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/transaction.list/s3.dynamic.transaction.list.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['dynamicParamDataService'];function controller(dynamicParamDataService){var $this=this,alias=this.param.alias,required=this.param.required,newKey=0;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.getInfo=getInfo;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);this.allInfo={};function getInfo(order_id){dynamicParamDataService.getInfoTransaction({order_id:order_id}).then(function(response){$this.allInfo[order_id]=response})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectDatetime',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/datetime/s3.dynamic.object.datetime.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['$timeout','$element','_'];function controller($timeout,$element,_){var $this=this,alias=this.param.alias,newKey=0,l=$.datepicker.regional[i18n_map[S3_LANG_CODE]];if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);this.placeholder="ДД.ММ.ГГГГ ЧЧ:ММ";if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model.push('');$this.size=_.size($this.model)}$timeout(function(){var input=$element.find('input.s3-input-text');if(input.length){input.datetimepicker({dateFormat:'dd.mm.yy',timeFormat:'HH:mm',timeInput:true})}})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMapPolygon',directive);function directive(){return{'restrict':'E','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'=','params':'='},'bindToController':true}}controller.$inject=['_','s3PopupService'];function controller(_,s3PopupService){var $this=this,alias=this.param.alias,parent_alias=this.param.parent_alias;if(!parent_alias){s3PopupService.alert('Параметр "'+this.param.name+'" требует указания родительской карты');return}this.parentParam=this.params[parent_alias];if(!_.isObject(this.object.params[alias])){this.object.params[alias]={}}this.param.listKey='polygons';this.param.controls=['polygon'];this.param.polygons=this.object.params[alias];_.forEach(this.params,function(group){if(_.size($this.parentParam)){return}$this.parentParam=_.find(group,function(o){if(o){return o.alias==parent_alias}else{return false}})});prepareParentObject();function prepareParentObject(){if(!_.isObject($this.parentParam.map)){$this.parentParam.map={}}if(!_.isObject($this.parentParam.map.params)){$this.parentParam.map.params={}}if(!_.isObject($this.parentParam.map.params[alias])){$this.parentParam.map.params[alias]=$this.param}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectUniqueText',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/text/s3.dynamic.object.text.html','controller':controller,'controllerAs':'Text','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_','$scope','dynamicObjectDataService','eventManagerService'];function controller(_,$scope,dynamicObjectDataService,eventManagerService){var $this=this,alias=this.param.alias,required=this.param.required,newKey=0,data={object:this.object,unique_param_field:"",param_id:this.param.param_id};if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);var historyVal;$scope.$watch(function(){return $this.model[0]},_.debounce(function(value){if(typeof historyVal==='undefined'){historyVal=value}else if(historyVal!==value){data.unique_param_field=value;dynamicObjectDataService.checkUnique(data).then(function(response){if(response.errors&&response.errors){$this.object.errors=response.errors;updateErrors($this.object.errors);return false}else{$this.object.errors={};updateErrors($this.object.errors);return false}})}},1000));if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model.push('');$this.size=_.size($this.model);newKey++}function updateErrors(errors){eventManagerService.trigger('embeded.update.errors'+$this.dt_type_id+$this.object_id,errors)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectDateInterval',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/date.interval/s3.dynamic.object.date.interval.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['$scope','$filter','$element','$timeout','_'];function controller($scope,$filter,$element,$timeout,_){var $this=this,alias=this.param.alias,newKey=0,l=$.datepicker.regional[i18n_map[S3_LANG_CODE]];if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);if(this.size==0){add()}else{}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model.push({});$this.size=_.size($this.model)}$timeout(function(){$element.find('input.from').datepicker({'dateFormat':'dd.mm.yy',timeFormat:'HH:mm:ss','onSelect':function(value,object){if(object.input){$timeout(function(){var key=$(object.input).data('key');$(object.input).val(value+' 00:00:00');$this.model[key].from=value+' 00:00:00'})}}});$element.find('input.to').datepicker({'dateFormat':'dd.mm.yy',timeFormat:'HH:mm:ss','onSelect':function(value,object){if(object.input){$timeout(function(){var key=$(object.input).data('key');$(object.input).val(value+' 23:59:59');$this.model[key].to=value+' 23:59:59'})}}})})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMapGoogle',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/map.google/s3.dynamic.object.map.google.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'=','params':'='},'bindToController':true}}function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectShop2SearchedProducts',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/shop2.searched.products/s3.dynamic.object.shop2.searched.product.html','controller':controller,'controllerAs':'Text','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_','$scope','$element'];function controller(_,$scope,$element){var $this=this,alias=this.param.alias,timer;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=false;this.size=_.size(this.model);$this.fake=[{}];this.remove=remove;this.add=add;$scope.aceLoaded=function(editor){$scope.$on('tab.selected:'+$this.param.dt_group_id,function(){timer=setTimeout(function(){editor.renderer.onResize(true,'undefined',$element.find('div[id^="ace_editor_wrapper"]').clientWidth,$element.find('div[id^="ace_editor_wrapper"]').clientHeight)},0)});clearTimeout(timer)};if(this.size==0){add()}else if(this.param.cms_readonly==1){_.each($this.model,function(value,i){try{$this.fake[i]=JSON.parse(value)}catch(err){console.log(err)}})}function remove(key){$this.model.splice(key,1)}function add(){$this.model.push('')}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectDate',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/date/s3.dynamic.object.date.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['$timeout','$element','_'];function controller($timeout,$element,_){var $this=this,alias=this.param.alias,newKey=0,l=$.datepicker.regional[i18n_map[S3_LANG_CODE]];if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);this.placeholder="ДД.ММ.ГГГГ";if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model.push('');$this.size=_.size($this.model)}$timeout(function(){$element.find('input.s3-input-text').datepicker({'dateFormat':'dd.mm.yy'})})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMapCustomImage',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/map.custom.image/s3.dynamic.object.map.custom.image.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'=','params':'='},'bindToController':true}}function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectCheckbox',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/checkbox/s3.dynamic.object.checkbox.html','controller':controller,'controllerAs':'Checkbox','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias,newKey;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];newKey=_.size(this.model);if(newKey==0){add()}function add(){$this.model.push(0);newKey++}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMapDynamicObjectSelector',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/map.object.selector/s3.dynamic.object.map.dynamic.object.selector.html','controller':controller,'controllerAs':'Object','scope':{'object':'=','param':'=','params':'=','radio':'@','radioChangeModel':'=','radioChangeCallback':'='},'bindToController':true}}controller.$inject=['_','dynamicObjectService'];function controller(_,dynamicObjectService){var $this=this;this.alias=this.param.alias;this.objects=this.object.params[this.alias];this.selector=selector;this.remove=remove;this.parentParam=false;this.parentObjectIds=[];activate();function getParentParam(){$this.parentParam=false;if($this.param.parent_alias){_.forEach($this.params,function(group){$this.parentParam=_.find(group,function(p){return p.alias==$this.param.parent_alias})})}return $this.parentParam}function activate(){getParentParam();if(_.size($this.objects)){_.forEach($this.objects,function(objects){if(_.size(objects)){_.forEach(objects,function(object,key){if(key[0]=='_'){return}objects['_'+object.object_id]=object;delete objects[key]})}})}}function selector(linked_dt_type_id){if(!_.isObject($this.objects[linked_dt_type_id])){$this.objects[linked_dt_type_id]={}}if($this.param.parent_alias){$this.parentObjectIds=[];_.forEach($this.object.params[$this.param.parent_alias],function(objects){_.forEach(objects,function(object){$this.parentObjectIds.push(object.object_id)})})}dynamicObjectService.selector({'objects':$this.objects[linked_dt_type_id],'alias':$this.param.alias,'linked_dt_type_id':linked_dt_type_id,'dt_type_id':0,'raw':true,'parent_object_ids':$this.parentObjectIds.join(',')}).then(function(modal){modal.close.then(function(response){})})}function remove(linked_dt_type_id,key){delete $this.objects[linked_dt_type_id][key]}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectIntInterval',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/int.interval/s3.dynamic.object.int.interval.html','controller':controller,'controllerAs':'Int','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['$scope','$filter','$element','$timeout','_'];function controller($scope,$filter,$element,$timeout,_){var $this=this,alias=this.param.alias,newKey=0;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model.push({});$this.size=_.size($this.model)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectHtml',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/html/s3.dynamic.object.html.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=[];function controller(){var $this=this,alias=this.param.alias,newKey;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=false;this.remove=remove;this.add=add;newKey=_.size(this.model);if(newKey==0){add()}function remove(key){$this.model.splice(key,1)}function add(){$this.model.push('')}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectUser',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/user/s3.dynamic.object.user.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'=','params':'='},'bindToController':true}}controller.$inject=[];function controller(){var $this=this,alias=this.param.alias;$this.users=$this.object.params[alias]}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectShop2Vendor',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/shop2.vendor/s3.dynamic.object.shop2.vendor.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'='},'bindToController':true}}controller.$inject=['$scope','_'];function controller($scope,_){var $this=this,alias=this.param.alias;$this.vendors=$this.object.params[alias]}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectImage',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/image/s3.dynamic.object.image.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'='},'bindToController':true}}controller.$inject=['$scope','_'];function controller($scope,_){var $this=this,alias=this.param.alias;$this.images=$this.object.params[alias]}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectTime',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/time/s3.dynamic.object.time.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias,newKey=0;$this.hours=['00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23'];$this.minutes=['00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59'];if(_.isArray(this.object.params[alias])||!_.isObject(this.object.params[alias])){this.object.params[alias]={}}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);if(this.size==0){add()}function remove(key){delete $this.model[key];$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model['_'+newKey]={'h':$this.hours[0],'m':$this.minutes[0]};$this.size=_.size($this.model);newKey++}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectShop2Product',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/shop2.product/s3.dynamic.object.shop2.product.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'='},'bindToController':true}}controller.$inject=['$scope','_'];function controller($scope,_){var $this=this,alias=this.param.alias;$this.products=$this.object.params[alias]}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectEdit',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/edit/s3.dynamic.object.edit.html?ver='+window.STATIC_TS,'controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'object':'=','param':'=','controls':'=','flattenParams':'@'}}}controller.$inject=['dynamicObjectService'];function controller(dynamicObjectService){var $this=this;if($this.param&&$this.param.inject_object_id>0){dynamicObjectService.parseToEditParam($this.controls,$this.object,{},$this.param)}this.prepareMetaInfo=prepareMetaInfo;if(Array.isArray($this.object.params)){$this.object.params={}}function prepareMetaInfo(){}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectInt',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/int/s3.dynamic.object.int.html','controller':controller,'controllerAs':'Int','scope':{'object':'=','param':'='},'bindToController':true}}function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMap',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/map/s3.dynamic.object.map.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','params':'=','object':'=','tile':'@','width':'@','height':'@'},'bindToController':true}}controller.$inject=['$timeout','$rootScope','$scope','$element','$http','leafletData','dynamicTypeParamDataService','eventManagerService'];function controller($timeout,$rootScope,$scope,$element,$http,leafletData,dynamicTypeParamDataService,eventManagerService){var $this=this,parent_alias=$this.param.parent_alias,parentParam=false,map,_draw={'control':false,'items':new L.FeatureGroup()},alias=this.param.alias,objectParam=this.object.params[alias],leaflet_ids={},_cache={},map_state={},defaultImage={filepath:'/my/s3/images/nofoto.gif',width:75,height:54},timer;this.geoFindResults=[];this.id='map-'+this.param.alias+'-'+this.object.object_id||this.object.dt_type_id;this.geoFind=geoFind;this.selectGeoObject=selectGeoObject;this.fullScreen=fullScreen;$this.param._Ctrl=$this;_cache.types={};_cache.objects={};$this.active_id=-1;if(!_.isObject(this.object.params[alias])){objectParam=this.object.params[alias]={}}if(_.isArray(this.object.params[alias]['map'])){objectParam=this.object.params[alias]={'map':{}}}if(parent_alias){_.forEach($this.params,function(group){_.forEach(group,function(param){if(param&&param.alias==parent_alias){parentParam=param}})});if(_.isObject(parentParam)){switch(parseInt(parentParam.param_type_id)){case 12:if($scope.$parent.Ctrl.object&&$scope.$parent.Ctrl.object.params[parentParam.alias]){getImageForCustomMap({'objects':$scope.$parent.Ctrl.object.params[parentParam.alias]})}eventManagerService.bind('objectEdit.objectSelectorClosed'+parentParam.alias,function(event,data){getImageForCustomMap(data)});break;case 5:getImageInCurrentObject(parent_alias);eventManagerService.bind('objectEdit.imageSelectorClosed'+parent_alias,function(){getImageInCurrentObject(parent_alias)});break}}}function getImageInCurrentObject(parent_alias){if($this.object['params'][parent_alias]){var image;if(typeof $this.object['params'][parent_alias]['image_id']=='undefined'){image=$this.object['params'][parent_alias][0]}else{image=$this.object['params'][parent_alias]}if(_.isObject(image)){$this.param.map_image=image;if(!$.isEmptyObject(map)){setImage(image)}}else{setImage()}}}if(!_.isObject(objectParam.map)){objectParam.map={}}if(!_.isObject($this.param.map)){$this.param.map={}}if(!_.isObject($this.param.map.params)){$this.param.map.params={}}this._draw=_draw;this.changeParam=changeParam;this.changeObject=changeObject;this.layers={baselayers:getBaseLayers($this.tile)};this.defaults=getDefaults();activate();function getImageForCustomMap(data){if($this.param.control_id==26&&$this.param.map_image_alias){var dt_type_ids,object_ids,object,image;if(!_.isObject(data)){setImage();return}if(!_.isObject(data.objects)){setImage();return}dt_type_ids=_.keys(data.objects);if(!dt_type_ids.length||!_.isObject(data.objects[dt_type_ids[0]])){setImage();return}object_ids=_.keys(data.objects[dt_type_ids[0]]);if(!object_ids.length||!_.isObject(data.objects[dt_type_ids[0]][object_ids[0]])){setImage();return}object=data.objects[dt_type_ids[0]][object_ids[0]];if(_.isArray(object[$this.param.map_image_alias])&&!object[$this.param.map_image_alias].length||typeof object[$this.param.map_image_alias]=='undefined'){setImage();return}if(typeof object[$this.param.map_image_alias]['image_id']=='undefined'){image=object[$this.param.map_image_alias][0]}else{image=object[$this.param.map_image_alias]}if(_.isObject(image)){$this.param.map_image=image;setImage(image)}else{setImage()}}}function changeDrawControlByParamId(alias){var param=$this.param.map.params[alias],controls=[];if(param&&_.isArray(param.controls)){controls=param.controls}return changeDrawControl(controls)}function changeDrawControl(controls){var _controls={circle:false,polyline:false,polygon:false,rectangle:false,marker:false,circlemarker:false};_.forEach(controls,function(control){delete _controls[control]});if(_draw.control){map.removeControl(_draw.control);_draw.control=false}if(!_.size(controls)){return}_draw.control=new L.Control.Draw({edit:{featureGroup:_draw.items},draw:_controls});map.addControl(_draw.control)}function clearObject(object){_.forEach(_.keys(object),function(key){delete object[key]})}function clearLayersOnMap(){_draw.items.clearLayers()}function getNewKey(key){return'_'+key}function drawLayersByParam(param,clearLayers){if(clearLayers){clearLayersOnMap()}var keys_for_delete=[];_.forEach(param[param.listKey],function(geoJsonObject,key){var l=drawLayerByGeo(geoJsonObject),n_key;leaflet_ids[l._leaflet_id]=param.alias;n_key=getNewKey(l._leaflet_id);if(n_key!=key){param[param.listKey][n_key]=geoJsonObject;keys_for_delete.push(key)}});if(_.size(keys_for_delete)){_.forEach(keys_for_delete,function(key){delete param[param.listKey][key]})}}function drawLayerByGeo(geoJSON){var l=L.GeoJSON.geometryToLayer(geoJSON);_draw.items.addLayer(l);return l}function drawLayersForAllParams(){clearLayersOnMap();_.forEach($this.param.map.params,function(param){drawLayersByParam(param)})}function drawLayersByParamId(alias,clearLayers){if(alias==-1){return drawLayersForAllParams()}var param=$this.param.map.params[alias];return drawLayersByParam(param,clearLayers)}function onDrawEdited(e){e.layers.eachLayer(function(layer){var l_param_id=leaflet_ids[layer._leaflet_id];var listKey=$this.param.map.params[l_param_id].listKey,n_key=getNewKey(layer._leaflet_id);$this.param.map.params[l_param_id][listKey][n_key]=layer.toGeoJSON()})}function onDrawDeleted(e){e.layers.eachLayer(function(layer){var l_param_id=leaflet_ids[layer._leaflet_id];var listKey=$this.param.map.params[l_param_id].listKey,n_key=getNewKey(layer._leaflet_id);_draw.items.removeLayer(layer);delete $this.param.map.params[l_param_id][listKey][n_key]})}function onDrawCreated(e){var layer=e.layer,alias=$this.active_id;_draw.items.addLayer(layer);var listKey=$this.param.map.params[alias].listKey,n_key=getNewKey(layer._leaflet_id);leaflet_ids[layer._leaflet_id]=alias;$this.param.map.params[alias][listKey][n_key]=layer.toGeoJSON()}function getMapState(){map_state={'zoom':map.getZoom(),'center':map.getCenter()}}function activate(){leafletData.getMap($this.id).then(function(m){map=m;if($this.tile=='yandex'){map.options.crs=L.CRS.EPSG3395}map.addLayer(_draw.items);if(objectParam.map.zoom){map.setZoom(objectParam.map.zoom)}if(_.isObject(objectParam.map.center)){map.panTo(objectParam.map.center)}$scope.$watch(function(){return $this.param.map.params},function(){drawLayersForAllParams();map.invalidateSize()});getMapState();map.on('draw:editstart',function(){map.off('click')});map.on('draw:edited',onDrawEdited);map.on('draw:deleted',onDrawDeleted);map.on('draw:created',onDrawCreated);map.on('zoomend',function(){objectParam.map.zoom=map.getZoom()});map.on('mouseout',function(){objectParam.map.center=map.getCenter()});switch($this.tail){case'yandex':map.setMaxZoom(18);break;case'google':map.setMaxZoom(18);break;case'custom':map.setMaxZoom(50);break;default:map.setMaxZoom(18)}localization()})}this.f={search:function(){$http.get('https://geocode-maps.yandex.ru/1.x/?format=json&geocode='+$this.search).then(function(response){$this.searchResults=response.data.response})}};function parsePos(pos){var a=pos.split(' ');return{lat:a[1],lng:a[0]}}function getBaseLayers(tile){var baseLayers={},crs,errorTileUrl,attribution;switch(tile){case"google":baseLayers={googleTerrain:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_STREETS'),type:'custom',layer:new L.Google('ROADMAP')},googleHybrid:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_HYBRID'),type:'custom',layer:new L.Google('HYBRID')},googleRoadmap:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_TERRAIN'),type:'custom',layer:new L.Google('TERRAIN')}};break;case"yandex":crs=L.CRS.EPSG3395;attribution=s3.loc('JS_LEAFLET_BASE_LAYER_ATTRIBUTION_YANDEX');baseLayers={yandex:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_SCHEMA'),type:'custom',layer:L.tileLayer('https://core-renderer-tiles.maps.yandex.net/tiles?l=map&v='+$rootScope.YMAPS.map+'&z={z}&x={x}&y={y}&scale=2&lang=ru_RU',{attribution:attribution,reuseTiles:true,updateWhenIdle:false,crs:crs})},yandexTraffic:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_TRAFFIC'),type:'custom',layer:L.layerGroup([L.tileLayer('https://core-renderer-tiles.maps.yandex.net/tiles?l=map&v='+$rootScope.YMAPS.map+'&z={z}&x={x}&y={y}&scale=2&lang=ru_RU',{attribution:attribution,reuseTiles:true,updateWhenIdle:false,crs:crs}),L.tileLayer('https://core-jams-rdr-cache.maps.yandex.net/1.1/tiles?l=trf,trfl&lang=ru_RU&x={x}&y={y}&z={z}&tm={tm}',{reuseTiles:true,updateWhenIdle:false,crs:crs,tm:function(){return Math.ceil((new Date().getTime())/1000)}})])},yandexHybrid:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_HYBRID'),type:'custom',layer:L.layerGroup([L.tileLayer('https://core-sat.maps.yandex.net/tiles?l=sat&v='+$rootScope.YMAPS.sat+'&x={x}&y={y}&z={z}&lang=ru_RU',{attribution:attribution,reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs}),L.tileLayer('https://core-renderer-tiles.maps.yandex.net/tiles?l=skl&v='+$rootScope.YMAPS.skl+'&z={z}&x={x}&y={y}&scale=2&lang=ru_RU',{reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs})])},yandexSatellite:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_SATELLITE'),type:'custom',layer:L.tileLayer('https://core-sat.maps.yandex.net/tiles?l=sat&v='+$rootScope.YMAPS.sat+'&x={x}&y={y}&z={z}&lang=ru_RU',{attribution:attribution,reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs})}};break;case"custom":var image=$this.param.map_image||defaultImage;if(!image){baseLayers=getBaseLayers('yandex')}else{baseLayers={custom:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_CUSTOM'),type:'custom',layer:L.imageOverlay(image.filepath,L.latLngBounds([[(image.height/2)*-1,(image.width/ 2) * -1], [image.height/2,image.width/2]]))}}}break;case"osm":baseLayers={openstreetmap:{name:s3.loc('JS_LEAFLET_BASE_LAYER_NAME_ROADMAP'),type:'custom',layer:L.tileLayer('//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{subdomains:['a','b','c'],attribution:s3.loc('JS_LEAFLET_BASE_LAYER_ATTRIBUTION_OSM'),reuseTiles:true,updateWhenIdle:false})}};break}return baseLayers}function getDefaults(){var defaults={};switch($this.tile){case"custom":defaults.crs=s3.loc('JS_LEAFLET_BASE_LAYER_NAME_SIMPLE');defaults.minZoom=-5;break}return defaults}function changeParam(){if(typeof $this.active_param_id=='undefined'||$this.active_param_id==0){getMapState()}$this.active_param_id=$this.active_id;$this.active_object_id=0;var active_param_id=$this.active_id;drawLayersByParamId(active_param_id,true);changeDrawControlByParamId(active_param_id);if(!$.isEmptyObject($this.object.params[active_param_id])){fitBounds()}}function changeObject(object,clear){$this.active_param_id=0;$this.active_object_id=$this.active_id;var dt_type_id=object.dt_type_id,objectGeoData;if(!_.isObject(_cache.types[dt_type_id])){_cache.types[dt_type_id]={}}if(!_.isArray(_cache.types[dt_type_id].aliases)){_cache.types[dt_type_id].aliases=[]}if(!_.size(_cache.types[dt_type_id].aliases)){dynamicTypeParamDataService.getChildParamsForMapParam(dt_type_id,$this.param.alias).then(function(response){if(_.isObject(response.params)){_cache.types[dt_type_id].params=response.params}if(_.isObject(response.aliases)){_cache.types[dt_type_id].aliases=response.aliases}_changeObjectCallback(object,clear)})}else{_changeObjectCallback(object,clear)}changeDrawControl([])}function _changeObjectCallback(object,clear,notfit){var objectGeoData=getObjectDataForLayers(object);drawLayersByGeoDataArray(objectGeoData,clear);if(!notfit){fitBounds(-1)}}function getObjectDataForLayers(object){var dt_type_id=object.dt_type_id,data=[];if(!_.size(_cache.types[dt_type_id].aliases)){return data}_.forEach(object,function(value,alias){if(_.indexOf(_cache.types[dt_type_id].aliases,alias)==-1){return true}if(_.isObject(value)){_.forEach(value,function(geo){if(typeof geo=='string'){geo=JSON.parse(geo)}data.push(geo)})}else if(typeof value=='string'&&value[0]=='{'){data.push(JSON.parse(value))}});return data}function drawLayersByGeoDataArray(data,clear){if(clear){clearLayersOnMap()}_.forEach(data,function(geoJSON){drawLayerByGeo(geoJSON)})}function fitBounds(zoomModifier){var bounds=_draw.items.getBounds(),bounds2=[[bounds['_southWest']['lat'],bounds['_southWest']['lng']],[parseFloat(bounds['_northEast']['lat'])+"0000001",parseFloat(bounds['_northEast']['lng'])+"0000001"]];try{map.fitBounds(bounds)}catch(e){map.fitBounds(bounds2)}if(zoomModifier){var newZoom=map.getZoom()+zoomModifier,center=map.getCenter();map.setView(center,newZoom)}}this.showAllParams=showAllParams;function showAllParams(){var alias=$this.param.alias,objects={},dt_type_ids=[];_.forEach($this.params,function(group){_.forEach(group,function(param){if(param.parent_alias==alias){switch(parseInt(param.param_type_id)){case 12:dt_type_ids=dt_type_ids.concat(_.keys($this.object.params[param.alias]));_.forEach($this.object.params[param.alias],function(type){_.forEach(type,function(object){objects[object.object_id]=object})});break}}})});$this.active_param_id=0;clearLayersOnMap();changeDrawControlByParamId(0);dynamicTypeParamDataService.getChildParamsForMapParam(0,$this.param.alias,{dt_type_ids:dt_type_ids}).then(function(response){if(_.isObject(response.params)){_.forEach(response.params,function(param){if(typeof param.dt_type_id!='undefined'){var dt_type_id=param.dt_type_id;if(!_.isObject(_cache.types[dt_type_id])){_cache.types[dt_type_id]={'params':{},'aliases':[]}}_cache.types[dt_type_id].params[param.alias]=param}});if(_.isObject(response.aliases)){_.forEach(response.aliases,function(alias){if(typeof response.params[alias].dt_type_id!='undefined'){var dt_type_id=response.params[alias].dt_type_id;if(!_.isArray(_cache.types[dt_type_id].aliases)){_cache.types[dt_type_id].aliases=[]}if(_cache.types[dt_type_id].aliases.indexOf(alias)==-1){_cache.types[dt_type_id].aliases.push(alias)}}})}}_.forEach(objects,function(object){_changeObjectCallback(object,false,true)});drawLayersForAllParams();map.setView(map_state.center,map_state.zoom)})}$scope.$on('tab.selected:'+$this.param.dt_group_id,function(){var n=0;var time=setInterval(function(){n++;if($(map._container).is(':visible')||n>10){if($(map._container).is(':visible')){map.invalidateSize()}clearInterval(time)}},0)});function geoFind(){clearTimeout(timer);timer=setTimeout(function(){var value=$this.suggestText;$http.get('https://geocode-maps.yandex.ru/1.x/?format=json&geocode='+value+'&results='+10+'&skip='+0+'&apikey='+$rootScope.site.yandex_maps_key).then(function(response){parseGeoFindResults(response.data.response)})},500)}function parseGeoFindResults(results){$this.total=results.GeoObjectCollection.metaDataProperty.found;if(results.GeoObjectCollection.featureMember.length==1){selectGeoObject(results.GeoObjectCollection.featureMember[0])}else{$this.geoFindResults=results.GeoObjectCollection.featureMember}}function selectGeoObject(geo){$this.geoFindResults=[];$this.suggestText=geo.GeoObject.name;var coords=geo.GeoObject.Point.pos;coords=coords.split(" ");coords=[coords[1],coords[0]];map.setView(coords,11);objectParam.map.zoom=map.getZoom();objectParam.map.center=map.getCenter()}function fullScreen(fullscreen){if(!fullscreen){cancelFullscreen()}else{launchFullScreen($element.get(0))}}function launchFullScreen(element){if(element.requestFullScreen){element.requestFullScreen()}else if(element.mozRequestFullScreen){element.mozRequestFullScreen()}else if(element.webkitRequestFullScreen){element.webkitRequestFullScreen()}}function cancelFullscreen(){if(document.cancelFullScreen){document.cancelFullScreen()}else if(document.mozCancelFullScreen){document.mozCancelFullScreen()}else if(document.webkitCancelFullScreen){document.webkitCancelFullScreen()}}var onfullscreenchange=function(){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement;if(fullscreenElement){$scope.fullscreen=true}else{$scope.fullscreen=false}map.invalidateSize()};document.addEventListener("webkitfullscreenchange",onfullscreenchange);document.addEventListener("mozfullscreenchange",onfullscreenchange);document.addEventListener("fullscreenchange",onfullscreenchange);function setImage(image){if(!$.isEmptyObject(map)){image=image||defaultImage;map.eachLayer(function(layer){if(layer['_url']){layer.setUrl(image.filepath);layer.setBounds(L.latLngBounds([[(image.height/2)*-1,(image.width/ 2) * -1], [image.height/2,image.width/2]]))}})}}$scope.$on('$destroy',function(){clearLayersOnMap()});function localization(){map.removeControl(map.zoomControl);L.control.zoom({zoomInTitle:s3.loc('JS_LEAFLET_CONTROL_ZOOM_ZOOM_IN'),zoomOutTitle:s3.loc('JS_LEAFLET_CONTROL_ZOOM_ZOOM_OUT')}).addTo(map);L.drawLocal.draw.handlers.circle.radius=s3.loc('JS_LEAFLET_DRAW_HANDLERS_CIRCLE_RADIUS');L.drawLocal.draw.handlers.circle.tooltip.start=s3.loc('JS_LEAFLET_DRAW_HANDLERS_CIRCLE_TOOLTIP_START');L.drawLocal.draw.handlers.circlemarker.tooltip.start=s3.loc('JS_LEAFLET_DRAW_HANDLERS_CIRCLEMARKER_TOOLTIP_START');L.drawLocal.draw.handlers.marker.tooltip.start=s3.loc('JS_LEAFLET_DRAW_HANDLERS_MARKER_TOOLTIP_START');L.drawLocal.draw.handlers.polygon.tooltip.start=s3.loc('JS_LEAFLET_DRAW_HANDLERS_POLYGON_TOOLTIP_START');L.drawLocal.draw.handlers.polygon.tooltip.cont=s3.loc('JS_LEAFLET_DRAW_HANDLERS_POLYGON_TOOLTIP_COUNT');L.drawLocal.draw.handlers.polygon.tooltip.end=s3.loc('JS_LEAFLET_DRAW_HANDLERS_POLYGON_TOOLTIP_END');L.drawLocal.draw.handlers.polyline.error=s3.loc('JS_LEAFLET_DRAW_HANDLERS_POLYLINE_ERROR');L.drawLocal.draw.handlers.polyline.tooltip.start=s3.loc('JS_LEAFLET_DRAW_HANDLERS_POLYLINE_TOOLTIP_START');L.drawLocal.draw.handlers.polyline.tooltip.cont=s3.loc('JS_LEAFLET_DRAW_HANDLERS_POLYLINE_TOOLTIP_COUNT');L.drawLocal.draw.handlers.polyline.tooltip.end=s3.loc('JS_LEAFLET_DRAW_HANDLERS_POLYLINE_TOOLTIP_END');L.drawLocal.draw.handlers.rectangle.tooltip.start=s3.loc('JS_LEAFLET_DRAW_HANDLERS_RECTANGLE_TOOLTIP_START');L.drawLocal.draw.handlers.simpleshape.tooltip.end=s3.loc('JS_LEAFLET_DRAW_HANDLERS_SIMPLE_SHAPE_TOOLTIP_END');L.drawLocal.draw.toolbar.actions.text=s3.loc('JS_CANCEL');L.drawLocal.draw.toolbar.actions.title=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_ACTIONS_TITLE');L.drawLocal.draw.toolbar.buttons.circle=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_BUTTONS_CIRCLE');L.drawLocal.draw.toolbar.buttons.circlemarker=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_BUTTONS_CIRCLEMARKER');L.drawLocal.draw.toolbar.buttons.marker=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_BUTTONS_MARKER');L.drawLocal.draw.toolbar.buttons.polygon=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_BUTTONS_POLYGON');L.drawLocal.draw.toolbar.buttons.polyline=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_BUTTONS_POLYLINE');L.drawLocal.draw.toolbar.buttons.rectangle=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_BUTTONS_RECTANGLE');L.drawLocal.draw.toolbar.finish.text=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_FINISH_TEXT');L.drawLocal.draw.toolbar.finish.title=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_FINISH_TITLE');L.drawLocal.draw.toolbar.undo.text=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_UNDO_TEXT');L.drawLocal.draw.toolbar.undo.title=s3.loc('JS_LEAFLET_DRAW_TOOLBAR_UNDO_TITLE');L.drawLocal.edit.handlers.edit.tooltip.subtext=s3.loc('JS_LEAFLET_EDIT_HANDLERS_EDIT_TOOLTIP_SUBTEXT');L.drawLocal.edit.handlers.edit.tooltip.text=s3.loc('JS_LEAFLET_EDIT_HANDLERS_EDIT_TOOLTIP_TEXT');L.drawLocal.edit.handlers.remove.tooltip.text=s3.loc('JS_LEAFLET_EDIT_HANDLERS_REMOVE_TOOLTIP_TEXT');L.drawLocal.edit.toolbar.actions.cancel.text=s3.loc('JS_CANCEL');L.drawLocal.edit.toolbar.actions.cancel.title=s3.loc('JS_LEAFLET_EDIT_TOOLBAR_ACTIONS_CANCEL_TITLE');L.drawLocal.edit.toolbar.actions.clearAll.text=s3.loc('JS_LEAFLET_EDIT_TOOLBAR_ACTIONS_CLEAR_ALL_TEXT');L.drawLocal.edit.toolbar.actions.clearAll.title=s3.loc('JS_LEAFLET_EDIT_TOOLBAR_ACTIONS_CLEAR_ALL_TITLE');L.drawLocal.edit.toolbar.actions.save.text=s3.loc('JS_SAVE');L.drawLocal.edit.toolbar.actions.save.title=s3.loc('JS_LEAFLET_EDIT_TOOLBAR_ACTIONS_SAVE_TITLE');L.drawLocal.edit.toolbar.buttons.edit=s3.loc('JS_LEAFLET_EDIT_TOOLBAR_BUTTONS_EDIT');L.drawLocal.edit.toolbar.buttons.editDisabled=s3.loc('JS_LEAFLET_EDIT_TOOLBAR_BUTTONS_EDIT_DISABLED');L.drawLocal.edit.toolbar.buttons.remove=s3.loc('JS_LEAFLET_EDIT_TOOLBAR_BUTTONS_REMOVE');L.drawLocal.edit.toolbar.buttons.removeDisabled=s3.loc('JS_LEAFLET_EDIT_TOOLBAR_BUTTONS_REMOVE_DISABLED')}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectJson',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/json/s3.dynamic.object.json.html','controller':controller,'controllerAs':'Text','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_','$scope','$element'];function controller(_,$scope,$element){var $this=this,alias=this.param.alias,timer;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=false;this.size=_.size(this.model);$this.fake=[{}];this.remove=remove;this.add=add;$scope.aceLoaded=function(editor){$scope.$on('tab.selected:'+$this.param.dt_group_id,function(){timer=setTimeout(function(){editor.renderer.onResize(true,'undefined',$element.find('div[id^="ace_editor_wrapper"]').clientWidth,$element.find('div[id^="ace_editor_wrapper"]').clientHeight)},0)});clearTimeout(timer)};if(this.size==0){add()}else if(this.param.cms_readonly==1){_.each($this.model,function(value,i){try{$this.fake[i]=JSON.parse(value)}catch(err){console.log(err)}})}function remove(key){$this.model.splice(key,1)}function add(){$this.model.push('')}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectTextarea',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/textarea/s3.dynamic.object.textarea.html','controller':controller,'controllerAs':'Text','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=false;this.size=_.size(this.model);this.remove=remove;this.add=add;if(this.size==0){add()}function remove(key){$this.model.splice(key,1)}function add(){$this.model.push('')}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectFloat',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/float/s3.dynamic.object.float.html','controller':controller,'controllerAs':'Float','scope':{'object':'=','param':'='},'bindToController':true}}function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectUserAuthData',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/user.auth.data/s3.dynamic.object.user.auth.data.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias;this.user_id=0;if(_.isArray(this.object.params[alias])||!_.isObject(this.object.params[alias])||typeof this.object.object_id=='undefined'){this.object.params[alias]={}}this.model=this.object.params[alias];if(_.isEmpty(this.object.params[alias])&&typeof this.object.object_id=='undefined'){this.object.params[alias]['_0']={'user_id':0}}else{_.forEach(this.object.params[alias],function(value,key){$this.user_id=value['user_id'];$this.object.params[alias]['_'+key]=value;delete($this.object.params[alias][key])})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectAddress',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/address/s3.dynamic.object.address.html?ver='+window.STATIC_TS,'controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'=','params':'='},'bindToController':true}}controller.$inject=['$http','_'];function controller($http,_){var $this=this,alias=this.param.alias,parent_alias=this.param.parent_alias,newKey=0,parentParam;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.geoFind=geoFind;this.selectGeoObject=selectGeoObject;this.geoFindEnabled=false;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);this.geoFindResults=[];var $start=0,$limit=10;this.pagesCount=0;this.currentPage=1;this.total=0;if(parent_alias){if(_.isObject($this.params[parent_alias])){parentParam=$this.params[parent_alias]}else{_.forEach($this.params,function(group){if(_.isObject(parentParam)&&parentParam.alias){return}var _param=_.find(group,function(o){return o.alias==parent_alias});if(_.isObject(_param)){parentParam=_param}})}if(!_.isEmpty(parentParam)&&_.isObject(parentParam)){$this.geoFindEnabled=true}}if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model.push('');$this.size=_.size($this.model)}function geoFind(k){if(!$this.geoFindEnabled){return}var value=$this.model[k];$http.get('https://geocode-maps.yandex.ru/1.x/?format=json&geocode='+value+'&results='+$limit+'&skip='+$start).then(function(response){parseGeoFindResults(response.data.response)})}function parseGeoFindResults(results){$this.total=results.GeoObjectCollection.metaDataProperty.found;if(results.GeoObjectCollection.featureMember.length==1){selectGeoObject(results.GeoObjectCollection.featureMember[0])}else{$this.geoFindResults=results.GeoObjectCollection.featureMember}}function selectGeoObject(geo){$this.geoFindResults=[];var coords=geo.GeoObject.Point.pos,meta_data=geo.GeoObject.metaDataProperty.GeocoderMetaData;coords=coords.split(" ");var json=getGeoJsonForCoords(coords,meta_data);var key='_'+Date.now();_.clearObject($this.object.params[parent_alias]);$this.object.params[parent_alias][key]=json;parentParam._Ctrl.focusOnMap()}function getGeoJsonForCoords(coords,meta_data){return{"type":"Feature","properties":{'GeocoderMetaData':meta_data},"geometry":{"type":"Point","coordinates":coords}}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectColorpicker',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/colorpicker/s3.dynamic.object.colorpicker.html','controller':controller,'controllerAs':'ColorPicker','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias,required=this.param.required,newKey=0;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.reset=reset;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);this.options={allowEmpty:true,preferredFormat:true,showInput:true,showSelectionPalette:true,showInitial:true,showPalette:true,palette:colorPicker.getPalette(),hideAfterPaletteSelect:true,togglePaletteOnly:true,togglePaletteMoreText:JS_MORE,togglePaletteLessText:JS_LESS,cancelText:JS_CANCEL,chooseText:JS_CHOOSE,clearText:JS_CANCELLED};if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model.push('');$this.size=_.size($this.model);newKey++}function reset(k){$this.model[k]=''}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectPhone',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/phone/s3.dynamic.object.phone.html','controller':controller,'controllerAs':'Phone','scope':{'object':'=','param':'='},'bindToController':true}}function controller(_){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMapYandex',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/map.yandex/s3.dynamic.object.map.yandex.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'='},'bindToController':true}}function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectUploadFile',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/upload.file/s3.dynamic.object.upload.file.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'='},'bindToController':true}}controller.$inject=['$scope','_','VER_ID','DOMAIN_MASK','PROTOCOL'];function controller($scope,_,VER_ID,DOMAIN_MASK,PROTOCOL){var $this=this,alias=this.param.alias;this.size=0;this.remove=remove;$this.files=$this.object.params[alias];if($this.files=='undefined'||typeof this.object.object_id=='undefined'){$this.files={}}if($this.files){this.size=Object.keys($this.files).length;$this.ver_id=VER_ID;$this.domain_mask=DOMAIN_MASK;$this.protocol=PROTOCOL}function remove(file){file.deleted=(file.deleted)?0:1}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectDynamicObjectSelect',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/dynamic.object.select/s3.dynamic.object.dynamic.object.select.html','controller':controller,'controllerAs':'Object','scope':{'object':'=','param':'=','params':'=','flattenParams':'='},'bindToController':true}}controller.$inject=['$element','$scope','$timeout','dynamicObjectService','eventManagerService','dynamicObjectDataService'];function controller($element,$scope,$timeout,dynamicObjectService,eventManagerService,dynamicObjectDataService){var $this=this,multiple=parseInt(this.param.multiple),max_values=parseInt(this.param.max_values),timer;this.alias=this.param.alias;if(!_.isObject(this.object.params[this.alias])){this.object.params[this.alias]={}}this.objects=this.object.params[this.alias];this.all_objects={};this.selector=selector;this.remove=remove;this.addObject=addObject;this.editObject=editObject;this.checkFastAddObject=checkFastAddObject;this.change=change;this.parentParam=false;this.parentObjectIds=[];this.show=false;this.selectDisabled=false;if(max_values==0){max_values=10}if(multiple==0){multiple=1;max_values=1}activate();function getParentParam(){$this.parentParam=false;if(!$this.param.parent_alias){return $this.parentParam}if($this.flattenParams){$this.parentParam=_.find($this.params,function(p){return p.alias==$this.param.parent_alias})}else{for(var key in $this.params){var group=$this.params[key];$this.parentParam=_.find(group,function(p){if(p){return p.alias==$this.param.parent_alias}else{return false}});if($this.parentParam){break}}}return $this.parentParam}function activate(){getParentParam();var linked_dt_type_id=Object.keys($this.param.types)[0],data={};if($this.parentParam){data={linked_dt_type_id:linked_dt_type_id,max_count:30,alias:$this.param.alias,parent_alias:$this.parentParam.alias,parent_object_ids:''};setParentIds(data);eventManagerService.bind('objectEdit.objectSelectorClosed'+$this.parentParam.alias,function(event,_data){$this.show=false;setParentIds(data);getObjectList(linked_dt_type_id,data)});if($this.parentParam.param_type_id==15){if(!_.isObject($this.parentParam.map)){$this.parentParam.map={}}if(!_.isObject($this.parentParam.map.object_params)){$this.parentParam.map.object_params={}}$this.parentParam.map.object_params[$this.alias]=$this.param;$this.hidden=true}}else{data={linked_dt_type_id:linked_dt_type_id,max_count:30,alias:$this.param.alias}}getObjectList(linked_dt_type_id,data)}function selector(linked_dt_type_id,type){if(!_.isObject($this.objects[linked_dt_type_id])){$this.objects[linked_dt_type_id]=[]}if($this.param.parent_alias){$this.parentObjectIds=[];_.forEach($this.object.params[$this.param.parent_alias],function(objects){_.forEach(objects,function(object){$this.parentObjectIds.push(object.object_id)})})}dynamicObjectService.selector({'objects':$this.objects[linked_dt_type_id],'alias':$this.param.alias,'linked_dt_type_id':linked_dt_type_id,'dt_type_id':$this.object.dt_type_id,'parent_object_ids':$this.parentObjectIds.join(','),'parent_alias':$this.param.parent_alias,'multiple':$this.param.multiple,'max_values':$this.param.max_values},type).then(function(modal){modal.close.then(function(response){trigger()})})}function trigger(objects){eventManagerService.trigger('objectEdit.objectSelectorClosed'+$this.param.alias,{'objects':objects||$this.objects})}function remove(linked_dt_type_id,key){$this.objects[linked_dt_type_id].splice(key,1);if($this.objects[linked_dt_type_id].length>0){positionsCheck(linked_dt_type_id)}else if($this.objects[linked_dt_type_id].length==0){delete $this.objects[linked_dt_type_id]}trigger()}function positionsCheck(linked_dt_type_id){if(linked_dt_type_id){_.forEach($this.objects[linked_dt_type_id],function(object,index){object['position']=index})}else{_.forEach($this.objects,function(param){_.forEach(param,function(object,index){object['position']=index})})}}function addObject(linked_dt_type_id){if(typeof $this.objects[linked_dt_type_id]=='undefined'){$this.objects[linked_dt_type_id]=[]}dynamicObjectService.add({dt_type_id:linked_dt_type_id,selector_dt_type_id:$this.object.dt_type_id,selector_alias:$this.param.alias,list:$this.objects[linked_dt_type_id]})}function checkFastAddObject(type){if((($this.param.multiple==1&&(_.size($this.objects[type.dt_type_id])<=$this.param.max&&$this.param.max>0||$this.param.max==0))||$this.param.multiple==0&&_.size($this.objects[type.dt_type_id])==0)&&type.type_kind=='regular'){return true}else{return false}}function editObject(event,object,linked_dt_type_id,dt_type_id,alias){event.preventDefault();dynamicObjectService.edit({dt_type_id:linked_dt_type_id,object_id:object.object_id,selector_dt_type_id:dt_type_id,selector_alias:alias,list:$this.objects[linked_dt_type_id]}).then(function(modal){modal.close.then(function(response){trigger()})})}function change(linked_dt_type_id,object_id){trigger()}function getObjectList(linked_dt_type_id,data){dynamicObjectDataService.getListForSelector(data).then(function(response){$this.show=true;$this.all_objects[linked_dt_type_id]=response.objects;checkValue(linked_dt_type_id,response.objects);clearTimeout(timer);timer=setTimeout(function(){$element.find('select').trigger('liszt:updated')},0)})}function setParentIds(data){var parent_dt_type_id=Object.keys($this.parentParam.types)[0],i=0;data['parent_object_ids']='';_.each($this.object.params[$this.parentParam.alias][parent_dt_type_id],function(object){if(i!=0){data['parent_object_ids']+=','}data['parent_object_ids']+=object.object_id;i++})}function checkValue(linked_dt_type_id,objects){var check=false;$this.object.params[$this.param.alias][linked_dt_type_id].some(function(value,i){check=false;_.forEach(objects,function(object){if(object.object_id==value.object_id){check=true}});if(!check){$this.object.params[$this.param.alias][linked_dt_type_id].splice(i,1)}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMapMarker',directive);function directive(){return{'restrict':'E','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'=','params':'='},'bindToController':true}}controller.$inject=['_','s3PopupService'];function controller(_,s3PopupService){var $this=this,alias=this.param.alias,parent_alias=this.param.parent_alias;if(!parent_alias){s3PopupService.alert('Параметр "'+this.param.name+'" требует указания родительской карты');return}this.param._Ctrl=this;this.focusOnMap=focusOnMap;this.parentParam=this.params[parent_alias];this.param['listKey']='markers';if(!_.isObject(this.object.params[alias])){this.object.params[alias]={}}this.param.controls=['marker'];this.param.markers=this.object.params[alias];_.forEach(this.params,function(group){if(_.size($this.parentParam)){return}$this.parentParam=_.find(group,function(o){return o.alias==parent_alias})});prepareParentObject();function prepareParentObject(){if(!_.isObject($this.parentParam.map)){$this.parentParam.map={}}if(!_.isObject($this.parentParam.map.params)){$this.parentParam.map.params={}}if(!_.isObject($this.parentParam.map.params[alias])){$this.parentParam.map.params[alias]=$this.param}}function focusOnMap(){$this.parentParam._Ctrl.active_id=$this.param.alias;$this.parentParam._Ctrl.changeParam()}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectText',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/text/s3.dynamic.object.text.html','controller':controller,'controllerAs':'Text','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias,required=this.param.required,newKey=0;if(!_.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}$this.model.push('');$this.size=_.size($this.model);newKey++}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectSelect',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/select/s3.dynamic.object.select.html','controller':controller,'controllerAs':'Select','scope':{'object':'=','param':'=','params':'='},'bindToController':true}}controller.$inject=['$scope','_'];function controller($scope,_){var $this=this,parent_alias=this.param.parent_alias,alias=this.param.alias,parentParam=false,objectParams,objectParam;this.option_id=0;this.parent_option_id=0;this.options=this.param.options;this.change=change;if(_.size(this.object.params[alias])==0){this.object.params[alias]={}}objectParams=this.object.params;objectParam=objectParams[this.param.alias];if(_.size(objectParam)){_.forEach(objectParam,function(option,key){objectParam['_'+option.option_id]=option;delete objectParam[key]});var key=_.keys(objectParams[alias])[0];this.option_id=objectParam[key].option_id;this.param.selected_option_id=this.option_id}if(parent_alias>0){_.forEach($this.params,function(group){if(parentParam){return}var index=_.findIndex(group,{alias:parent_alias});if(index>-1){parentParam=group[index]}});$this.parent_option_id=parentParam.selected_option_id;$scope.$watch(function(scope){return parentParam.selected_option_id},function(){$this.parent_option_id=parentParam.selected_option_id})}function change(){var key='_0';if(_.size(objectParams[alias])>0){key=_.keys(objectParams[alias])[0]}$this.param.selected_option_id=$this.option_id;objectParams[alias][key]=_.find($this.options,function(o){return o.option_id==$this.option_id})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectShop2Folder',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/shop2.folder/s3.dynamic.object.shop2.folder.html','controller':controller,'controllerAs':'Ctrl','scope':{'param':'=','object':'='},'bindToController':true}}controller.$inject=['$scope','_'];function controller($scope,_){var $this=this,alias=this.param.alias;$this.folders=$this.object.params[alias]}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectWorktime',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/worktime/s3.dynamic.object.worktime.html','controller':controller,'controllerAs':'Ctrl','scope':{'object':'=','param':'='},'bindToController':true}}controller.$inject=['_'];function controller(_){var $this=this,alias=this.param.alias;$this.days=['mon','tue','wed','thu','fri','sat','sun'];$this.hours=['00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23'];$this.minutes=['00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59'];if(!Array.isArray(this.object.params[alias])){this.object.params[alias]=[]}this.model=this.object.params[alias];this.multiple=!!parseInt(this.param.multiple);this.remove=remove;this.add=add;this.maxValues=parseInt(this.param.max_values);this.size=_.size(this.model);this.refresh=refresh;if(this.size==0){add()}function remove(key){$this.model.splice(key,1);$this.size=_.size($this.model)}function add(){if($this.maxValues>0&&$this.maxValues<=$this.size){return}var new_model={};_.forEach($this.days,function(day){new_model[day]={'work':{'enabled':false,'from':{'h':$this.hours[0],'m':$this.minutes[0]},'to':{'h':$this.hours[0],'m':$this.minutes[0]}},'break':{'enabled':false,'from':{'h':$this.hours[0],'m':$this.minutes[0]},'to':{'h':$this.hours[0],'m':$this.minutes[0]}}}});$this.model.push(new_model);$this.size=_.size($this.model)}function refresh(event){setTimeout(function(){$(event.currentTarget).parents('div:first').find('select').trigger("liszt:updated")},0)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectMultiselect',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/multiselect/s3.dynamic.object.multiselect.html','controller':controller,'controllerAs':'Select','scope':{'object':'=','param':'=','params':'='},'bindToController':true}}controller.$inject=['$scope','_'];function controller($scope,_){var $this=this,parent_alias=this.param.parent_alias,alias=this.param.alias,parentParam=false,objectParams,objectParam,checked={};this.option_ids=[];this.parent_option_id=0;this.options=this.param.options;this.model=this.object.params[alias];this.change=change;if(_.size(this.object.params[alias])==0){this.object.params[alias]={}}objectParams=this.object.params;objectParam=objectParams[this.param.alias];if(_.size(objectParam)){_.forEach(objectParam,function(option,key){objectParam['_'+option.option_id]=option;$this.option_ids.push(option.option_id);delete objectParam[key]})}if(_.size(this.model)){_.forEach(this.model,function(option,key){checked[option.option_id]=true})}function change(){checked={};_.forEach($this.option_ids,function(option_id){checked[option_id]=true;if(typeof objectParam['_'+option_id]=='undefined'){objectParam['_'+option_id]=_.find($this.options,function(o){return o.option_id==option_id})}});_.forEach(objectParam,function(option){if(!checked[option.option_id]){delete objectParam['_'+option.option_id]}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectEditParamTitle',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/param.title/s3.dynamic.object.edit.param.title.html','controller':controller,'controllerAs':'Title','scope':{'required':'=','name':'=','error':'=','add':'=','addParam':'=','note':'='},'bindToController':true}}function controller(){if(this.note){this.space=' '}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectEmail',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/directives/email/s3.dynamic.object.email.html','controller':controller,'controllerAs':'Email','scope':{'object':'=','param':'='},'bindToController':true}}function controller(_){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectListTree',directive).config(treeConfig);treeConfig.$inject=['$rootScopeProvider'];function treeConfig($rootScopeProvider){$rootScopeProvider.digestTtl(30)}function directive(){return{'restrict':'E','replace':true,'scope':{'objects':'=','scheme':'=','type':'=','template':'@'},'template':'<div ng-include="\'/-/cms/v1/dynamic/template/?alias=\' + ObjectList.template + \'&\' + $root.ACCESS + (Object.keys($root.storage).length == 0 ? \'&global=1\' : \'\')"></div>','controller':controller,'controllerAs':'ObjectList','bindToController':true}}controller.$inject=['_','$filter','$q','$scope','dynamicObjectService','dynamicObjectDataService'];function controller(_,$filter,$q,$scope,dynamicObjectService,dynamicObjectDataService){var $this=this,divContextMenu='pageController',timer;this.toggle=toggle;this.options=options();this.collapsed=1;this.total=0;this.expands={};this.dragTarget=0;this.lastHoverExpand=0;this.searchResultTotal=0;this.appendChild=appendChild;this.editObject=editObject;this.removeObject=removeObject;this.beforeDrop=beforeDrop;this.contextMenu=contextMenu;this.addExpand=addExpand;this.resetSearch=resetSearch;this.search=search;this.edit=edit;this.remove=remove;$scope.objects=this.objects;$scope.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};function editObject(event){if(event){var object=$(event.currentTarget).data('object')}return edit(object)}function edit(object){return dynamicObjectService.edit({object_id:object.object_id,dt_type_id:object.dt_type_id,list:$this.objects})}function appendChild(event){if(event){var object=$(event.currentTarget).data('object')}return dynamicObjectService.add({parent_object_id:object.object_id,dt_type_id:object.dt_type_id,list:$this.objects,schemeUpdate:schemeUpdate})}$scope.$broadcast('angular-ui-tree:expand-all');function removeObject(event){if(event){var object=$(event.currentTarget).data('object')}return remove(object)}function remove(object){return dynamicObjectService.removeTreeItem(object.object_id,$this)}function beforeDrop(moveData){return dynamicObjectDataService.moveObjectTreeItem({'target_id':moveData.target.object_id,'source_id':moveData.source.object_id,'mode':moveData.mode})}function options(){var options={treeClass:'dynatree-menu',dragMove:function(event){clearTimeout(timer);timer=setTimeout(function(){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(move_data.target){$this.dragTarget=move_data.target.object_id;if($this.lastHoverExpand!=$this.dragTarget&&$this.expands[$this.dragTarget]!=false){$this.expands[$this.lastHoverExpand]=true;$this.expands[$this.dragTarget]=false;$this.lastHoverExpand=$this.dragTarget}}},500)},dropped:function(event){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(move_data.target){$this.dragTarget=move_data.target.object_id;if($this.lastHoverExpand!=$this.dragTarget&&$this.expands[$this.dragTarget]!=false){$this.expands[$this.lastHoverExpand]=true}}$this.lastHoverExpand=0;$this.dragTarget=0;if(!move_data.mode){return $q.reject()}if(typeof $this.beforeDrop=='function'){return $this.beforeDrop(move_data).then(function(response){if(!response.moved){return $q.reject()}if(parent&&parent.children.length==0){$this.expands[parent.object_id]=true}return true})}return $q.reject()},_getParent:function(dest){return dest.nodesScope.$parent.$parent.object},_getSource:function(source){return source.nodeScope.object},_getPosition:function(dest){return dest.index},_getLastPosition:function(source){return source.index},_getMoveData:function(source,parent,index,last_position){var mode=false,target={},data,prev;if(!parent){target=$this.scheme;prev=target[index-1]}else{prev=parent.children[index-1]}if(index==0&&parent){target=parent;mode='inside'}else if(index==0&&!parent){target={'object_id':null};mode='before'}else{target=prev;mode='after'}data={'mode':mode,'target':target,'source':source};return data}};return options}function contextMenu(object,event){var contextMenu=$('#'+divContextMenu);if(contextMenu.is(':visible')){contextMenu.hide()}S3ContextMenuController.openContextMenu(contextMenu,function(context){var pos=$(event.currentTarget).offset();context.find('.contextMenuItem').data('object',object);context.css({left:pos.left-28,top:pos.top+26})})}$scope.collapseAll=function(){$scope.$broadcast('angular-ui-tree:collapse-all');_.each($this.expands,function(expand,key){$this.expands[key]=true});$this.collapsed=1};$scope.expandAll=function(){$scope.$broadcast('angular-ui-tree:expand-all');_.each($this.expands,function(expand,key){$this.expands[key]=false});$this.collapsed=0};function toggle(scope,object_id){$this.expands[object_id]=!$this.expands[object_id];scope.toggle()}function addExpand(object_id){if(typeof $this.expands[object_id]=='undefined'){$this.expands[object_id]=true}}function schemeUpdate(newScheme){$this.scheme=newScheme}$scope.$watch(function(){return $this.scheme},function(){$this.total=_.size($this.objects)});function search(){if($this.searchText&&$this.searchText!=''){$this.searchResult=$filter('toArray')(JSON.parse(JSON.stringify($this.objects)));$this.searchResult=$filter('filter')($this.searchResult,{'mask':$this.searchText});$this.searchResultTotal=_.size($this.searchResult)}}function resetSearch(){delete $this.searchText;delete $this.searchResult;$this.searchResultTotal=0}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectList',directive);function directive(){return{'restrict':'E','replace':true,'scope':{'objects':'=','type':'=','groupOp':'='},'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/list/regular/s3.dynamic.object.list.html','controller':controller,'controllerAs':'ObjectList','bindToController':true}}controller.$inject=['dynamicObjectService'];function controller(dynamicObjectService){var $this=this;this.edit=edit;this.copy=copy;this.remove=dynamicObjectService.remove;this.groupChange=groupChange;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};function edit(object){dynamicObjectService.edit({object_id:object.object_id,dt_type_id:object.dt_type_id,list:$this.objects})}function copy(object){dynamicObjectService.copy({object_id:object.object_id,dt_type_id:object.dt_type_id,list:$this.objects,callback:$this.type.checkSettings})}function groupChange(object_id){if($this.groupOp.all){$this.groupOp.all=false;allChangeInPage()}if($this.groupOp.list[object_id]){delete $this.groupOp.list[object_id]}else{$this.groupOp.list[object_id]=true}$this.groupOp.count=_.size($this.groupOp.list)}function allChangeInPage(){_.each($this.objects,function(object){$this.groupOp.list[object.object_id]=true})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectListTreeFilter',directive).config(treeConfig);treeConfig.$inject=['$rootScopeProvider'];function treeConfig($rootScopeProvider){$rootScopeProvider.digestTtl(30)}function directive(){return{'restrict':'E','replace':true,'scope':{'type':'=','model':'=','typeCtrl':'=','keyStorage':'@?','storage':'=?'},'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/list/regular/tree.filter/s3.dynamic.object.list.tree.filter.html','controller':controller,'controllerAs':'Selector','bindToController':true}}controller.$inject=['$filter','$q','$scope','_','dynamicTypeDataService','dynamicObjectService','dynamicActionTreeService','dynamicObjectDataService'];function controller($filter,$q,$scope,_,dynamicTypeDataService,dynamicObjectService,dynamicActionTreeService,dynamicObjectDataService){var $this=this,divContextMenu='s3-tree-context',dt_type_id=this.type.dt_type_id,dt_type_alias=this.type.dt_type_alias,alias=this.type.alias,max_values=0,max_count=1000,total=0,hardSearch={},hardSearchCheck=false,timer,lastContext;this.toggle=toggle;this.options=options();this.collapsed=1;this.total=0;this.expands={};this.dragTarget=0;this.lastHoverExpand=0;this.objects={};this.objectsSuggest={};this.selected={};this.max_count=max_count;this.scheme=[];this.selectDisabled=false;this.active=0;this.alias=alias;this.select=select;this.addObject=addObject;this.editObject=editObject;this.beforeDrop=beforeDrop;this.contextMenu=contextMenu;this.addExpand=addExpand;this.search=search;this.resetSearch=resetSearch;this.contextAdd=contextAdd;this.contextEdit=contextEdit;this.contextDelete=contextDelete;this.reset=reset;if(max_values==0){max_values=100}activate();function activate(){var data={dt_type_id:dt_type_id,dt_type_alias:dt_type_alias};if($this.typeCtrl){data['target_dt_type_id']=$this.typeCtrl.type.dt_type_id}else{data['target_dt_type_alias']=$this.storage[$this.keyStorage].settings['params']['dt_type_alias']}dynamicTypeDataService.getForView(data).then(function(response){parseResponse(response)})}function editObject(object){dynamicObjectService.edit({dt_type_id:dt_type_id,object_id:object.object_id,list:$this.objects})}function contextEdit(event){if(event){var object=$(event.currentTarget).data('object')}return editObject(object)}function addObject(){dynamicObjectService.add({dt_type_id:dt_type_id,list:$this.objects,schemeUpdate:schemeUpdate})}function contextAdd(event){if(event){var object=$(event.currentTarget).data('object')}return dynamicObjectService.add({parent_object_id:object.object_id,dt_type_id:object.dt_type_id,list:$this.objects,schemeUpdate:schemeUpdate})}function contextDelete(event){if(event){var object=$(event.currentTarget).data('object')}return dynamicObjectService.removeTreeItem(object.object_id,$this)}function select(object){$this.active=object.object_id;if($this.typeCtrl){if(!$this.model){$this.model={}}if(!$this.model[alias]){$this.model[alias]={}}$this.model[alias]['mode']='should';$this.model[alias]['value']=[object.object_id];$this.typeCtrl.m.search.search($this.model)}else{if(typeof $this.storage[$this.keyStorage]!='undefined'){if(_.size($this.storage[$this.keyStorage]['hardSearch'])==0&&!hardSearchCheck){if(_.size($this.storage[$this.keyStorage].settings['params']['search'])){$this.storage[$this.keyStorage]['hardSearch']=JSON.parse(JSON.stringify($this.storage[$this.keyStorage].settings['params']['search']))}else{$this.storage[$this.keyStorage]['hardSearch']={}}hardSearchCheck=true}var data={};data[alias]={'mode':'should','value':[object.object_id]};if(typeof $this.storage[$this.keyStorage].settings['params']['search']=='undefined'){$this.storage[$this.keyStorage].settings['params']['search']=data}else{$.extend($this.storage[$this.keyStorage].settings['params']['search'],data)}$.extend($this.storage[$this.keyStorage].settings['params']['search'],$this.storage[$this.keyStorage]['hardSearch']);$this.storage[$this.keyStorage].settings['params'].start=0;if($this.storage[$this.keyStorage].settings['params']['search']==$this.storage[$this.keyStorage]['hardSearch']){$this.storage[$this.keyStorage]['count_rewrite']=true}else{$this.storage[$this.keyStorage]['count_rewrite']=false}var actionData={keyStorage:$this.keyStorage,actionData:$this.storage[$this.keyStorage].settings};if($this.storage){dynamicActionTreeService.runAction(actionData,$this.storage)}}}}function reset(){$this.active=0;delete $this.model[alias];if($this.typeCtrl){$this.typeCtrl.m.search.search($this.model)}else{if(typeof $this.storage[$this.keyStorage]!='undefined'){if(!$this.storage[$this.keyStorage]['hardSearch'][alias]){delete $this.storage[$this.keyStorage].settings['params']['search'][alias]}$this.storage[$this.keyStorage].settings['params'].start=0;var actionData={keyStorage:$this.keyStorage,actionData:$this.storage[$this.keyStorage].settings};if($this.storage){dynamicActionTreeService.runAction(actionData,$this.storage)}}}}function beforeDrop(moveData){return dynamicObjectDataService.moveObjectTreeItem({'target_id':moveData.target.object_id,'source_id':moveData.source.object_id,'mode':moveData.mode})}function options(){var options={dragMove:function(event){clearTimeout(timer);timer=setTimeout(function(){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(move_data.target){$this.dragTarget=move_data.target.object_id;if($this.lastHoverExpand!=$this.dragTarget&&$this.expands[$this.dragTarget]!=false){$this.expands[$this.lastHoverExpand]=true;$this.expands[$this.dragTarget]=false;$this.lastHoverExpand=$this.dragTarget}}},500)},dropped:function(event){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(move_data.target){$this.dragTarget=move_data.target.object_id;if($this.lastHoverExpand!=$this.dragTarget&&$this.expands[$this.dragTarget]!=false){$this.expands[$this.lastHoverExpand]=true}}$this.lastHoverExpand=0;$this.dragTarget=0;if(!move_data.mode){return $q.reject()}if(typeof $this.beforeDrop=='function'){return $this.beforeDrop(move_data).then(function(response){if(!response.moved){}if(parent&&parent.children.length==0){$this.expands[parent.object_id]=true}return true})}return $q.reject()},_getParent:function(dest){return dest.nodesScope.$parent.$parent.object},_getSource:function(source){return source.nodeScope.object},_getPosition:function(dest){return dest.index},_getLastPosition:function(source){return source.index},_getMoveData:function(source,parent,index,last_position){var mode=false,target={},data,prev;if(!parent){target=$this.scheme;prev=target[index-1]}else{prev=parent.children[index-1]}if(index==0&&parent){target=parent;mode='inside'}else if(index==0&&!parent){target={'object_id':null};mode='before'}else{target=prev;mode='after'}data={'mode':mode,'target':target,'source':source};return data}};return options}function contextMenu(object,event){var contextMenu=$('#'+divContextMenu),target=$(event.currentTarget).parents('.dynatree-node:first'),targetOffset=target.find('.dynatree-context').position();if(contextMenu.is(':visible')){contextMenu.hide();if(lastContext==object.object_id){lastContext='';return false}}S3ContextMenuController.openContextMenu(contextMenu,function(context){context.find('li').data('object',object);context.find('.folder-id').html(object.object_id).attr('data-clipboard-text',object.object_id);lastContext=object.object_id;context.css({'top':targetOffset.top+21,'left':targetOffset.left})},null,target)}$scope.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};$scope.collapseAll=function(){$scope.$broadcast('angular-ui-tree:collapse-all');_.each($this.expands,function(expand,key){$this.expands[key]=true});$this.collapsed=1};$scope.expandAll=function(){$scope.$broadcast('angular-ui-tree:expand-all');_.each($this.expands,function(expand,key){$this.expands[key]=false});$this.collapsed=0};function toggle(scope,object_id){$this.expands[object_id]=!$this.expands[object_id];scope.toggle()}function addExpand(object_id){if(typeof $this.expands[object_id]=='undefined'){$this.expands[object_id]=true}}function schemeUpdate(newScheme){$this.scheme=newScheme}$scope.$watch(function(){return $this.scheme},function(){$this.total=_.size($this.objects)});function search(){if($this.searchText&&$this.searchText!=''){$this.searchResult=$filter('toArray')(JSON.parse(JSON.stringify($this.objects)));$this.searchResult=$filter('filter')($this.searchResult,{'mask':$this.searchText})}}function resetSearch(){delete $this.searchText;delete $this.searchResult}function parseResponse(response){$this.objects={};$this.typeName=response.type.name;if(_.isObject(response.objects)&&!_.isEmpty(response.objects)){$this.objects=response.objects}$this.total=response.total;if(_.isObject(response.type)){$this.type=response.type;dt_type_id=$this.type.dt_type_id;$this.title=$this.type.name}if(_.isObject(response.params)){$this.params=response.params}if(_.isObject(response.scheme)){schemeUpdate(response.scheme)}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicObjectInjectParam',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/type.param/edit.in.object/s3.dynamic.object.inject.param.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'object':'='}}}controller.$inject=['s3PopupService','dynamicTypeParamService','dynamicTypeParamDataService'];function controller(s3PopupService,dynamicTypeParamService,dynamicTypeParamDataService){var $this=this,tmp=[],paramsMoved={};this.positionsChanged=false;this.sortableOptions={handle:'> .sort-handler',stop:function(){positionsCheck()},axis:'y'};if(!_.isObject($this.object.injectable_params)){$this.object.injectable_params=[]}else{_.each($this.object.injectable_params,function(param){tmp.push(param)});$this.object.injectable_params=tmp}$this.params=$this.object.injectable_params;$this.add=add;$this.edit=edit;$this.remove=remove;$this.savePositions=savePositions;$this.updateInjectStatus=updateInjectStatus;function add(){dynamicTypeParamService.add({'object_id':$this.object.object_id,'pos':$this.params.length}).then(function(modal){modal.close.then(function(param){if(_.isObject(param)){$this.params.push(param)}})})}function edit(param,index){dynamicTypeParamService.edit({'type_param_id':param.type_param_id,'object_id':$this.object.object_id}).then(function(modal){modal.close.then(function(param){if(_.isObject(param)){$this.params[index]=param}})},function(response){s3.alertHTML(response.message,function(){s3PopupService.closeLast('mouse')});s3PopupService.setClose();return false})}function remove(param,i){dynamicTypeParamService.removeInherit(param,$this.params,i,positionsCheck)}function updateInjectStatus(param,inject_status){dynamicTypeParamService.updateInjectStatus(param,inject_status)}function positionsCheck(){paramsMoved={};_.each($this.params,function(param,index){if(param.pos!=index){param['pos']=index;paramsMoved[param.type_param_id]=index}});if(_.size(paramsMoved)>0){$this.positionsChanged=true}else{$this.positionsChanged=false}}function savePositions(){if(_.size(paramsMoved)>0){dynamicTypeParamDataService.updatePositionParams(paramsMoved).then(function(response){$this.positionsChanged=false})}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicTypeParamOptionSelector',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/type.param/option.selector/s3.dynamic.type.param.option.selector.html','controller':controller,'controllerAs':'Selector','bindToController':true,'scope':{model:'=',paramId:'@'}}}controller.$inject=['_','dynamicParamService'];function controller(_,dynamicParamService){var $this=this;this.open=open;this.remove=remove;function open(){dynamicParamService.optionSelector({model:$this.model,param_id:$this.paramId})}function remove(option_id){delete $this.model[option_id]}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionTreeList',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/tree/list/s3.dynamic.action.tree.list.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'list':'='}}}controller.$inject=['dynamicActionTreeService','dynamicActionTreeDataService','$rootScope'];function controller(dynamicActionTreeService,dynamicActionTreeDataService,$rootScope){var $this=this;this.edit=edit;this.remove=remove;this.canEdit=canEdit;this.replaceToLocal=replaceToLocal;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};function edit(tree){dynamicActionTreeService.edit(tree).then(function(modal){modal.close.then(function(tree){if(_.isObject(tree)){$this.list[tree.dt_action_tree_id]=tree}})})}function remove(tree){dynamicActionTreeService.remove(tree).then(function(modal){modal.close.then(function(confirm){if(confirm){dynamicActionTreeDataService.remove({dt_action_tree_id:tree.dt_action_tree_id,global:(tree.ver_id==0)?1:0}).then(function(response){if(response.done){delete $this.list[tree.dt_action_tree_id]}})}})})}function canEdit(tree){if(tree.ver_id==0){if($rootScope.can_edit_global){return true}return false}return true}function replaceToLocal(tree){dynamicActionTreeService.replaceToLocal(tree).then(function(modal){modal.close.then(function(confirm){if(confirm){dynamicActionTreeDataService.replaceToLocal({tree:tree}).then(function(response){if(_.isObject(response)){$this.list[response.tree.dt_action_tree_id]=response.tree}})}})})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionStaticValueArray',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/edit/static.value/array/s3.dynamic.action.static.value.array.html?ver='+Date.now(),'controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','action':'='}}}controller.$inject=['_'];function controller(_){var $this=this;if(_.isArray($this.action.static_value_json)||!_.isObject($this.action.static_value_json)){$this.action.static_value_json={}}if(_.isArray($this.action.static_value_json[$this.param.alias])){$this.action.static_value_json[$this.param.alias]={'value':''}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionStaticValueUser',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/edit/static.value/user/s3.dynamic.action.static.value.user.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','action':'='}}}function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionStaticValueInt',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/edit/static.value/int/s3.dynamic.action.static.value.int.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','action':'='}}}function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionStaticValueString',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/edit/static.value/string/s3.dynamic.action.static.value.string.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','action':'='}}}controller.$inject=['_'];function controller(_){var $this=this;if(_.isArray($this.action.static_value_json)||!_.isObject($this.action.static_value_json)){$this.action.static_value_json={}}if(_.isArray($this.action.static_value_json[$this.param.alias])){$this.action.static_value_json[$this.param.alias]={'value':''}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionStaticValues',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/edit/static.value/s3.dynamic.action.static.values.html?ver='+Date.now(),'controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'action':'=','actionTypes':'='}}}controller.$inject=['$scope'];function controller($scope){var $this=this;this.currentActionType={};$scope.$watch(function(){return $this.action.action_type},function(){$this.currentActionType=_.find($this.actionTypes,{action_type:$this.action.action_type})})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionIf',directive);function directive(){return{'controller':controller,'controllerAs':'If','templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/list/directives/if/s3.dynamic.action.if.html','bindToController':true}}controller.$inject=[];function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionDefault',directive);function directive(){return{'transclude':true,'replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/list/directives/default/s3.dynamic.action.default.html'}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionBlock',directive);function directive(){return{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/list/directives/block/s3.dynamic.action.block.html'}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicActionList',directive);function directive(){return{'transclude':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/action.tree/action/list/s3.dynamic.action.list.html'}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQueueList',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/queue/list/s3.dynamic.queue.list.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'list':'=?'}}}controller.$inject=['_','dynamicQueueService','dynamicQueueDataService'];function controller(_,dynamicQueueService,dynamicQueueDataService){var $this=this;this.edit=edit;this.remove=remove;this.reload=reload;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};if(!$this.list){activate()}function activate(){dynamicQueueDataService.getList({'hash_key':'queue_id'}).then(function(response){if(_.isObject(response.queues)){$this.queues=response.queues}})}function edit(queue){dynamicQueueService.edit({queue_id:queue.queue_id}).then(function(modal){modal.close.then(function(response){if(_.isObject(response.queue)&&response.queue.queue_id){$this.list['_'+response.queue.queue_id]=response.queue}})})}function remove(queue){dynamicQueueService.remove(queue.queue_id,$this.list)}function reload(queue){dynamicQueueService.reload(queue.queue_id,$this.list)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicSitemapSettingsList',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/sitemap.settings/list/s3.dynamic.sitemap.settings.list.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'list':'='}}}controller.$inject=['_','dynamicSitemapSettingsService'];function controller(_,dynamicSitemapSettingsService){var $this=this;this.edit=edit;this.remove=remove;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};function edit(settings){dynamicSitemapSettingsService.edit({settings_id:settings.settings_id}).then(function(modal){modal.close.then(function(response){if(response){if(_.isObject(response.sitemapSettings)&&response.sitemapSettings.settings_id){$this.list[response.sitemapSettings.settings_id]=response.sitemapSettings}}})})}function remove(settings){dynamicSitemapSettingsService.remove(settings.settings_id,$this.list)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySortParamSelector',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/sort/s3.dynamic.query.sort.param.selector.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'query':'=','params':'=','parentAlias':'=','parentPosition':'='}}}controller.$inject=['$filter','_','dynamicParamDataService','$timeout','$element'];function controller($filter,_,dynamicParamDataService,$timeout,$element){var $this=this,nested_ids={12:true,19:true,21:true},created={'alias':'created','name':$filter('translate')('general.created'),'param_type_id':'29'},modified={'alias':'modified','name':$filter('translate')('general.modified'),'param_type_id':'29'};this.add=add;this.remove=remove;this.isNested=isNested;this.orders=['desc','asc'];this.sortableOptions={handle:'.sort-handler',stop:function(){positionsCheck()},axis:'y'};this.change=change;this.expand=expand;this.init=init;this.disabled=disabled;activate();function expand(param){param.full=(param.full!=0?0:1);if(param.full==1&&param.param&&$this.isNested&&(typeof $this.params[param.param.alias]=='undefined'||_.size($this.params[param.param.alias])||_.size($this.params[param.param.alias]['sort']))){param['loaded']=false;dynamicParamDataService.getParamsDynamicParam({'param_id':param.param.param_id}).then(function(response){if(!$this.params[param.param.alias]){$this.params[param.param.alias]={}}$this.params[param.param.alias]['sort']=response;addSystemParams(param);param['loaded']=true})}}function init(param){param['full']=0;if(!$this.isNested(param.param)||$this.isNested(param.param)&&_.size($this.params[param.parent_alias])&&_.size($this.params[param.parent_alias]['sort'])){param['loaded']=true}else{param['loaded']=false}if(param.param_id==1){param.param=created}if(param.param_id==2){param.param=modified}}function change(param){isNested(param.param);if((!$this.params[param.param.alias]||!$this.params[param.param.alias]['sort'])&&$this.isNested(param.param)){param['loaded']=false;dynamicParamDataService.getParamsDynamicParam({'param_id':param.param.param_id,'type_param':'sort'}).then(function(response){if(!$this.params[param.param.alias]){$this.params[param.param.alias]={}}$this.params[param.param.alias]['sort']=response;addSystemParams(param);param['loaded']=true})}}function add(){if(!_.isObject($this.query.params)){$this.query.params={}}if(!_.isArray($this.query.params.sort)){$this.query.params.sort=[]}$this.query.params.sort.push({'parent_alias':$this.parentAlias,'full':0,'loaded':($this.parentAlias!=''?false:true),'position':$this.query.params.sort.length});convert()}function remove(k){if($this.paramsF[k]&&$this.paramsF[k].param){remove_childs($this.paramsF[k].param.alias)}_.each($this.query.params.sort,function(param,i){if(param==$this.paramsF[k]){$this.query.params.sort.splice(i,1)}});convert();positionsCheck()}function activate(){convert();if(!$this.params[$this.parentAlias]||!_.isObject($this.params[$this.parentAlias].sort)){if(!$this.params[$this.parentAlias]){$this.params[$this.parentAlias]={}}$this.params[$this.parentAlias]={'sort':{}}}addSystemParams();isNested()}function isNested(param){if(param&&nested_ids[param.param_type_id]){return true}else{return false}}function positionsCheck(){var n=0;_.forEach($this.paramsF,function(param){param['position']=n+parseInt($this.parentPosition);n++})}function addSystemParams(param){var alias=(param?param.param.alias:'');if(typeof $this.params[alias]=='undefined'){$this.params[alias]={'sort':{}}}$timeout(function(){$this.params[alias]['sort']['created']=created;$this.params[alias]['sort']['modified']=modified},200)}function disabled(parent_alias,alias){_.each($this.query.params.sort,function(param){if(alias==param.alias&&param.parent_alias==parent_alias){return true}else{return false}})}function convert(){$this.paramsF=$filter('filter')($this.query.params.sort,{parent_alias:$this.parentAlias})}function remove_childs(alias){_.each($this.query.params.sort,function(param,index){if(param&&param.parent_alias==alias){var _alias=param.param.alias,param_type_id=param.param.param_type_id;$this.query.params.sort.splice(index,1);if(nested_ids[param_type_id]){remove_childs(_alias)}}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParamSelector',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/s3.dynamic.query.search.param.selector.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'query':'=','params':'=','parentAlias':'='}}}controller.$inject=['_'];function controller(_){var $this=this;this.add=add;this.remove=remove;if(!this.parentAlias){this.parentAlias=''}activate();function add(){if(!_.isObject($this.query.params)){$this.query.params={}}if(_.isEmpty($this.query.params.search)){$this.query.params.search={}}$this.query.params.search['_'+Date.now()]={'full':1,'parent_alias':($this.parentAlias?$this.parentAlias:'')}}function remove(k){delete $this.query.params.search[k]}function activate(){if(typeof $this.params[$this.parentAlias]!='undefined'&&!_.isObject($this.params[$this.parentAlias].search)){$this.params[$this.parentAlias].search={}}else if(typeof $this.params[$this.parentAlias]=='undefined'){$this.params[$this.parentAlias]={'search':{}}}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParamItem',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/item/s3.dynamic.query.search.param.item.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','params':'=','list':'=','key':'@','full':'@'}}}controller.$inject=['$scope','_','dynamicParamDataService'];function controller($scope,_,dynamicParamDataService){var $this=this,nested_ids={12:true,19:true,21:true},loading=false;this.full=parseInt($this.full)||0;this.query={'params':{'search':this.list}};if(_.isArray($this.param.value_json)||!_.size($this.param.value_json)){$this.param.value_json={}}this.remove=remove;this.isNested=false;isNested();$scope.$watch(function(){return $this.full},function(a,b){if(a==1){if(typeof $this.param.value_json.param_mode=='undefined'){$this.param.value_json['param_mode']='and'}}if(loading==false&&a==1&&$this.isNested&&$this.param.param&&_.size($this.params)&&(_.size($this.params[$this.param.param.alias])||_.size($this.params[$this.param.param.alias]['search']))){$this.full=0;loading=true;dynamicParamDataService.getParamsDynamicParam({'param_id':$this.param.param.param_id}).then(function(response){if(!$this.params[$this.param.param.alias]){$this.params[$this.param.param.alias]={}}$this.params[$this.param.param.alias]['search']=response;$this.full=1})}});$scope.$watch(function(){return $this.param.param},function(a,b){if(typeof a!='undefined'&&(typeof b=='undefined'||a.alias!=b.alias)){isNested();if((!$this.params[$this.param.param.alias]||!$this.params[$this.param.param.alias]['search'])&&$this.isNested){dynamicParamDataService.getParamsDynamicParam({'param_id':$this.param.param.param_id,'type_param':'search'}).then(function(response){if(!$this.params[$this.param.param.alias]){$this.params[$this.param.param.alias]={}}$this.params[$this.param.param.alias]['search']=response})}}});function remove(){if($this.param.param&&$this.param.param.alias){remove_childs($this.param.param.alias)}delete $this.list[$this.key]}function isNested(){if($this.param&&$this.param.param&&nested_ids[$this.param.param.param_type_id]){return $this.isNested=true}else{return $this.isNested=false}}function remove_childs(alias){_.each($this.list,function(param,key){if(param&&param.parent_alias==alias){var _alias=param.param.alias,param_type_id=param.param.param_type_id;delete $this.list[key];if(nested_ids[param_type_id]){remove_childs(_alias)}}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParam12Object',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/item/param.types/12.object/s3.dynamic.query.search.param.12.object.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','json':'='}}}controller.$inject=['_'];function controller(_){var $this=this;if(_.isEmpty($this.param.link)){$this.param.link={}}if(_.isEmpty($this.param.link.objects)){$this.param.link.objects={}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParam1Text',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/item/param.types/1.text/s3.dynamic.query.search.param.1.text.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','json':'='}}}controller.$inject=['_'];function controller(_){var $this=this,not_multiple=['30','31'];this.remove=remove;this.add=add;isMultiple();if(typeof this.json.value=='string'){this.json.value=[this.json.value]}else if(typeof this.json.value=='undefined'){this.json.value=[]}if(typeof this.json.mode=='undefined'&&this.multiple){$this.json.mode='and'}if(_.size($this.json.value)==0){add()}function remove(i){$this.json.value.splice(i,1)}function add(){$this.json.value.push('')}function isMultiple(){if(not_multiple.indexOf($this.param.param.param_type_id)>-1){$this.multiple=false}else{$this.multiple=true}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParam2Integer',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/item/param.types/2.integer/s3.dynamic.query.search.param.2.integer.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','json':'='}}}controller.$inject=['_'];function controller(_){var $this=this,range_type=['9','10'];this.remove=remove;this.add=add;this.isRange=isRange;isRangeType();if(typeof this.json.value=='string'||(typeof this.json.value=='object'&&(typeof this.json.value.from!='undefined'||typeof this.json.value.to!='undefined'))){this.json.value=[this.json.value]}else if(typeof this.json.value=='undefined'){this.json.value=[]}if(typeof this.json.mode=='undefined'){$this.json.mode='and'}if(_.size($this.json.value)==0){add()}function remove(i){$this.json.value.splice(i,1)}function add(interval){if(interval){if($this.rangeType){$this.json.value.push({"from":0,"relation":"intersects"})}else{$this.json.value.push({"from":0})}}else{$this.json.value.push('')}}function isRangeType(){if(range_type.indexOf($this.param.param.param_type_id)==-1){$this.rangeType=false}else{$this.rangeType=true}}function isRange(value){if(typeof value!='string'){return true}else{return false}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParam22Email',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/item/param.types/22.email/s3.dynamic.query.search.param.22.email.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','json':'='}}}controller.$inject=['_'];function controller(_){var $this=this;this.remove=remove;this.add=add;this.isType=isType;if(typeof this.json.value=='string'){this.json.value=[this.json.value]}else if(typeof this.json.value=='undefined'){this.json.value=[]}if(typeof this.json.mode=='undefined'){$this.json.mode='and'}if(_.size($this.json.value)==0){add()}function remove(i){$this.json.value.splice(i,1)}function add(field){if(field=='name'){$this.json.value.push({"name":""})}else if(field=='domain'){$this.json.value.push({"domain":""})}else{$this.json.value.push("")}}function isType(value){if(typeof value=='string'){return'email'}else if(typeof value=='object'){if(typeof value.domain!='undefined'){return'domain'}else if(typeof value.name!='undefined'){return'name'}}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParam29Datetime',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/item/param.types/29.datetime/s3.dynamic.query.search.param.29.datetime.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','json':'='}}}controller.$inject=['_'];function controller(_){var $this=this,range_type=['11'];this.remove=remove;this.add=add;this.isRange=isRange;isRangeType();if(typeof this.json.value=='string'||(typeof this.json.value=='object'&&(typeof this.json.value.from!='undefined'||typeof this.json.value.to!='undefined'))){this.json.value=[JSON.parse(JSON.stringify(this.json.value))]}else if(typeof this.json.value=='undefined'){if(typeof this.json=='string'||(typeof this.json=='object'&&(typeof this.json.from!='undefined'||typeof this.json.to!='undefined'))){this.json.value=[JSON.parse(JSON.stringify(this.json))]}else{this.json.value=[]}}if(typeof this.json.mode=='undefined'){$this.json.mode='and'}if(_.size($this.json.value)==0){add()}function remove(i){$this.json.value.splice(i,1)}function add(interval){if(interval){if($this.rangeType){$this.json.value.push({"from":'now',"relation":"intersects"})}else{$this.json.value.push({"from":'now'})}}else{$this.json.value.push('')}}function isRangeType(){if(range_type.indexOf($this.param.param.param_type_id)==-1){$this.rangeType=false}else{$this.rangeType=true}}function isRange(value){if(typeof value!='string'){return true}else{return false}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParam14Boolean',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/item/param.types/14.boolean/s3.dynamic.query.search.param.14.boolean.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'param':'=','json':'='}}}controller.$inject=['_'];function controller(_){var $this=this}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQuerySearchParam4List',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/search/item/param.types/4.list/s3.dynamic.query.search.param.4.list.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'params':'=','param':'=','json':'='}}}controller.$inject=['_','dynamicParamDataService'];function controller(_,dynamicParamDataService){var $this=this;activate();if(_.isEmpty($this.param.param.options)){_.each($this.params,function(param){if(param.alias==$this.param.param.alias){$this.param.param['options']=param.options}})}if(_.isEmpty($this.param.link)){$this.param.link={}}if(_.isEmpty($this.param.link.objects)){$this.param.link.objects={}}function activate(){if(!$this.param.param.options){dynamicParamDataService.getParamOptions({param_id:$this.param.param.param_id}).then(function(response){if(response.options){$this.param.param.options=response.options}})}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQueryTypeSelector',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/type/s3.dynamic.query.type.selector.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'target':'=','callback':'=','mode':'@'}}}controller.$inject=['_','dynamicTypeService'];function controller(_,dynamicTypeService){var $this=this;this.openSelector=openSelector;this.remove=remove;function openSelector(){if(!_.isObject($this.target[$this.mode])||_.isEmpty($this.target[$this.mode])){$this.target[$this.mode]={}}var data={'list':$this.target[$this.mode],'callback':$this.callback,'load_params':true};if($this.mode=='return_types'){data['dt_type_ids']=Object.keys($this.target.types)}dynamicTypeService.selector(data)}function remove(k){delete $this.target[$this.mode][k];if(typeof $this.callback==='function'){$this.callback($this.target[$this.mode][k])}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQueryAggrParamSelector',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/aggr/s3.dynamic.query.aggr.param.selector.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'query':'='}}}controller.$inject=['_','dynamicParamService'];function controller(_,dynamicParamService){var $this=this;this.openSelector=openSelector;this.remove=remove;function openSelector(){if(!_.isObject($this.query.params.aggr)||!_.size($this.query.params.aggr)){$this.query.params.aggr={}}dynamicParamService.selector({'global':$this.query.ver_id==0?1:0,'model':$this.query.params.aggr,'dt_type_ids':Object.keys($this.query.types)})}function remove(k){delete $this.query.params.aggr[k]}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQueryOnlyParamSelector',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/edit/params/only/s3.dynamic.query.only.param.selector.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'query':'=','parentAlias':'=','paramTypes':'='}}}controller.$inject=['$filter','_','dynamicParamService'];function controller($filter,_,dynamicParamService){var $this=this,nested_ids={12:true,19:true,21:true};this.openSelector=openSelector;this.remove=remove;this.isNested=isNested;this.isMultiple=isMultiple;function openSelector(){if(!_.isObject($this.query.params.only)||!_.size($this.query.params.only)){$this.query.params.only={}}var model={},links={},dt_type_ids=($this.parentAlias==''?Object.keys($this.query.types):(_.size($this.query.return_types)?Object.keys($this.query.return_types):0));if($this.parentAlias==''){if(_.size($this.query.return_types)){dt_type_ids=Object.keys($this.query.return_types)}else{dt_type_ids=Object.keys($this.query.types)}}else{_.forEach($this.paramTypes,function(params,dt_type_id){if(typeof params[$this.parentAlias]!='undefined'){dt_type_ids=[dt_type_id]}})}_.each($this.query.params.only,function(param,key){if(param.parent_alias==$this.parentAlias){model[param.param.alias]=param.param;links[param.param.alias]=key}});dynamicParamService.selector({'global':$this.query.ver_id==0?1:0,'modal_ver_id':$this.query.ver_id,'model':model,'dt_type_ids':dt_type_ids?dt_type_ids:[],'alias':$this.parentAlias,'type_param':'only','callback':function(param){if(model[param.alias]){links[param.alias]='_'+Date.now();$this.query.params.only[links[param.alias]]={'parent_alias':$this.parentAlias,'full':0,'alias   ':param.alias,'param':param,'dt_type_id':param.dt_type_id,'value_json':{'count':5}}}else{delete $this.query.params.only[links[param.alias]]}}})}function remove(k){remove_childs($this.query.params.only[k].param.alias);delete $this.query.params.only[k]}function isNested(param){if(param&&nested_ids[param.param_type_id]){return true}else{return false}}function isMultiple(param){var result=false;if(param.param){if(typeof $this.paramTypes[param.parent_alias]=='undefined'){_.forEach($this.paramTypes,function(params){if(params[param.param.alias]&&params[param.param.alias]['multiple']==1){result=true}})}else if($this.paramTypes[param.parent_param_id][param.param.alias]['multiple']==1){result=true}else{result=false}if(result&&_.size(param['value_json'])==0){param['value_json']={'count':0}}}else{result=false}return result}function remove_childs(alias){_.each($this.query.params.only,function(param,key){if(param&&param.parent_alias==alias){var _alias=param.param.alias,param_type_id=param.param.param_type_id;delete $this.query.params.only[key];if(nested_ids[param_type_id]){remove_childs(_alias)}}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicQueryList',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/query/list/s3.dynamic.query.list.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'list':'='}}}controller.$inject=['_','dynamicQueryService'];function controller(_,dynamicQueryService){var $this=this;this.edit=edit;this.remove=remove;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};function edit(query){dynamicQueryService.edit({dt_query_id:query.dt_query_id}).then(function(modal){modal.close.then(function(response){if(response&&_.isObject(response.query)&&response.query.dt_query_id){$this.list[response.query.dt_query_id]=response.query}})})}function remove(query){dynamicQueryService.remove(query,$this.list)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('dynamicCurrentFolderPanel',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/main/directive/dynamic.current.folder.panel.html','controller':controller,'controllerAs':'Panel'}}controller.$inject=[''];function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicEventList',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/event/list/s3.dynamic.event.list.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'list':'='}}}controller.$inject=['_','dynamicEventService'];function controller(_,dynamicEventService){var $this=this;this.edit=edit;this.remove=remove;this.onSuccess=function(e){util.msg(JS_COPIED+": \""+e.text+"\"");e.clearSelection()};function edit(event){dynamicEventService.edit({event_id:event.event_id}).then(function(modal){modal.close.then(function(response){if(_.isObject(response.event)&&response.event.event_id){$this.list[response.event.event_id]=response.event}})})}function remove(event){dynamicEventService.remove(event.event_id,$this.list)}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').directive('s3DynamicTagList',directive);function directive(){return{'restrict':'E','replace':true,'scope':{'type':'@','ctrl':'='},'templateUrl':'/my/s3/js/angular/s3/data/dynamic/tag/list/dynamic.tag.list.html','controller':controller,'controllerAs':'Selector','bindToController':true}}controller.$inject=['dynamicTagService','dynamicTagDataService'];function controller(dynamicTagService,dynamicTagDataService){var $this=this,type=this.type,divContextMenu='s3-tree-context',lastContext=0;this.active=-1;this.add=add;this.edit=edit;this.remove=dynamicTagService.remove;this.contextEdit=contextEdit;this.contextDelete=contextDelete;this.contextMenu=contextMenu;this.select=select;this.getWidth=getWidth;this.closeTagBlock=closeTagBlock;this.openTagBlock=openTagBlock;activate();function getWidth(){var cookie_name='foldersWidth_'+$this.type;return(util.readCookie(cookie_name)?util.readCookie(cookie_name):268).toString()+'px'}function closeTagBlock(){var elem=$('.dt-tag-list .s3-tree-close-btn'),tree=$(elem).parents('.tree-wrapper'),folders=tree.find('.s3-tree-wrapper'),foldersWidth=parseInt(folders.width());elem.next().removeClass('disable');if(elem.hasClass('disable')){return false}if(foldersWidth>0){folders.animate({width:0,},600,function(){util.createCookie('foldersWidth_'+$this.type,0);elem.addClass('disable')})}}function openTagBlock(){var elem=$('.dt-tag-list .s3-tree-open-btn'),tree=$(elem).parents('.tree-wrapper'),folders=tree.find('.s3-tree-wrapper'),foldersWidth=parseInt(folders.width()),childWidth=parseInt(folders.find('.s3-tree-wrapper-in:first').outerWidth()),flag=false;elem.prev().removeClass('disable');if(childWidth<=268){childWidth=268;flag=true}if($(elem).hasClass('disable')){return false}if(foldersWidth==0){folders.animate({width:268},600,function(){elem.prev().removeClass('disable');util.createCookie('foldersWidth_'+$this.type,268);if(flag){elem.addClass('disable')}})}else{folders.animate({width:childWidth},600,function(){elem.addClass('disable');util.createCookie('foldersWidth_'+$this.type,childWidth)})}}function activate(){dynamicTagDataService.getList().then(function(response){if(_.size(response)>0){$this.list=response}else{$this.list={}}})}function edit(tag){dynamicTagService.edit({type:type,tag_id:tag.tag_id,list:$this.list})}function contextEdit(event){if(event){var tag=$(event.currentTarget).data('tag')}return edit(tag)}function add(){dynamicTagService.add({type:type,list:$this.list})}function contextDelete(event){if(event){var tag=$(event.currentTarget).data('tag')}return dynamicTagService.remove(tag.tag_id,$this.list)}function select(tag_id){$this.active=tag_id;$this.ctrl.filterByTag(tag_id)}function contextMenu(tag,event){var contextMenu=$('#'+divContextMenu),target=$(event.currentTarget).parents('.dynatree-node:first'),targetOffset=target.find('.dynatree-context').position();if(contextMenu.is(':visible')){contextMenu.hide();if(lastContext==tag.tag_id){lastContext='';return false}}S3ContextMenuController.openContextMenu(contextMenu,function(context){context.find('li').data('tag',tag);context.find('.folder-id').html(tag.tag_id).attr('data-clipboard-text',tag.tag_id);lastContext=tag.tag_id;context.css({'top':targetOffset.top+21,'left':targetOffset.left})},null,target)}}})(angular);(function(angular){'use strict';angular.module('s3.data.image').directive('s3FileSelector',directive).filter('Filesize',function(){return function(size){if(isNaN(size))size=0;if(size<1024)return size+' Bytes';size/=1024;if(size<1024)return size.toFixed(2)+' Kb';size/=1024;if(size<1024)return size.toFixed(2)+' Mb';size/=1024;if(size<1024)return size.toFixed(2)+' Gb';size/=1024;return size.toFixed(2)+' Tb'}});function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/file/selector/s3.file.selector.html','controller':controller,'controllerAs':'Ctrl','scope':{'model':'=','limit':'=','multiple':'=','param':'='},'bindToController':true}}controller.$inject=['$scope','_','ACCESS','s3PopupService'];function controller($scope,_,ACCESS,s3PopupService){var $this=this,max_values=this.limit,multiple=this.multiple,selectDisabled=false;this.selector=selector;this.remove=remove;this.sortableOptions={handle:'> .sort-handler',stop:function(){positionsCheck()},axis:'y'};if(multiple==1&&max_values==0){max_values=100}if(multiple==0){max_values=0}function selector(){$this.limit=parseInt($this.limit);if(isNaN($this.limit)||$this.limit<1){$this.limit=10}var fileInputs,selectedIds=[];_.forEach($this.model,function(file){selectedIds.push(file.file_id)});openAjaxForm('/-/cms/v1/file/?popup=1&selector=1&'+ACCESS+'&rnd=592&xhr=1&selected_ids='+selectedIds.join(),function(){},function(){s3PopupService.closeLast('mouse')},function(){},{},function(content){var thisPopup=$(document).find('[id^="ajaxPopupWindow"]:last');thisPopup.find('.s3-files').addClass('file-wrapper-for-dynamic');fileInputs='#file_container .box .wrap-name';_.forEach($this.model,function(file){$('#file'+file.file_id).addClass('dynamic-selected-file')});multipleCheck();thisPopup.off('click',fileInputs);thisPopup.on('click',fileInputs,function(event){if($(event.target).hasClass('wrap-name')){var element=$(this),li=element.parents('li.box'),file_json=li.find('input[name="file_json"]').val(),file=JSON.parse(file_json),is_checked=li.hasClass('dynamic-selected-file');if(is_checked){li.removeClass('dynamic-selected-file');util.msg(s3.loc('JS_CANCELLED'));remove(file)}else{if(multiple==1&&$this.model.length>=max_values){util.msg(s3.loc('JS_SELECTED')+" "+$this.model.length+" X "+max_values)}else{li.addClass('dynamic-selected-file');util.msg(s3.loc('JS_ADDED_TO_LIST'));select(file)}}$scope.$apply()}});s3PopupService.setClose()})}function select(file){if(multiple==0){$this.model.length=0}file['position']=$this.model.length;$this.model.push(file);if(multiple==0){popupController.closeLastPopup()}multipleCheck()}function remove(file){_.forEach($this.model,function(fl,index){if(fl&&file.file_id==fl.file_id){$this.model.splice(index,1)}});positionsCheck();multipleCheck()}function positionsCheck(){_.forEach($this.model,function(file,index){file['position']=index})}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){selectDisabled=true}else{selectDisabled=false}}}})(angular);(function(angular){'use strict';angular.module('s3.data.image').directive('s3FolderSelector',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/folder/selector/s3.shop2.folder.selector.html','controller':controller,'controllerAs':'Ctrl','scope':{'model':'=','limit':'=','multiple':'=','param':'='},'bindToController':true}}controller.$inject=['$scope','_','ACCESS','s3PopupService'];function controller($scope,_,ACCESS,s3PopupService){var $this=this,max_values=this.limit,multiple=this.multiple,selectDisabled=false;this.selector=selector;this.remove=remove;this.sortableOptions={handle:'> .sort-handler',stop:function(){positionsCheck()},axis:'y'};if(multiple==1&&max_values==0){max_values=100}if(multiple==0){max_values=0}function selector($event){$this.limit=parseInt($this.limit);if(isNaN($this.limit)||$this.limit<1){$this.limit=10}var inputs,selectedIds=[];treeController.load('select',39,$this.param.shop_id,$event.currentTarget,null,'',1,null,true,null,0,function(){inputs=$('.s3-tree.select .s3-cb');_.forEach($this.model,function(folder){var inputchecked=$('input[value='+folder.folder_id+']'),inputparent=inputchecked.parent('.s3-cb');inputchecked.attr("checked",true);inputparent.addClass('active');inputparent.parents("#dynatree-id-"+folder.folder_id).addClass('active')});folderController.click=function(e){var parent=$("#dynatree-id-"+e),input=$('input[value='+e+']'),folder={folder_id:input.val(),name:input.data('name'),},is_checked=input.attr("checked")=='checked'?true:false;if(is_checked){input.parent('.s3-cb').removeClass('active');parent.removeClass('active');input.attr('checked',false);remove(folder);util.msg(s3.loc('JS_CANCELLED'))}else{if(multiple==1&&$this.model.length>=max_values){util.msg(s3.loc('JS_SELECTED')+" "+$this.model.length+" X "+max_values)}else{input.parent('.s3-cb').addClass('active');parent.addClass('active');input.attr('checked',true);select(folder);util.msg(s3.loc('JS_ADDED_TO_LIST'))}}$scope.$apply()}})}function select(folder){if(multiple==0){$this.model.length=0}folder['position']=$this.model.length;$this.model.push(folder);if(multiple==0){popupController.closeLastPopup()}multipleCheck()}function remove(folder){_.forEach($this.model,function(fl,index){if(fl&&folder.folder_id==fl.folder_id){$this.model.splice(index,1)}});positionsCheck();multipleCheck()}function positionsCheck(){_.forEach($this.model,function(file,index){file['position']=index})}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){selectDisabled=true}else{selectDisabled=false}}}})(angular);(function(angular){'use strict';angular.module('s3.data.user').directive('s3UserSelector',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/user/selector/directive/s3.user.selector.html','controller':controller,'controllerAs':'Ctrl','scope':{'model':'=','limit':'=','multiple':'=','param':'=','object':'='},'bindToController':true}}controller.$inject=['$scope','ACCESS','s3PopupService'];function controller($scope,ACCESS,s3PopupService){var $this=this,winOpened=false,max_values=this.limit,multiple=this.multiple,selectDisabled=false;this.selector=selector;this.remove=remove;if(multiple==1&&max_values==0){max_values=100}if(multiple==0){max_values=0}function selector(){var userInputs,selectedIds=[];_.forEach($this.model,function(user){selectedIds.push(user.user_id)});openAjaxForm('/-/cms/v1/user/?act=index&popup=1&selector=1&multiple=0&'+ACCESS+'&type_group_id=0&rnd=592&xhr=1&dynamic=1&selected_ids='+selectedIds.join(),function(){},function(){winOpened=false;s3PopupService.closeLast('mouse')},function(){},{},function(content){var thisPopup=$(document).find('[id^="ajaxPopupWindow"]:last');thisPopup.find('.content-wrapper > #users_container').addClass('user-wrapper-for-dynamic');if($this.model.toString()==='[object Object]'&&$this.model.length==0){$this.model=[]}userInputs='.objectAction';_.forEach($this.model,function(user){thisPopup.find('#users_'+user.user_id).addClass('dynamic-selected-user').find('.objectAction').text(s3.loc('JS_CANCEL'))});multipleCheck();thisPopup.off('mouseover',userInputs);thisPopup.on('mouseover',userInputs,function(){$(this).removeAttr('onclick')});thisPopup.off('click',userInputs);thisPopup.on('click',userInputs,function(event){var wrap_element=$(this).parents('tr:first'),element=wrap_element.find('input[name="user"]'),user=JSON.parse(element.val()),is_checked=wrap_element.hasClass('dynamic-selected-user');if(is_checked){wrap_element.removeClass('dynamic-selected-user').find('.objectAction').text(s3.loc('CHOOSE'));util.msg(s3.loc('JS_CANCELLED'));remove(user)}else{if(multiple==1&&$this.model.length>=max_values){util.msg(s3.loc('JS_SELECTED')+" "+$this.model.length+" X "+max_values)}else{wrap_element.addClass('dynamic-selected-user').find('.objectAction').text(s3.loc('JS_CANCEL'));util.msg(s3.loc('JS_ADDED_TO_LIST'));select(user)}}$scope.$apply()});if(!winOpened){s3PopupService.setClose();winOpened=true}})}function select(user){if(multiple==0){$this.model.length=0}$this.model.push(user);if(multiple==0){popupController.closeLastPopup()}multipleCheck()}function remove(user){_.forEach($this.model,function(usr,index){if(usr&&user.user_id==usr.user_id){$this.model.splice(index,1)}});multipleCheck()}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){selectDisabled=true}else{selectDisabled=false}}}})(angular);(function(angular){'use strict';angular.module('s3.data.image').directive('s3ProductSelector',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/product/selector/s3.shop2.product.selector.html','controller':controller,'controllerAs':'Ctrl','scope':{'model':'=','limit':'=','multiple':'=','param':'='},'bindToController':true}}controller.$inject=['$scope','_','ACCESS','s3PopupService'];function controller($scope,_,ACCESS,s3PopupService){var $this=this,max_values=this.limit,multiple=this.multiple,selectDisabled=false;this.selector=selector;this.editproduct=editproduct;this.remove=remove;this.sortableOptions={handle:'> .sort-handler',stop:function(){positionsCheck()},axis:'y'};if(multiple==1&&max_values==0){max_values=100}if(multiple==0){max_values=0}function editproduct(shop_id,product_id,folder_id){openAjaxForm('/-/cms/v1/shop2/product/?act=edit&popup=1&help=edit&'+S3_ACCESS+'&folder_id='+folder_id+'&shop_id='+shop_id+'&product_id='+product_id,function(r){var text=r.text,div=$('<div>').html(text),name=div.find('.shop2-product-name').text();_.forEach($this.model,function(product){if(product.product_id==product_id){product.name=name}});$scope.$apply();popupController.closeLastPopup()},function(){s3PopupService.closeLast('mouse')},function(r){var text=r.text,div=$('<div>').html(text),name=div.find('.shop2-product-name').text();_.forEach($this.model,function(product){if(product.product_id==product_id){product.name=name}});$scope.$apply()},{},function(r){s3PopupService.setClose()})}function selector(){$this.limit=parseInt($this.limit);if(isNaN($this.limit)||$this.limit<1){$this.limit=10}var inputs,input,shop_id,selectedIds=[];_.forEach($this.model,function(product){selectedIds.push(product.product_id)});openAjaxForm('/-/cms/v1/shop2/select/product/?popup=1&act=for_all&&'+ACCESS+'&selected='+selectedIds.join(),function(){},function(){s3PopupService.closeLast('mouse')},function(){},{},function(content){inputs=$('#shop2_for_all_container .box .s3-cb');input=inputs.find('input');shop_id=$('input[name=shop_id]').val();_.forEach($this.model,function(product){$('#shop2_collect_product_'+product.product_id).addClass('active');$('.s3-cb[data-class-target=#shop2_collect_product_'+product.product_id+']').addClass('active');$('input[value='+product.product_id+']').attr('checked',true)});multipleCheck();inputs.on('change','input',function(){var element=$(this),product={product_id:element.val(),name:element.data('name'),shop_id:shop_id},is_checked=element.attr("checked")=='checked'?true:false;if(is_checked){if(multiple==1&&$this.model.length>=max_values){$('#shop2_collect_product_'+product.product_id).removeClass('active');$('.s3-cb[data-class-target=#shop2_collect_product_'+product.product_id+']').removeClass('active');$('input[value='+product.product_id+']').attr('checked',false);util.msg(s3.loc('JS_SELECTED')+" "+$this.model.length+" X "+max_values)}else{util.msg(s3.loc('JS_ADDED_TO_LIST'));select(product)}}else{util.msg(s3.loc('JS_CANCELLED'));remove(product)}$scope.$apply()});s3PopupService.setClose()})}function select(product){if(multiple==0){$this.model.length=0}product['position']=$this.model.length;$this.model.push(product);if(multiple==0){popupController.closeLastPopup()}multipleCheck()}function remove(product){_.forEach($this.model,function(fl,index){if(fl&&product.product_id==fl.product_id){$this.model.splice(index,1)}});positionsCheck();multipleCheck()}function positionsCheck(){_.forEach($this.model,function(file,index){file['position']=index})}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){selectDisabled=true}else{selectDisabled=false}}}})(angular);(function(angular){'use strict';angular.module('s3.data.image').directive('s3ImageSelector',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/image/selector/directive/s3.image.selector.html','controller':controller,'controllerAs':'Ctrl','scope':{'model':'=','limit':'=','multiple':'=','param':'=','object':'='},'bindToController':true}}controller.$inject=['$scope','eventManagerService','ACCESS','s3PopupService','$sce'];function controller($scope,eventManagerService,ACCESS,s3PopupService,$sce){var $this=this,winOpened=false,max_values=this.limit,multiple=this.multiple,selectDisabled=false;this.selector=selector;this.remove=remove;this.edit=edit;this.asHtml=asHtml;this.sortableOptions={stop:function(){positionsCheck()}};if(multiple==1&&max_values==0){max_values=100}if(multiple==0){max_values=0}function selector(){var imageInputs,selectedIds=[];_.forEach($this.model,function(image){selectedIds.push(image.image_id)});openAjaxForm('/-/cms/v1/image/?popup=1&selector=1&multiple=0&'+ACCESS+'&type_group_id=0&rnd=592&xhr=1&dynamic=1&selected_ids='+selectedIds.join(),function(){},function(){winOpened=false;s3PopupService.closeLast('mouse');trigger()},function(){},{},function(content){var thisPopup=$(document).find('[id^="ajaxPopupWindow"]:last');thisPopup.find('.content-wrapper > .image-wrapper').addClass('image-wrapper-for-dynamic');if($this.model.toString()==='[object Object]'&&$this.model.length==0){$this.model=[]}imageInputs='.image-element';_.forEach($this.model,function(image){thisPopup.find('#image'+image.image_id+' .image').addClass('dynamic-selected-image')});multipleCheck();thisPopup.off('click',imageInputs);thisPopup.on('click',imageInputs,function(event){if($(event.target).hasClass('image-wrapper')){var element=$(this).find('.image'),image={'image_id':element.data('image_id'),'filepath':element.data('filepath'),'image_thumb':element.data('thumb'),'width':element.data('width'),'height':element.data('height')},is_checked=element.hasClass('dynamic-selected-image');if(is_checked){element.removeClass('dynamic-selected-image');util.msg(s3.loc('JS_CANCELLED'));remove(image)}else{if(multiple==1&&$this.model.length>=max_values){util.msg(s3.loc('JS_SELECTED')+" "+$this.model.length+" X "+max_values)}else{element.addClass('dynamic-selected-image');util.msg(s3.loc('JS_ADDED_TO_LIST'));select(image)}}$scope.$apply()}});if(!winOpened){s3PopupService.setClose();winOpened=true}})}function select(image){if(multiple==0){$this.model.length=0}image['position']=$this.model.length;$this.model.push(image);if(multiple==0){popupController.closeLastPopup()}multipleCheck()}function remove(image){_.forEach($this.model,function(img,index){if(img&&image.image_id==img.image_id){$this.model.splice(index,1)}});positionsCheck();multipleCheck();trigger()}function positionsCheck(){_.forEach($this.model,function(image,index){image['position']=index})}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){selectDisabled=true}else{selectDisabled=false}}function edit(event,image){openAjaxForm('/-/cms/v1/image/?act=edit&object_id='+image.image_id+'&'+ACCESS,function(){winOpened=false;s3PopupService.closeLast('mouse')},function(){winOpened=false;s3PopupService.closeLast('mouse')},function(){winOpened=false;s3PopupService.closeLast('mouse')},{},function(){if(!winOpened){s3PopupService.setClose();winOpened=true}})}function asHtml(html){return $sce.trustAsHtml(html)}function trigger(){eventManagerService.trigger('objectEdit.imageSelectorClosed'+$this.param.alias)}}})(angular);(function(angular){'use strict';angular.module('s3.data.image').directive('s3VendorSelector',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/data/vendor/selector/s3.shop2.vendor.selector.html','controller':controller,'controllerAs':'Ctrl','scope':{'model':'=','limit':'=','multiple':'=','param':'='},'bindToController':true}}controller.$inject=['$scope','_','ACCESS','s3PopupService'];function controller($scope,_,ACCESS,s3PopupService){var $this=this,max_values=this.limit,multiple=this.multiple,selectDisabled=false;this.selector=selector;this.remove=remove;this.sortableOptions={handle:'> .sort-handler',stop:function(){positionsCheck()},axis:'y'};if(multiple==1&&max_values==0){max_values=100}if(multiple==0){max_values=0}function selector(){$this.limit=parseInt($this.limit);if(isNaN($this.limit)||$this.limit<1){$this.limit=10}var inputs,input,selectedIds=[];_.forEach($this.model,function(vendor){selectedIds.push(vendor.vendor_id)});console.log(selectedIds);openAjaxForm('/-/cms/v1/shop2/vendor/?popup=1&dynamic=1&shop_id='+$this.param.shop_id+'&ver_id='+VER_ID+'&access='+ACCESS+'&selected='+selectedIds.join(),function(){},function(){s3PopupService.closeLast('mouse')},function(){},{},function(content){inputs=$('#shop2_vendors_container .box .s3-cb');input=inputs.find('input');multipleCheck();inputs.on('change','input',function(){var element=$(this),vendor={vendor_id:element.val(),name:element.attr('name'),},is_checked=element.attr("checked")=='checked'?true:false;console.log(vendor,element);if(is_checked){if(multiple==1&&$this.model.length>=max_values){$('.s3-cb[data-class-target=#shop2_vendor_'+vendor.vendor_id+']').removeClass('active');$('input[value='+vendor.vendor_id+']').attr('checked',false);util.msg(s3.loc('JS_SELECTED')+" "+$this.model.length+" X "+max_values)}else{util.msg(s3.loc('JS_ADDED_TO_LIST'));select(vendor)}}else{util.msg(s3.loc('JS_CANCELLED'));remove(vendor)}$scope.$apply()});s3PopupService.setClose()})}function select(vendor){if(multiple==0){$this.model.length=0}vendor['position']=$this.model.length;$this.model.push(vendor);if(multiple==0){popupController.closeLastPopup()}multipleCheck()}function remove(vendor){_.forEach($this.model,function(fl,index){if(fl&&vendor.vendor_id==fl.vendor_id){$this.model.splice(index,1)}});positionsCheck();multipleCheck()}function positionsCheck(){_.forEach($this.model,function(vendor,index){vendor['position']=index})}function multipleCheck(){if(multiple>0&&$this.model.length>=max_values){selectDisabled=true}else{selectDisabled=false}}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('s3TreeSortable',directive).config(treeConfig);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/widgets/directives/tree.sortable/s3.tree.sortable.html','controller':controller,'controllerAs':'Ctrl','bindToController':true,'scope':{'itemTemplate':'@','data':'=','scheme':'=','beforeDrop':'='}}}treeConfig.$inject=['$rootScopeProvider'];function treeConfig($rootScopeProvider){$rootScopeProvider.digestTtl(30)}controller.$inject=['$scope','$q'];function controller($scope,$q){var $this=this;this.toggle=toggle;this.options=options();$scope.collapseAll=function(){$scope.$broadcast('angular-ui-tree:collapse-all')};$scope.expandAll=function(){$scope.$broadcast('angular-ui-tree:expand-all')};function toggle(scope){scope.toggle()}$scope.$broadcast('angular-ui-tree:expand-all');function options(){var options={dropped:function(event){var source=options._getSource(event.source),parent=options._getParent(event.dest),position=options._getPosition(event.dest),last_position=options._getLastPosition(event.source),move_data=options._getMoveData(source,parent,position,last_position);if(!move_data.mode){return $q.reject()}if(typeof $this.beforeDrop=='function'){return $this.beforeDrop(move_data).then(function(response){if(!response.moved){return $q.reject()}return true})}return $q.reject()},_getParent:function(dest){return dest.nodesScope.$parent.$parent.item},_getSource:function(source){return source.nodeScope.item},_getPosition:function(dest){return dest.index},_getLastPosition:function(source){return source.index},_getMoveData:function(source,parent,index){var mode=false,target={},data,prev;if(!parent){target=$this.scheme;prev=target[index-1]}else{prev=parent.children[index-1]}if(index==0&&parent){target=parent;mode='inside'}else if(index==0&&!parent){target={'object_id':null};mode='before'}else{target=prev;mode='after'}data={'mode':mode,'target':target,'source':source};return data}};return options}function scheme(){return[{'object_id':1,'_level':0,'children':[{'object_id':'1.1','_level':'1','children':[{'object_id':'1.1.1','_level':2,'children':[]},{'object_id':'1.1.2','_level':2,'children':[{'object_id':'1.1.2.1','_level':3,'children':[]},{'object_id':'1.1.2.2','_level':3,'children':[]},{'object_id':'1.1.2.3','_level':3,'children':[]},{'object_id':'1.1.2.4','_level':3,'children':[]}]},{'object_id':'1.1.3','_level':2,'children':[]},{'object_id':'1.1.4','_level':2,'children':[]},{'object_id':'1.1.5','_level':2,'children':[]},{'object_id':'1.1.6','_level':2,'children':[]},{'object_id':'1.1.7','_level':2,'children':[]}]},{'object_id':'1.2','_leve':1,'children':[]},{'object_id':'1.3','_leve':1,'children':[]},{'object_id':'1.4','_leve':1,'children':[]},{'object_id':'1.5','_leve':1,'children':[]},{'object_id':'1.6','_leve':1,'children':[]}]}]}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('s3Tree',directive);function directive(){return{'restrict':'E','replace':true,'scope':{'model':'=','onSelect':'='},'templateUrl':'/my/s3/js/angular/s3/widgets/directives/tree/s3.tree.html','controller':controller,'controllerAs':'Tree','bindToController':true}}controller.$inject=['$scope','$cookies','_','folderService'];function controller($scope,$cookies,_,folderService){var $this=this,cookie_folder_id=$cookies.get('dt_type_folder_id');this.options={nodeChildren:"children",dirSelectable:true,allowDeselect:false,injectClasses:{}};this.expandedFolders=[];this.activeFolderId=0;this.selectedFolder=[];this.expandedFolderIds={};this.expandedFolderIds[0]=true;this.contextMenu=getContextMenu();this.m={_expandByIds:_expandByIds,selectFolder:selectFolder};$scope.$watch(function(){return $this.model},function(){init()});function init(){_expandByIds($this.model);if(cookie_folder_id){var active_folder=_.find($this.model,function(folder){return folder.folder_id==cookie_folder_id});if(active_folder){selectFolder(active_folder)}}}function _expandByIds(folders){var folder_id;angular.forEach(folders,function(folder){folder_id=folder.folder_id;if($this.expandedFolderIds[folder_id]){$this.expandedFolders.push(folder)}if($this.activeFolderId==folder_id){$this.selectedFolder=folder}if(angular.isArray(folder.children)){_expandByIds(folder.children)}})}function selectFolder(folder){var folder_id=folder.folder_id;$this.activeFolderId=folder_id;$cookies.put('dt_type_folder_id',folder_id);if(typeof $this.onSelect=='function'){$this.onSelect(folder)}}function getContextMenu(){return[['Добавить',addSubfolder],['Редактировать',editFolder],['Удалить',removeFolder]]}function addSubfolder($itemScope,$event,model){return folderService.add(model.folder_id,function(folder){if(!_.isEmpty(folder)&&_.isObject(folder)){if(!_.isArray(model.children)){model.children=[]}model.children.push(folder)}})}function editFolder($itemScope,$event,model){return folderService.edit(model.folder_id,function(folder){if(!_.isEmpty(folder)&&_.isObject(folder)){$itemScope.node=folder}})}function removeFolder($itemScope,$event,model){return folderService.remove(model.folder_id,function(response){console.log(response);if(_.isObject(response.folders)){$this.model=response.folders}})}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('ngRightClick',directive);directive.$inject=['$parse'];function directive($parse){return function(scope,element,attrs){var fn=$parse(attrs.ngRightClick);element.bind('contextmenu',function(event){scope.$apply(function(){event.preventDefault();fn(scope,{$event:event})})})}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('s3TabPane',directive);function directive(){return{require:'^s3Tabs',restrict:'E',templateUrl:'/my/s3/js/angular/s3/widgets/directives/tab/s3.tab.pane.html',transclude:true,scope:{titlePane:'@',dtGroupId:'@'},link:function(scope,element,attrs,tabsCtrl){tabsCtrl.addPane(scope)}}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('s3Tabs',directive);function directive(){return{restrict:'E',templateUrl:'/my/s3/js/angular/s3/widgets/directives/tab/s3.tabs.html',replace:true,transclude:true,controller:controller}}controller.$inject=['$element','$scope','eventManagerService'];function controller($element,$scope,eventManagerService){var panes=$scope.panes=[],timer;$scope.select=select;this.addPane=addPane;function select(pane,alias){angular.element(window).trigger('resize');angular.forEach(panes,function(pane){pane.selected=false});pane.selected=true;if(typeof alias=='string'){clearTimeout(timer);timer=setTimeout(function(){window.scrollTo(0,$element.find('.s3_dt_alias_'+alias+':first').offset().top-50)},0)}$scope.$broadcast('tab.selected:'+pane.dtGroupId)}function addPane(pane){if(panes.length===0){$scope.select(pane)}panes.push(pane)}$scope.$on('s3DtGoToPaneAndField',function(event,data){_.each(panes,function(pane){if(data.group_id==pane.dtGroupId){select(pane,data.alias)}})})}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('s3ButtonContext',s3ButtonContext);function s3ButtonContext(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/widgets/directives/button/context/s3.button.context.html','scope':{'title':'@'},'controller':s3ButtonController,'controllerAs':'ctrl','transclude':true}}function s3ButtonController(){var $this=this;this.showed=false;this.toggle=toggle;function toggle(){$this.showed=!$this.showed}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('s3TreeColumn',directive);function directive(){return{'restrict':'E','replace':true,'scope':{'model':'=','onSelect':'='},'templateUrl':'/my/s3/js/angular/s3/widgets/directives/tree-column/s3.tree.column.html','controller':'TreeColumnController','controllerAs':'TreeColumn','bindToController':true}}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('s3PopupClickMenu',directive);function directive(){return{'restrict':'A','controller':controller}}controller.$inject=['$element'];function controller($element){var targetClass='.s3-popup-click-menu',buttons=[];$element.on('click.popupclickmenu','.s3-popup-click-menu-button',function(e){var $this=$(e.target),targetSelector=$this.data('popup-click-menu-target'),target;if(targetSelector){target=$element.find(targetSelector)}else{target=$this.siblings(targetClass)}$(targetClass).css('display','none');buttons.push($this);$this.addClass('active');target.css('display','block')});$element.on('click.closepopupclickmenu',function(e){$.each(buttons,function(key,item){item.removeClass('active')});buttons=[];if($(e.target).is('.s3-popup-click-menu-button')){$(e.target).addClass('active');buttons.push($(e.target));return false}$(targetClass).css('display','none')})}})(angular);(function(angular){'use strict';angular.module('s3.widgets').directive('s3NgRepeatFinished',directive);directive.$inject=['$timeout'];function directive($timeout){return{'restrict':'A','link':function(scope,element,attr){if(scope.$last===true){$timeout(function(){scope.$emit(attr.s3NgRepeatFinished)})}}}}})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup').directive('s3PopupFormButtons',directive);function directive(){return{'restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/widgets/popup/form-buttons/s3.popup.form.buttons.html','controller':controller,'controllerAs':'Buttons','bindToController':true,'scope':{'onClose':'=','onSave':'=','onSaveAndClose':'=','hide':'=','type':'@?'}}}controller.$inject=['s3PopupService'];function controller(s3PopupService){var $this=this,lock=false;this.close=close;this.save=save;this.saveAndClose=saveAndClose;function close(){var result=false;if(typeof $this.onClose=='function'){result=$this.onClose()}s3PopupService.closeLast(result)}function save(){if(typeof $this.onSave=='function'&&!lock){lock=true;$this.onSave().then(function(){lock=false},function(){lock=false})}}function saveAndClose(){if(typeof $this.onSave=='function'){$this.onSave().then(function(done){if(typeof done=='undefined'||done){close()}})}}}})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup').directive('s3PopupManager',directive);function directive(){return{'restrict':'A','controller':controller}}controller.$inject=['$window','s3PopupService','keyCodeService'];function controller($document,s3PopupService,keyCodeService){angular.element($document).on('keyup.s3popup',keyPressCallback);function keyPressCallback(event){switch(event.keyCode){case keyCodeService.esc:s3PopupService.closeLast();break}}}})(angular);(function(angular){'use strict';angular.module('s3.widgets.popup').directive('s3PopupDraggable',directive);function directive(){return{'restrict':'A','controller':controller}}controller.$inject=['$window','$element'];function controller($window,$element){var dragObject=$element,dragHelper=$element,newDragHelper=$element.find('.s3-popup-header'),body=$('body'),css={},offsetX=0,offsetY=0;if(newDragHelper.length){dragHelper=newDragHelper;offsetX=30;offsetY=24}dragHelper.on('mousedown.s3.popup',function(down){var _offsetX=down.offsetX,_offsetY=down.offsetY;body.on('mousemove.s3.popup',function(move){css={'left':move.clientX-_offsetX-offsetX+(window.pageXOffset||document.documentElement.scrollLeft),'top':move.clientY-_offsetY-offsetY+(window.pageXOffset||document.documentElement.scrollTop)};dragObject.css(css)});$($window).on('mouseup.s3.popup',function(){body.off('mousemove.s3.popup');$($window).off('mouseup.s3.popup')})}).css({'cursor':'move'})}})(angular);(function(angular){'use strict';angular.module('s3.widgets.mindmap').directive('s3Mindmap',directive);function directive(){return{'restrict':'E','templateUrl':'/my/s3/js/angular/s3/widgets/mindmap/map/s3.mindmap.html','transclude':true,'scope':{'nodes':'='},'controller':controller,'controllerAs':'MindMapCtrl','bindToController':true}}controller.$inject=['$scope','$element','$timeout','_','jsPlumb'];function controller($scope,$element,$timeout,_,jsPlumb){var $this=this,actionJsPlumbInstance=jsPlumb.getInstance(_getStylePreset('action')),paramJsPlumbInstance=jsPlumb.getInstance(_getStylePreset('param'));paramJsPlumbInstance.setScope(actionJsPlumbInstance);$this.drawNode=drawNode;function drawNode(nodeScope,element){var node=nodeScope.node,nodePosition=node.position;node.dom=element;if(!node.code_id){return}if(_.isArray(nodePosition)&&nodePosition.length==2){var x=nodePosition[0],y=nodePosition[1];element.css({position:'absolute',left:x,top:y}).attr('id',node.code_id)}$scope.$watch(function(){return node.modified},$.debounce(500,function(){reDrawAllConnections()}));element.draggable({helper:'original',drag:function(){actionJsPlumbInstance.repaintEverything();paramJsPlumbInstance.repaintEverything()},stop:function(){node.position=[parseInt(element.css('left')),parseInt(element.css('top'))]}})}function reDrawAllConnections(){actionJsPlumbInstance.reset();paramJsPlumbInstance.reset();_.forEach($this.nodes,function(node){drawConnectionsForNode(node)})}function drawConnectionsForNode(node){if(node.prev_action_id){var parent=$this.nodes[node.prev_action_id];drawActionLinkBetweenNodes(parent,node)}_.forEach(node.params.incoming,function(param){if(!param.from_action_id){return}var parent_action_id=param.from_action_id,parent_alias=param.from_param_alias,parent=$this.nodes[parent_action_id],parent_param=parent.params.outgoing[parent_alias];drawParamLink(node,param,parent,parent_param)})}function drawActionLinkBetweenNodes(parent,child){$timeout(function(){parent.anchors.bottom.connected=true;child.anchors.top.connected=true;var connectId=actionJsPlumbInstance.connect({source:parent.dom,target:child.dom,detachable:false});parent.child=connectId;child.parent=connectId});if(!parent.currentChildsCount){parent.currentChildsCount=0}else if(typeof parent.currentChildsCount!='number'){parent.currentChildsCount=parseInt(parent.currentChildsCount)}parent.currentChildsCount++}function drawParamLink(node,param,parent,parent_param){var sourceSubclass=param.incoming?'incoming':'outgoing',targetSubclass=param.incoming?'outgoing':'incoming',sourceJq=node.dom,targetJq=parent.dom,sourceParam=node.dom.find('.param-list.'+sourceSubclass+' .param-'+param.alias),targetParam=parent.dom.find('.param-list.'+targetSubclass+' .param-'+parent_param.alias),sourceParamOffset=sourceParam.offset(),targetParamOffset=targetParam.offset(),sourceOffset=sourceJq.offset(),targetOffset=targetJq.offset(),sourceWidth=sourceJq.outerWidth(),sourceHeight=sourceJq.outerHeight(),targetWidth=targetJq.outerWidth(),targetHeight=targetJq.outerHeight(),sourceParamWidth=sourceParam.outerWidth(),sourceParamHeight=sourceParam.outerHeight(),targetParamHeight=targetParam.outerHeight(),offsets={'targetX':0,'targetY':0,'sourceX':0,'sourceY':0};offsets.targetX=(targetParamOffset.left-(targetOffset.left)+sourceParamWidth)/targetWidth;offsets.targetY=(targetParamOffset.top-targetOffset.top+targetParamHeight/2)/targetHeight;offsets.sourceX=(sourceOffset.left-sourceParamOffset.left)/sourceWidth;offsets.sourceY=(sourceParamOffset.top-sourceOffset.top+sourceParamHeight/2)/sourceHeight;paramJsPlumbInstance.connect({anchors:[[offsets.sourceX*-1,offsets.sourceY],[offsets.targetX,offsets.targetY]],source:node.dom,target:parent.dom,detachable:false})}function _getStylePreset(type){var def={},preset={};switch(type){case"action":preset={Anchors:['Bottom','Top'],Connector:"Flowchart",Endpoint:"Dot",EndpointStyle:{fillStyle:"#48be45",radius:4},PaintStyle:{lineWidth:3,strokeStyle:"#48be45"}};break;case"param":preset={Connector:"Bezier",Endpoint:"Dot",EndpointStyle:{fillStyle:"#15c",radius:3},PaintStyle:{lineWidth:3,strokeStyle:"#15c"}};break}return preset}}})(angular);(function(angular){'use strict';angular.module('s3.widgets.mindmap').directive('s3MindmapItem',directive);function directive(){return{'require':'^s3Mindmap','restrict':'E','replace':true,'templateUrl':'/my/s3/js/angular/s3/widgets/mindmap/item/s3.mindmap.item.html','transclude':true,'scope':{'node':'='},'link':function(scope,element,attrs,s3MindmapController){s3MindmapController.drawNode(scope,element)}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSortPanel',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/sort.panel/s3.dynamic.sort.panel.html','controller':controller,'controllerAs':'Panel','bindings':{'type':'=','sortParams':'=?','params':'=?','model':'=?','onSelect':'=','keyStorage':'@?','storage':'=?'}});controller.$inject=['_','dynamicTypeParamDataService','dynamicActionTreeService'];function controller(_,dynamicTypeParamDataService,dynamicActionTreeService){var $this=this,sortParams=[],params_link={},params={},sortSystemFields=[{name:'general.created',alias:'created'},{name:'general.modified',alias:'modified'}];this.asc=asc;this.desc=desc;this.getText=getText;this.sortRevert=sortRevert;this.reset=reset;if(this.params){this.sortParams=[];var systemFields={},index=0;_.each($this.params,function(param,key){if(!params[param.type]){params_link[param.type]={};params[param.type]=[]}params[param.type].push(param.alias);params_link[param.type][param.alias]=key});dynamicTypeParamDataService.getListForSortByAliases({'types':params}).then(function(response){index=0;_.each(params,function(param,type_alias){if(response[type_alias]){_.each(response[type_alias],function(type,key){sortParams.push(response[type_alias][key])})}});$this.sortParams=sortSystemFields.concat(sortParams);if(!$this.storage[$this.keyStorage].settings.params['sort']){$this.storage[$this.keyStorage].settings.params['sort']={}}$this.model=$this.storage[$this.keyStorage].settings.params['sort']})}function asc(param){console.log(param);clearModel();if($this.model[param.alias]=='asc'){}else{$this.model[param.alias]='asc'}callback(param)}function desc(param){clearModel();if($this.model[param.alias]=='desc'){}else{$this.model[param.alias]='desc'}callback(param)}function callback(param){$this.active={'name':param.name,'alias':param.alias,'type':$this.model[param.alias]};if($this.params){if(typeof $this.storage[$this.keyStorage]!='undefined'){var actionData={keyStorage:$this.keyStorage,actionData:$this.storage[$this.keyStorage].settings};if($this.storage){dynamicActionTreeService.runAction(actionData,$this.storage)}}}else{if(typeof $this.onSelect=='function'){$this.onSelect.call($this)}}}function getText(param,type){if(param.control_id!=17){return'sort.'+type}else{if(type=='asc'){return'general.no'}else{return'general.yes'}}}function sortRevert(){if($this.active){if($this.active.type=='asc'){desc($this.active)}else{asc($this.active)}}}function reset(){delete $this.active;if($this.params){if(typeof $this.storage[$this.keyStorage]!='undefined'){clearModel();var actionData={keyStorage:$this.keyStorage,actionData:$this.storage[$this.keyStorage].settings};if($this.storage){dynamicActionTreeService.runAction(actionData,$this.storage)}}}else{$this.type.m.search.resetSort()}}function clearModel(){_.each($this.model,function(param,key){delete $this.model[key]})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicModuleTitle',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/module.title/s3.dynamic.module.title.html','bindings':{title:'@?',subtitle:'@?',modulename:'@?',hideDynamicMainMenu:'='}})})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicMainMenu',{'controller':controller,'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/main.menu/s3.dynamic.main.menu.html'});controller.$inject=['$stateParams','$timeout'];function controller($stateParams,$timeout){var $this=this,regexp;this.type=false;this.typeParam=false;this.dt_type_id=$stateParams.dt_type_id;$timeout(function(){if($this.dt_type_id>0){$this.type=true;regexp=new RegExp('.*'+$this.dt_type_id+'/param');if(location.hash&&location.hash.match(regexp)){$this.typeParam=true}}})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchTimeRange',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/6.time.range/s3.dynamic.search.time.range.html','controller':controller,'controllerAs':'Time','bindings':{'model':'=','param':'='}});controller.$inject=['_','$element','$timeout'];function controller(_,$element,$timeout){$timeout(function(){var input=$element.find('input.s3-input-text');if(input.length){input.datetimepicker({dateFormat:'dd.mm.yy',timeFormat:'HH:mm',timeInput:true})}})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchGeo',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/9.geo/s3.dynamic.search.geo.html','controller':controller,'controllerAs':'Geo','bindings':{'param':'=','model':'='}});controller.$inject=['$rootScope','$element','$http','leafletData'];function controller($rootScope,$element,$http,leafletData){var $this=this,collection={},firstOpen=true,_draw={'control':false,'items':new L.FeatureGroup()},map,timer;this._draw=_draw;this.measure='km';this.layers={baselayers:getBaseLayers('yandex')};this.fullScreen=fullScreen;this.changeType=changeType;this.geoFind=geoFind;this.selectGeoObject=selectGeoObject;this.setDistance=setDistance;this.regex=regex;this.getCurrentPosition=getCurrentPosition;activate();function getCurrentPosition(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(result){map.setZoom(8);map.panTo([result.coords.latitude,result.coords.longitude]);firstOpen=false},function(){map.setZoom(3);firstOpen=false})}else{}}function loadCurrentGeoDone(result){map.panTo([result.coords.latitude,result.coords.longitude]);map.setZoom(8)}function loadCurrentGeoFail(){}function parseModel(){if(!$this.model||!$this.model[$this.param.alias]){$this.model={};$this.model[$this.param.alias]={}}else{var model=$this.model[$this.param.alias];$this.preModel={};if(model['type']=='geo_distance'){$this.preModel={};$this.typeSearch='marker';if(model.distance){$this.preModel['distance']=model.distance.replace(new RegExp(/\D*$/,"g"),'');$this.measure=model.distance.replace(new RegExp(/[^km]*/,"g"),'')}_draw.items.addLayer(L.marker([model.lat,model.lon]));changeDrawControl([$this.typeSearch])}else if(model['type']=='geo_shape'){$this.typeSearch='collection';changeDrawControl(['polygon']);_.each(model.geometries,function(item){drawLayerByGeo(item)})}}map.addLayer(_draw.items)}function clearLayersOnMap(){_draw.items.clearLayers()}function drawLayerByGeo(geoJSON){var layer=L.GeoJSON.geometryToLayer(geoJSON);_draw.items.addLayer(layer);collection[layer._leaflet_id]=layer.toGeoJSON()}function changeDrawControl(controls){var _controls={circle:false,polyline:false,polygon:false,rectangle:false,marker:false,circlemarker:false};_.forEach(controls,function(control){delete _controls[control]});if(_draw.control){map.removeControl(_draw.control);_draw.control=false}if(!_.size(controls)){return}_draw.control=new L.Control.Draw({edit:{featureGroup:_draw.items},draw:_controls});map.addControl(_draw.control)}function onDrawEdited(e){e.layers.eachLayer(function(layer){collection[layer._leaflet_id]=layer.toGeoJSON();$this.model[$this.param.alias]['geometries']=collectionParse()})}function onDrawDeleted(e){e.layers.eachLayer(function(layer){delete collection[layer._leaflet_id];$this.model[$this.param.alias]['geometries']=collectionParse()})}function onDrawCreated(e){var layer=e.layer,temp;if($this.typeSearch=='marker'){clearLayersOnMap()}_draw.items.addLayer(layer);if($this.typeSearch=='marker'){temp=layer.getLatLng();$this.model[$this.param.alias]['lat']=temp.lat;$this.model[$this.param.alias]['lon']=temp.lng}else if($this.typeSearch=='collection'){collection[layer._leaflet_id]=layer.toGeoJSON();$this.model[$this.param.alias]['geometries']=collectionParse()}}function collectionParse(){var _collection=[];_.each(collection,function(item){_collection.push(item.geometry)});return _collection}function getBaseLayers(tile){var baseLayers={},crs,errorTileUrl,attribution;switch(tile){case"google":baseLayers={googleTerrain:{name:'Google Terrain',type:'custom',layer:new L.Google('ROADMAP')},googleHybrid:{name:'Google Hybrid',type:'custom',layer:new L.Google('HYBRID')},googleRoadmap:{name:'Google Streets',type:'custom',layer:new L.Google('TERRAIN')}};break;case"yandex":crs=L.CRS.EPSG3395;attribution='&copy; Яндекс <a target="_blank" href="https://yandex.ru/legal/maps_termsofuse/?lang=ru">Условия использования</a>';baseLayers={yandex:{name:'Schema',type:'custom',layer:L.tileLayer('//vec{s}.maps.yandex.net/tiles?l=map&v='+$rootScope.YMAPS.map+'&z={z}&x={x}&y={y}&scale=2&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:attribution,reuseTiles:true,updateWhenIdle:false,crs:crs})},yandexTraffic:{name:'Traffic',type:'custom',layer:L.layerGroup([L.tileLayer('//vec{s}.maps.yandex.net/tiles?l=map&v='+$rootScope.YMAPS.map+'&z={z}&x={x}&y={y}&scale=2&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:attribution,reuseTiles:true,updateWhenIdle:false,crs:crs}),L.tileLayer('//jgo.maps.yandex.net/1.1/tiles?l=trf,trfl&lang=ru_RU&x={x}&y={y}&z={z}&tm={tm}',{reuseTiles:true,updateWhenIdle:false,crs:crs,tm:function(){return Math.ceil((new Date().getTime())/1000)}})])},yandexHybrid:{name:'Hybrid',type:'custom',layer:L.layerGroup([L.tileLayer('//sat{s}.maps.yandex.net/tiles?l=sat&v='+$rootScope.YMAPS.sat+'&x={x}&y={y}&z={z}&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:attribution,reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs}),L.tileLayer('//vec{s}.maps.yandex.net/tiles?l=skl&v='+$rootScope.YMAPS.skl+'&z={z}&x={x}&y={y}&scale=2&lang=ru_RU',{subdomains:['01','02','03','04'],reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs})])},yandexSatellite:{name:'Satellite',type:'custom',layer:L.tileLayer('//sat{s}.maps.yandex.net/tiles?l=sat&v='+$rootScope.YMAPS.sat+'&x={x}&y={y}&z={z}&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:attribution,reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs})}};break}return baseLayers}function activate(){leafletData.getMap("map-"+$this.param.alias).then(function(m){map=m;map.options.crs=L.CRS.EPSG3395;map.setMaxZoom(18);map.setZoom(3);parseModel();map.on('draw:editstart',function(){map.off('click')});map.on('draw:edited',onDrawEdited);map.on('draw:deleted',onDrawDeleted);map.on('draw:created',onDrawCreated)})}function changeType(type){clearLayersOnMap();$this.model[$this.param.alias]={};$this.preModel={};$this.typeSearch=type;switch(type){case'marker':$this.model[$this.param.alias]['type']='geo_distance';changeDrawControl([type]);break;case'collection':$this.model[$this.param.alias]['type']='geo_shape';$this.model[$this.param.alias]['type_shape']='geometrycollection';changeDrawControl(['polygon']);break}}function geoFind(){clearTimeout(timer);timer=setTimeout(function(){var value=$this.suggestText;$http.get('https://geocode-maps.yandex.ru/1.x/?format=json&geocode='+value+'&results='+10+'&skip='+0).then(function(response){parseGeoFindResults(response.data.response)})},500)}function parseGeoFindResults(results){$this.total=results.GeoObjectCollection.metaDataProperty.found;if(results.GeoObjectCollection.featureMember.length==1){selectGeoObject(results.GeoObjectCollection.featureMember[0])}else{$this.geoFindResults=results.GeoObjectCollection.featureMember}}function selectGeoObject(geo){$this.geoFindResults=[];$this.suggestText=geo.GeoObject.name;var coords=geo.GeoObject.Point.pos;coords=coords.split(" ");coords=[coords[1],coords[0]];map.setView(coords,11);objectParam.map.zoom=map.getZoom();objectParam.map.center=map.getCenter()}function setDistance(){$this.model[$this.param.alias]['distance']=$this.preModel['distance']+$this.measure}function regex(value){return value.replace(new RegExp(/[^.0-9]*/,"g"),'')}function fitBounds(){var bounds=_draw.items.getBounds();setTimeout(function(){map.fitBounds(bounds)},1);firstOpen=false}function fullScreen(fullscreen){if(!fullscreen){cancelFullscreen()}else{launchFullScreen($element.get(0))}}function launchFullScreen(element){if(element.requestFullScreen){element.requestFullScreen()}else if(element.mozRequestFullScreen){element.mozRequestFullScreen()}else if(element.webkitRequestFullScreen){element.webkitRequestFullScreen()}}function cancelFullscreen(){if(document.cancelFullScreen){document.cancelFullScreen()}else if(document.mozCancelFullScreen){document.mozCancelFullScreen()}else if(document.webkitCancelFullScreen){document.webkitCancelFullScreen()}}var onfullscreenchange=function(){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement;if(fullscreenElement){if(firstOpen&&(_.size(collection)>0||$this.typeSearch=='marker')){fitBounds()}else if(firstOpen&&_.size(collection)==0&&$this.typeSearch!='marker'){getCurrentPosition()}}map.invalidateSize()};document.addEventListener("webkitfullscreenchange",onfullscreenchange);document.addEventListener("mozfullscreenchange",onfullscreenchange);document.addEventListener("fullscreenchange",onfullscreenchange)}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchText',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/1.text/s3.dynamic.search.text.html','controller':controller,'controllerAs':'Text','bindings':{'model':'=','param':'='}});controller.$inject=['_'];function controller(_){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchSelect',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/3.select/s3.dynamic.search.select.html','controller':controller,'controllerAs':'Select','bindings':{'param':'=','model':'='}});controller.$inject=['_'];function controller(_){var $this=this;this.nameUpdate=nameUpdate;if(_.size(this.param.options)>1){this.option_key='option_id';if(!_.isArray(this.param.options)){this.options=_.values(this.param.options)}else{this.options=this.param.options}}else if(_.size(this.param.list)>1){this.option_key='object_id'}function nameUpdate(object){if(object._level){var text='';for(var i=0;i<object._level;i++){text=text+'»'}return text+' '+object.name}else{return object.name}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchTextRange',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/2.text.range/s3.dynamic.search.text.range.html','controller':controller,'controllerAs':'Text','bindings':{'model':'=','param':'='}});controller.$inject=['_'];function controller(_){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchCheckbox',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/4.checkbox/s3.dynamic.search.checkbox.html','controller':controller,'controllerAs':'Checkbox','bindings':{'param':'=','model':'='}});function controller(){}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchForm',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/s3.dynamic.search.form.html','controller':controller,'controllerAs':'Form','bindings':{'params':'=','searchParams':'=?','model':'=?','title':'@','typeCtrl':'=','keyStorage':'@?','storage':'=?','fullTextParams':'='}});controller.$inject=['$window','_','$scope','dynamicTypeParamDataService','dynamicActionTreeService','s3PopupService'];function controller($window,_,$scope,dynamicTypeParamDataService,dynamicActionTreeService,s3PopupService){var $this=this,params={},params_link={},searchParams=[],stepGroup=3,hardSearch={},hardSearchCheck=false;this.show=false;this.textButton='general.searchShow';this.paramsGroup=[];this.notSearch=true;if(this.params){this.searchData={dt_full_text_search:''}}else{this.typeCtrl.search.search=this.searchData}this.showToggle=showToggle;this.showFormEx=showFormEx;this.searchText=searchText;this.resetSearch=resetSearch;this.search=search;$scope.$watch(function(){return $this.searchData},function(){if($this.params){}else{$this.typeCtrl.search.search=$this.searchData}});$scope.$watch(function(){return $this.searchParams},function(){if($this.searchParams){$this.paramsGroup.length=0;var i=0,tmp=[];_.each($this.searchParams,function(param,index){if(!param.big&&param.search_cms_control_id!=7){i++;tmp.push(param)}else{$this.paramsGroup.push([param])}if(i==stepGroup||index==$this.searchParams.length-1){$this.paramsGroup.push(tmp);tmp=[];i=0}})}});function showToggle(){$this.show=!$this.show;if($this.show){$this.textButton='general.searchHide'}else{$this.textButton='general.searchShow'}}if(this.params){this.searchParams=[];var systemFields={},index=0;_.each($this.params,function(param,key){if(param.alias!='created'&&param.alias!='modified'){if(!params[param.type]){params_link[param.type]={};params[param.type]=[]}if(param['control_id']){params[param.type].push(param.alias);params_link[param.type][param.alias]=key}}else{systemFields[index]=systemFieldsCreated(param,key)}index++});dynamicTypeParamDataService.getListForSearchByAliases({'types':params}).then(function(response){index=0;_.each(params,function(param,type_alias){if(response[type_alias]){_.each(response[type_alias],function(type,key){if(systemFields[index]){searchParams.push(systemFields[index]);index++}response[type_alias][key]['search_cms_control_id']=$this.params[params_link[type_alias][type['alias']]]['control_id'];if($this.params[params_link[type_alias][type['alias']]]['big']){response[type_alias][key]['big']=true}if($this.params[params_link[type_alias][type['alias']]]['multiple']){response[type_alias][key]['search_cms_control_id']=7}if($this.params[params_link[type_alias][type['alias']]]['mode']){response[type_alias][key]['mode']=$this.params[params_link[type_alias][type['alias']]]['mode']}else{response[type_alias][key]['mode']='should'}if($this.params[params_link[type_alias][type['alias']]]['name']){response[type_alias][key]['name']=$this.params[params_link[type_alias][type['alias']]]['name']}response[type_alias][key]['alias']=params_link[type_alias][type['alias']];searchParams.push(response[type_alias][key]);index++})}});$this.searchParams=searchParams})}function systemFieldsCreated(param,key){var searchParam={};switch(param.alias){case'created':searchParam={search_cms_control_id:param.control_id,name:'general.created',alias:key,param_id:key};break;case'modified':searchParam={search_cms_control_id:param.control_id,name:'general.modified',alias:key,param_id:key};break}return searchParam}function showFormEx(){var data={'maxWidth':'676px','s3_dt_search':true,'align':true,'type':$this.typeCtrl,'form':$this};return s3PopupService.modalDtSearch('/my/s3/js/angular/s3/data/dynamic/components/search.form/s3.dynamic.search.form.ex.html',data)}function searchText(data){if($this.params){if(typeof $this.storage[$this.keyStorage]!='undefined'){if(_.size($this.storage[$this.keyStorage].settings['params']['search'])){$this.storage['hardSearch']=JSON.parse(JSON.stringify($this.storage[$this.keyStorage].settings['params']['search']))}else{$this.storage['hardSearch']={}}if(data!=''){if($this.fullTextParams){$this.storage[$this.keyStorage].settings['params']['search']={dt_full_text_search:{value:data}};if(typeof $this.fullTextParams.fields!='undefined'){$this.storage[$this.keyStorage].settings['params']['search']['dt_full_text_search']['fields']=$this.fullTextParams.fields}}else{$this.storage[$this.keyStorage].settings['params']['search']={dt_full_text_search:data}}$.extend($this.storage[$this.keyStorage].settings['params']['search'],$this.storage[$this.keyStorage]['hardSearch']);$this.notSearch=false}else{if(hardSearchCheck&&_.size($this.storage['hardSearch'])){$this.storage[$this.keyStorage].settings['params']['search']=$this.storage[$this.keyStorage]['hardSearch']}else{delete $this.storage[$this.keyStorage].settings['params']['search']}$this.notSearch=true}$this.storage[$this.keyStorage].settings['params'].start=0;if($this.storage[$this.keyStorage].settings['params']['search']==$this.storage[$this.keyStorage]['hardSearch']){$this.storage[$this.keyStorage]['count_rewrite']=true}else{$this.storage[$this.keyStorage]['count_rewrite']=false}var actionData={keyStorage:$this.keyStorage,actionData:$this.storage[$this.keyStorage].settings};if($this.storage){dynamicActionTreeService.runAction(actionData,$this.storage)}}}else{$this.notSearch=false;$this.typeCtrl.m.search.searchText(data)}}function search(data){if($this.params){if(typeof $this.storage[$this.keyStorage]!='undefined'){if(_.size($this.storage[$this.keyStorage]['hardSearch'])==0&&!hardSearchCheck){if(_.size($this.storage[$this.keyStorage].settings['params']['search'])){$this.storage['hardSearch']=JSON.parse(JSON.stringify($this.storage[$this.keyStorage].settings['params']['search']))}else{$this.storage['hardSearch']={}}hardSearchCheck=true}$this.storage[$this.keyStorage].settings['params']['search']=data;$.extend($this.storage[$this.keyStorage].settings['params']['search'],$this.storage['hardSearch']);$this.storage[$this.keyStorage].settings['params'].start=0;if($this.storage[$this.keyStorage].settings['params']['search']==$this.storage['hardSearch']){$this.notSearch=true}else{$this.notSearch=false}if($this.storage[$this.keyStorage].settings['params']['search']==$this.storage['hardSearch']){$this.storage[$this.keyStorage]['count_rewrite']=true}else{$this.storage[$this.keyStorage]['count_rewrite']=false}var actionData={keyStorage:$this.keyStorage,actionData:$this.storage[$this.keyStorage].settings,callback:s3PopupService.closeLast(false)};if($this.storage){dynamicActionTreeService.runAction(actionData,$this.storage)}}}else{$this.notSearch=false;$this.typeCtrl.m.search.search(data)}}function resetSearch(){$this.searchData={};if($this.params){if(typeof $this.storage[$this.keyStorage]!='undefined'){if(hardSearchCheck&&_.size(hardSearch)){$this.storage[$this.keyStorage].settings['params']['search']=$this.storage['hardSearch']}else{delete $this.storage[$this.keyStorage].settings['params']['search']}$this.storage[$this.keyStorage].settings['params'].start=0;$this.notSearch=true;var actionData={keyStorage:$this.keyStorage,actionData:$this.storage[$this.keyStorage].settings,callback:s3PopupService.closeLast(false)};if($this.storage){dynamicActionTreeService.runAction(actionData,$this.storage)}}}else{$this.notSearch=true;$this.typeCtrl.m.search.resetSearch()}}angular.element($window).on('off');angular.element($window).on('keyup',function(e){if($("#s3-dt_products_search_form").find("select:focus, input:focus").length>0&&(e.keyCode==13)){$("#s3-dt_products_search_form button").trigger('click')}})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchExist',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/8.exist/s3.dynamic.search.exist.html','controller':controller,'controllerAs':'Exist','bindings':{'param':'=','model':'='}});controller.$inject=[];function controller(){var $this=this;this.changer=changer;if(this.model&&this.model[this.param.alias]){if(this.model[this.param.alias].value){if(typeof this.model[this.param.alias].value.to!='undefined'){this.change=0}else if(this.model[this.param.alias].value.from){this.change=1}}}function changer(value){$this.change=value;if(value==0){$this.model[$this.param.alias]={value:{to:0}}}else if(value==1){$this.model[$this.param.alias]={value:{from:1}}}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchTime',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/5.time/s3.dynamic.search.time.html','controller':controller,'controllerAs':'Time','bindings':{'model':'=','param':'='}});controller.$inject=['_','$element','$timeout'];function controller(_,$element,$timeout){$timeout(function(){var input=$element.find('input.s3-input-text');if(input.length){input.datetimepicker({dateFormat:'dd.mm.yy',timeFormat:'HH:mm',timeInput:true})}})}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DynamicSearchSelectMultiple',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/components/search.form/7.select.multiple/s3.dynamic.search.select.multiple'+'.html','controller':controller,'controllerAs':'SelectMultiple','bindings':{'param':'=','model':'='}});controller.$inject=['_'];function controller(_){var $this=this;this.nameUpdate=nameUpdate;if(_.size(this.param.options)>1){this.option_key='option_id';if(!_.isArray(this.param.options)){this.options=_.values(this.param.options)}else{this.options=this.param.options}}else if(_.size(this.param.list)>1){this.option_key='object_id'}function nameUpdate(object){if(object._level){var text='';for(var i=0;i<object._level;i++){text=text+'»'}return text+' '+object.name}else{return object.name}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('dynamicTypeView',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/type/view/dynamic.type.view.html','controller':'DynamicTypeViewController','controllerAs':'Type','bindings':{'alias':'@','configView':'=','hardSearch':'=','action':'@?','actionParams':'=?'}})})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('dynamicObjectEdit',{'templateUrl':'/my/s3/js/angular/s3/data/dynamic/object/edit/dynamic.object.edit.html','controller':'DynamicObjectEditController','controllerAs':'Object','bindings':{'alias':'@','mode':'@','summoner':'='}})})(angular);(function(angular){'use strict';angular.module('s3.data.layout').component('dynamicLayout',{'template':'<div ng-include="\'/-/cms/v1/dynamic/layout/?alias=\' + $ctrl.alias + \'&\' + $root.ACCESS"></div>','bindings':{'alias':'@'}})})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3DtCalendar',{'controller':controller,'bindings':{'options':'=','model':'='},'template':'<div ui-calendar="$ctrl.uiConfig.calendar" ng-model="$ctrl.eventSources"></div>'});controller.$inject=['$scope','$element'];function controller($scope,$element){var $this=this,opts=this.options||{tooltipClass:"custom-tooltip-styling",position:{my:"left-5 top",at:"left bottom+5"}};this.eventSources=[];this.uiConfig={calendar:{schedulerLicenseKey:'CC-Attribution-NonCommercial-NoDerivatives',height:450,editable:true,locale:'ru',defaultView:'agendaDay',header:{left:'month basicWeek basicDay agendaWeek agendaDay',center:'title',right:'today prev,next'},firstDay:1,events:[{title:'event1',start:'2018-06-8',resourceId:'A'},{title:'event2',start:'2018-06-09',end:'2018-06-19',resourceId:'A'},{title:'event3',start:'2018-06-09T12:30:00',allDay:false,resourceId:'B'}],resourceOrder:'-type1,type2',resources:[{id:'A',title:'Resource A',type1:10,type2:55},{id:'B',title:'Resource B',type1:12,type2:60},{id:'C',title:'Resource C',type1:12,type2:50}]}};activate();function activate(){}}})(angular);(function(angular){'use strict';angular.module('s3.data').component('s3Pagelist',{'controller':controller,'controllerAs':'S3Pagelist','bindings':{'perPage':'=?','total':'=','actionData':'=?','list':'=?','type':'@?','keyStorage':'@'},'templateUrl':"/my/s3/js/angular/s3/widgets/components/pagelist/s3.pagelist.component.html"});controller.$inject=['$scope','$rootScope','_','dynamicActionTreeService'];function controller($scope,$rootScope,_,dynamicActionTreeService){var $this=this,limit=this.perPage||30,dataAction={},list={},keyStorage=this.keyStorage,firstStart=false;this.pageList=[];this.pageCurrent=1;this.step=5;this.pageChange=pageChange;if(!$this.list.pageCurrent){$this.list['pageCurrent']=1}$scope.$watch(function(){return $this.total},function(newValue,oldValue){if(newValue!=oldValue||!firstStart){firstStart=true;pageListCreate($this.total);dataAction=$this.actionData;list=$this.list}});function pageListCreate(n){var tmp={},tmp2=[],total=Math.ceil(n/limit);$this.step=5;if($this.list.pageCurrent<=$this.step){$this.step=$this.step*2-$this.list.pageCurrent+1}if($this.list.pageCurrent+$this.step>=total){$this.step=($this.step*2)-(total-$this.list.pageCurrent)}for(var i=1;i<=total;i++){tmp={n:i,active:false};if(i==$this.list.pageCurrent){tmp.active=true}tmp2.push(tmp)}$this.list['pageList']=tmp2}function pageChange(n,event){var target=$(event.currentTarget),start=(limit*(n-1));dataAction['params']['start']=start;dataAction['params']['limit']=limit;if(!target.is('.disabled')){dynamicActionTreeService.runAction({actionData:dataAction},list).then(function(){$this.list.pageCurrent=n;pageListCreate($this.total)})}}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3WordCounter',{'controller':controller,'bindings':{'model':'=','alias':'@'},'template':'<div class="s3-word-counter" ng-if="$ctrl.init"><span>'+s3.loc('JS_SYMBOLS_COUNT')+': <span class="s3-word-counter-symbols">{{$ctrl.symbols}}</span></span><span>'+s3.loc('JS_WORDS_COUNT')+': <span class="s3-word-counter-words">{{$ctrl.words}}</span></span></div>'});controller.$inject=['$scope'];function controller($scope){var $this=this,aliases=['seo_h1','seo_keywords','seo_title','seo_description','seoTitle','seoH1','seoDescription','seoKeywords','smt'];if(aliases.indexOf($this.alias)>=0){this.init=true;$scope.$watch(function(){return $this.model},function(){$this.symbols=$.trim($this.model).length||0;$this.words=($.trim($this.model)?$.trim($this.model).split(/(?:,+|\s+)(?=[^,\s])/).length:0)})}}})(angular);(function(angular){'use strict';angular.module('s3.data.layout').component('s3DtContent',{'controller':controller,'controllerAs':'S3DtContent','bindings':{'actions':'=?','loadData':'=?','box':'=?','template':'@'},'template':'<div class="s3-dt-content" ng-include="\'/-/cms/v1/dynamic/template/?alias=\' + S3DtContent.template + \'&\' + $root.ACCESS"></div>','transclude':true});controller.$inject=['$rootScope','_','s3PopupService','dynamicActionTreeService'];function controller($rootScope,_,s3PopupService,dynamicActionTreeService){var $this=this,dataAction={},Data={};this.buttonClick=$rootScope.fn.buttonClick;if(typeof this.box!='undefined'){_.each($this.box,function(item,key){$rootScope.storage[key]=item})}if(typeof this.actions!='undefined'){_.each($this.actions,function(actionData,actionKey){if(actionData.params){dataAction={'alias':actionKey,'params':actionData.params};Data={actionData:dataAction};if(actionData.keyStorage){Data['keyStorage']=actionData.keyStorage}else{Data['keyStorage']=actionKey}dynamicActionTreeService.runAction(Data,$rootScope.storage)}})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3Tooltip',{'controller':controller,'bindings':{'options':'=','model':'='},'template':'<span class="{{$ctrl.class}}" title="{{$ctrl.model.title | translate}}" ng-if="$ctrl.init">{{$ctrl.model.text | translate}}</span>'});controller.$inject=['$element'];function controller($element){var $this=this,opts=this.options||{tooltipClass:"custom-tooltip-styling",position:{my:"left-5 top",at:"left bottom+5"}};this.init=false;this.class="s3-tooltip";activate();function activate(){if($this.model.title){if($this.model.class){$this.class=$this.class+' '+$this.model.class}$element.tooltip(opts);$this.init=true}}}})(angular);(function(angular){'use strict';angular.module('s3.data').component('s3ListObjectMap',{'controller':controller,'bindings':{'objects':'=','keyStorage':'@?','storage':'=?','paramSearch':'=?','listParam':'@?','viewParams':'=?','mapParams':'=?'},'templateUrl':"/my/s3/js/angular/s3/widgets/components/list.object.map/s3.list.object.map.html"});controller.$inject=['$scope','$rootScope','$element','dynamicObjectService','leafletData'];function controller($scope,$rootScope,$element,dynamicObjectService,leafletData){var $this=this,map,_draw={'control':false,'items':new L.FeatureGroup()},layers={},leaflet_ids={},_cache={},map_state={},timer;this.height=700;this.pager={};this.layers={baselayers:getBaseLayers($this.mapParams.type)};this.defaults=getDefaults();this.selectPage=selectPage;function preparedObjects(){_.forEach($this.objects,function(object,k){if($this.listParam){if(object[$this.listParam]){if(!$this.pager[object[$this.listParam]]){$this.pager[object[$this.listParam]]=[]}}}if(_.isArray($this.viewParams)){_.forEach($this.viewParams,function(viewParam){if(object[viewParam]){if(typeof object[viewParam]=='string'){layers[k]=JSON.parse(object[viewParam])}else{layers[k]=object[viewParam]}}})}});console.log(layers)}activate();function setSize(){$this.width=$element.width()}$(window).on('resize',function(){setSize()});function activate(){preparedObjects();leafletData.getMap("map-list").then(function(m){map=m;if($this.mapParams.type=='yandex'){map.options.crs=L.CRS.EPSG3395}map.addLayer(_draw.items);setSize();drawLayersForAllParams();setTimeout(function(){map.invalidateSize()},0);switch($this.tail){case'yandex':map.setMaxZoom(18);break;case'google':map.setMaxZoom(18);break;case'custom':map.setMaxZoom(50);break;default:map.setMaxZoom(18)}})}function drawLayersForAllParams(){clearLayersOnMap();_.forEach(layers,function(layer,k){$this.pager[$this.objects[k][$this.listParam]].push(drawLayersByParam(layer))})}function clearLayersOnMap(){_draw.items.clearLayers()}function drawLayersByParam(param,clearLayers){if(clearLayers){clearLayersOnMap()}return drawLayerByGeo(param)}function selectPage(page){console.log($this.pager);clearLayersOnMap();_.forEach(page,function(l){console.log($this.pager[page]);_draw.items.addLayer(l)})}function getNewKey(key){return'_'+key}function drawLayerByGeo(geoJSON){console.log(geoJSON);var l=L.GeoJSON.geometryToLayer(geoJSON);_draw.items.addLayer(l);return l}function getBaseLayers(tile){var baseLayers={},crs;switch(tile){case"google":baseLayers={googleTerrain:{name:'Streets',type:'custom',layer:new L.Google('ROADMAP')},googleHybrid:{name:'Hybrid',type:'custom',layer:new L.Google('HYBRID')},googleRoadmap:{name:'Terrain',type:'custom',layer:new L.Google('TERRAIN')}};break;case"yandex":baseLayers={yandex:{name:'Schema',type:'custom',layer:L.tileLayer('//vec{s}.maps.yandex.net/tiles?l=map&v=18.05.04-1&z={z}&x={x}&y={y}&scale=1&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:'&copy; Яндекс <a target="_blank" href="https://yandex.ru/legal/maps_termsofuse/?lang=ru">Условия использования</a>',reuseTiles:true,updateWhenIdle:false,crs:crs})},yandexTraffic:{name:'Traffic',type:'custom',layer:L.layerGroup([L.tileLayer('//vec{s}.maps.yandex.net/tiles?l=map&v=18.05.04-1&z={z}&x={x}&y={y}&scale=2&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:'&copy; Яндекс <a target="_blank" href="https://yandex.ru/legal/maps_termsofuse/?lang=ru">Условия использования</a>',reuseTiles:true,updateWhenIdle:false,crs:crs}),L.tileLayer('//jgo.maps.yandex.net/1.1/tiles?l=trf,trfl&lang=ru_RU&x={x}&y={y}&z={z}&tm={tm}',{attribution:'&copy; Яндекс <a target="_blank" href="https://yandex.ru/legal/maps_termsofuse/?lang=ru">Условия использования</a>',reuseTiles:true,updateWhenIdle:false,crs:crs,tm:function(){return Math.ceil((new Date().getTime())/1000)}})])},yandexHybrid:{name:'Hybrid',type:'custom',layer:L.layerGroup([L.tileLayer('//sat{s}.maps.yandex.net/tiles?l=sat&v=3.390.0&x={x}&y={y}&z={z}&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:'&copy; Яндекс <a target="_blank" href="https://yandex.ru/legal/maps_termsofuse/?lang=ru">Условия использования</a>',reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs}),L.tileLayer('//vec{s}.maps.yandex.net/tiles?l=skl&v=18.05.04-1&z={z}&x={x}&y={y}&scale=2&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:'&copy; Яндекс <a target="_blank" href="https://yandex.ru/legal/maps_termsofuse/?lang=ru">Условия использования</a>',reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs})])},yandexSatellite:{name:'Satellite',type:'custom',layer:L.tileLayer('//sat{s}.maps.yandex.net/tiles?l=sat&v=3.390.0&x={x}&y={y}&z={z}&lang=ru_RU',{subdomains:['01','02','03','04'],attribution:'&copy; Яндекс <a target="_blank" href="https://yandex.ru/legal/maps_termsofuse/?lang=ru">Условия использования</a>',reuseTiles:true,updateWhenIdle:false,maxZoom:18,crs:crs})}};break;case"custom":var image=$this.param.map_image;if(!image){baseLayers=getBaseLayers('yandex')}else{baseLayers={custom:{name:'Custom',type:'imageOverlay',url:image.filepath,bounds:[[(image.height/2)*-1,(image.width/ 2) * -1], [image.height/2,image.width/2]]}}}break;case"osm":baseLayers={openstreetmap:{name:'Roadmap',type:'custom',layer:L.tileLayer('//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{subdomains:['a','b','c'],attribution:'&copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors',reuseTiles:true,updateWhenIdle:false})}};break}return baseLayers}function getDefaults(){var defaults={};switch($this.tile){case"custom":defaults.crs='Simple';defaults.minZoom=-5;break}return defaults}}})(angular);(function(angular){'use strict';angular.module('s3.data').component('s3GroupOperations',{'controller':controller,'controllerAs':'S3GroupOperations','bindings':{'model':'=?','objects':'=','groups':'=','undelete':'=','keyStorage':'@?','storage':'=?','allCount':'=?','paramSearch':'=?','perPage':'=?'},'templateUrl':"/my/s3/js/angular/s3/widgets/components/group.operations/s3.group.operations.component.html"});controller.$inject=['$scope','$rootScope','_','dynamicObjectService'];function controller($scope,$rootScope,_,dynamicObjectService){var $this=this,operations={'delete':{'name':'dynamic.object.groupOp.remove','alias':'delete','group':''},'edit':{'name':'dynamic.object.groupOp.edit','alias':'edit','group':''}};this.run=run;this.checkAll=checkAll;activate();function activate(){if($this.storage&&$this.keyStorage){$this.model={'list':{},'all':false,'count':0,'allCount':$this.allCount,'paramSearch':$this.paramSearch,'perPage':$this.perPage};$this.storage[$this.keyStorage]={'model':$this.model,'groupChange':groupChange};$scope.$watch(function(){return $this.objects},function(newValue,oldValue){$this.model.all=false;$this.model.list={};$this.model.count=0;$this.model.allCount=$this.allCount;$this.model.paramSearch=$this.paramSearch;$this.model.perPage=_.size($this.objects)})}if($this.undelete==1&&!$rootScope.isStaff()){delete operations['delete']}if($this.groups){_.each($this.groups,function(trees,groupName){_.each(trees,function(name,alias){operations['tree-'+alias]={'name':name,'alias':alias,'group':groupName}})})}$this.operations=operations}function run(){var object_ids=Object.keys($this.model.list),dt_type_id,data;for(var key in $this.objects){dt_type_id=$this.objects[key].dt_type_id;break}if($this.model.all){data={dt_type_id:dt_type_id,list:$this.objects,paramSearch:$this.model.paramSearch,limit:$this.model.count}}else{data={dt_type_id:dt_type_id,object_ids:object_ids,list:$this.objects}}switch($this.mode){case'delete':dynamicObjectService.removeGroup(data,function(){$this.model.allCount=$this.model.allCount-$this.model.count;$this.model.perPage=$this.model.perPage-$this.model.count;$this.model.all=false;$this.model.count=0;$this.model.list={}});break;case'edit':dynamicObjectService.editGroup(data,function(){$this.model.all=false;$this.model.count=0;$this.model.list={}});break;default:break}}function checkAll(allInType){if(allInType){if($this.model.all){$this.model.all=false;$this.model.count=0;$this.model.list={}}else{$this.model.all=true;$this.model.count=$this.model.allCount}}else{if($this.model.count==$this.model.perPage){$this.model.list={};$this.model.count=0}else{allChangeInPage();$this.model.all=false;$this.model.count=$this.model.perPage}}}function groupChange(object_id){if($this.model.all){$this.model.all=false;allChangeInPage()}if($this.model.list[object_id]){delete $this.model.list[object_id]}else{$this.model.list[object_id]=true}$this.model.count=_.size($this.model.list)}function allChangeInPage(){_.each($this.objects,function(object){$this.model.list[object.object_id]=true})}}})(angular);(function(angular){'use strict';angular.module('s3.data.dynamic').component('s3LinkSelect',{'controller':controller,'bindings':{'model':'=','alias':'@'},'template':'<div ng-if="$ctrl.init" class="url-link-note"> PAGE_PARAMS_ADD_LINK_TO <span class="objectChoose" onClick="selector.open(\'page\',false,false,false,false);">PAGE_PARAMS_TO_SITE_PAGE</span><span class="objectChoose" onClick="selector.open(\'file\',false,false,false,pageController.insertFile);">PAGE_PARAMS_TO_SITE_FILE</span></div>'});controller.$inject=[];function controller(){if(this.alias.match(/link$/i)){this.init=true}pageController.insertPage('/eris-map')}})(angular);